import L from "leaflet";
import { ColorArray } from "../../types/color";
import { Vector4 } from "../space";
export declare enum BuildingHighlightSelectionType {
    SELECT_AT_LOCATION = "selectAtLocation",
    SELECT_AT_SCREEN_POINT = "selectAtScreenPoint"
}
export declare class BuildingHighlightOptions {
    private _selectionLocationLatLng;
    private _selectionScreenPoint;
    private _selectionMode;
    private _color;
    private _informationOnly;
    constructor();
    highlightBuildingAtLocation: (latLng: L.LatLng) => this;
    highlightBuildingAtScreenPoint: (screenPoint: L.Point) => this;
    color: (color: ColorArray) => this;
    informationOnly: () => this;
    getSelectionMode: () => BuildingHighlightSelectionType;
    getSelectionLocation: () => L.LatLng;
    getSelectionScreenPoint: () => L.Point;
    getColor: () => Vector4;
    getIsInformationOnly: () => boolean;
}
export declare const buildingHighlightOptions: import("../../private/factoryFor").Constructor<typeof BuildingHighlightOptions>;
