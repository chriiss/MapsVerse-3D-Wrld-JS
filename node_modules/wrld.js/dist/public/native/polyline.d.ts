import L from "leaflet";
import { Color } from "../../types/color";
import { ElevationMode } from "../../types/elevationMode";
import { MapId, MapFloorId } from "../map";
import { WrldOptions } from "../../types/wrldOptions";
export declare type PolylineOptions = WrldOptions & {
    color?: Color;
    weight?: number;
    miterLimit?: number;
};
export declare class PolylineType extends L.Polyline {
    constructor(latlngs: L.LatLngExpression[], options?: PolylineOptions);
    getPoints(): L.LatLng[];
    getIndoorMapId(): MapId;
    getIndoorMapFloorId(): MapFloorId;
    setIndoorMapWithFloorId(indoorMapId: MapId, indoorMapFloorId: MapFloorId): this;
    getElevation(): number;
    setElevation(elevation: number): this;
    getElevationMode(): ElevationMode;
    setElevationMode(elevationMode: ElevationMode): this;
    getWidth(): number;
    getColor(): Color;
    getMiterLimit(): number;
    setOptions(options: PolylineOptions): this;
    setStyle(options: PolylineOptions): this;
}
export declare type Polyline = PolylineType;
export declare const Polyline: typeof PolylineType;
export declare const polyline: import("../../private/factoryFor").Constructor<typeof PolylineType>;
