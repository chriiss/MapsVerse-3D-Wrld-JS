import L from "leaflet";
import { WrldOptions } from "../types/wrldOptions";
import { ElevationMode } from "../types/elevationMode";
import Map from "./map";
export declare type PolygonOptions = L.PolylineOptions & WrldOptions;
declare class PolygonType extends L.Polygon {
    options: PolygonOptions;
    protected _map: Map;
    constructor(latlngs: L.LatLngExpression[] | L.LatLngExpression[][] | L.LatLngExpression[][][], options?: PolygonOptions);
    getElevation(): number;
    setElevation(elevation: number): this;
    getElevationMode(): ElevationMode;
    setElevationMode(elevationMode: ElevationMode): this;
    protected _setLatLngs(latlngs: L.LatLng[]): this;
}
export declare type Polygon = PolygonType;
export declare const Polygon: typeof PolygonType;
export declare const polygon: import("../private/factoryFor").Constructor<typeof PolygonType>;
export {};
