import type Map from "../map";
import { MapId } from "../map";
import type { IndoorMapEntity } from "./indoor_map_entity";
declare enum IndoorMapEntityInformationLoadStateType {
    NONE = "None",
    PARTIAL = "Partial",
    COMPLETE = "Complete"
}
export declare class IndoorMapEntityInformation {
    private _nativeId;
    private _map;
    private _indoorMapId;
    private _indoorMapEntities;
    private _loadState;
    constructor(indoorMapId: MapId);
    getIndoorMapId: () => string;
    getIndoorMapEntities: () => IndoorMapEntity[];
    getLoadState: () => IndoorMapEntityInformationLoadStateType;
    /**
     * Returns the auto-incrementing unique id of this IndoorMapEntityInformation object.
     */
    getId: () => number | null;
    /**
     * Returns the auto-incrementing unique id of this IndoorMapEntityInformation object.
     * @deprecated use {@link IndoorMapEntityInformation.getId}
     * @returns {number}
     */
    getNativeId: () => number | null;
    addTo: (map: Map) => this;
    remove: () => this;
}
export declare const indoorMapEntityInformation: import("../../private/factoryFor").Constructor<typeof IndoorMapEntityInformation>;
export {};
