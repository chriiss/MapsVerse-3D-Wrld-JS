{"version":3,"file":"wrld.js","sources":["../src/private/polyfills.js","../src/private/indoor_map_layer_options.js","../src/private/factoryFor.ts","../src/public/popup.ts","../src/public/space.ts","../src/public/map.ts","../src/private/html_map_container.js","../src/private/eegeo_dom_util.ts","../src/private/elevation_mode.ts","../src/public/marker.ts","../src/private/indoor_entrance_marker_updater.js","../src/private/events/map_move_events.ts","../src/private/modules/map_module.ts","../src/public/themes.ts","../src/private/modules/themes_module.ts","../src/public/indoors/indoor_map.ts","../src/public/indoors/indoor_map_entrance.ts","../src/public/indoors/indoor_map_floor.ts","../src/private/indoor_watermark_controller.js","../src/private/modules/indoors_module.js","../src/private/id_to_object_map.js","../src/public/precaching/precache_operation_result.ts","../src/private/modules/precache_module.js","../src/private/modules/camera_module.js","../src/private/modules/polygon_module.js","../src/private/modules/polyline_module.js","../src/private/modules/routing_module.js","../src/private/modules/rendering_module.js","../src/private/modules/buildings_module.js","../src/private/modules/prop_module.js","../src/private/modules/indoor_map_entity_information_module.js","../src/private/modules/indoor_map_floor_outline_information_module.js","../src/private/modules/blue_sphere_module.js","../src/private/modules/map_runtime_module.js","../src/private/modules/layer_point_mapping_module.js","../src/private/modules/version_module.js","../src/private/modules/heatmap_module.js","../src/private/modules/frame_rate_module.js","../src/private/eegeo_map_controller.js","../src/private/emscripten_api/emscripten_memory.js","../src/private/emscripten_api/emscripten_interop_utils.js","../src/private/emscripten_api/emscripten_geofence_api.js","../src/private/emscripten_api/emscripten_indoors_api.js","../src/private/emscripten_api/emscripten_precache_api.js","../src/private/emscripten_api/emscripten_spaces_api.js","../src/private/emscripten_api/emscripten_themes_api.js","../src/private/emscripten_api/emscripten_camera_api.js","../src/private/emscripten_api/emscripten_expand_floors_api.js","../src/private/emscripten_api/emscripten_indoor_entity_api.js","../src/public/buildings/building_highlight.ts","../src/public/buildings/building_highlight_options.ts","../src/public/buildings/building_information.ts","../src/public/buildings/building_dimensions.ts","../src/public/buildings/building_contour.ts","../src/public/indoorMapEntities/indoor_map_entity_information.ts","../src/private/emscripten_api/emscripten_buildings_api.js","../src/private/emscripten_api/emscripten_rendering_api.js","../src/private/emscripten_api/emscripten_layer_point_mapping_api.js","../src/public/entity_set_prop.ts","../src/private/emscripten_api/emscripten_props_api.js","../src/public/indoorMapEntities/indoor_map_entity.ts","../src/public/heatmap.ts","../src/private/emscripten_api/emscripten_indoor_map_entity_information_api.js","../src/public/indoorMapFloorOutlines/indoor_map_floor_outline_polygon.ts","../src/public/indoorMapFloorOutlines/indoor_map_floor_outline_polygon_ring.ts","../src/private/emscripten_api/emscripten_indoor_map_floor_outline_information_api.js","../src/private/emscripten_api/emscripten_polyline_api.js","../src/private/emscripten_api/emscripten_blue_sphere_api.js","../src/private/emscripten_api/emscripten_map_runtime_api.js","../src/private/emscripten_api/emscripten_version_api.js","../src/private/emscripten_api/emscripten_heatmap_api.js","../src/private/emscripten_api/emscripten_frame_rate_api.js","../src/private/emscripten_api/emscripten_api.js","../src/public/map_factory.ts","../src/public/circle.ts","../src/public/polygon.ts","../src/public/polyline.ts","../src/public/rectangle.ts","../src/public/prop.ts","../src/public/native/polygon.ts","../src/public/native/polyline.ts","../src/public/indoorMapFloorOutlines/indoor_map_floor_outline_information.ts","../src/index.ts"],"sourcesContent":["if (!Array.prototype.findIndex) {\r\n    Array.prototype.findIndex = function(predicate) {\r\n        \"use strict\";\r\n        if (this === null) {\r\n            throw new TypeError(\"Array.prototype.findIndex called on null or undefined\");\r\n        }\r\n        if (typeof predicate !== \"function\") {\r\n            throw new TypeError(\"predicate must be a function\");\r\n        }\r\n        var list = Object(this);\r\n        var length = list.length >>> 0;\r\n        var thisArg = arguments[1];\r\n        var value;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            value = list[i];\r\n            if (predicate.call(thisArg, value, i, list)) {\r\n            return i;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n}\r\n\r\nif (!Array.prototype.find) {\r\n    Array.prototype.find = function(predicate) {\r\n        \"use strict\";\r\n        if (this === null) {\r\n            throw new TypeError(\"Array.prototype.find called on null or undefined\");\r\n        }\r\n        if (typeof predicate !== \"function\") {\r\n            throw new TypeError(\"predicate must be a function\");\r\n        }\r\n        var list = Object(this);\r\n        var length = list.length >>> 0;\r\n        var thisArg = arguments[1];\r\n        var value;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            value = list[i];\r\n            if (predicate.call(thisArg, value, i, list)) {\r\n                return value;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\n","const _getOptionsPropertyOrNull = (layer, propertyName) => {\r\n    if (typeof layer.options === \"undefined\") {\r\n        return null;\r\n    }\r\n\r\n    if (propertyName in layer.options) {\r\n        return layer.options[propertyName];\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nexport const getIndoorMapId = (layer) => {\r\n    var indoorMapId = _getOptionsPropertyOrNull(layer, \"indoorMapId\");\r\n    return indoorMapId === \"\" ? null : indoorMapId;\r\n};\r\n\r\nexport const hasIndoorMap = (layer) => getIndoorMapId(layer) !== null;\r\n\r\nexport const getIndoorMapFloorId = (layer) => _getOptionsPropertyOrNull(layer, \"indoorMapFloorId\");\r\n\r\nexport const getIndoorMapFloorIndex = (layer) => {\r\n    var indoorMapFloorIndex = _getOptionsPropertyOrNull(layer, \"indoorMapFloorIndex\");\r\n\r\n    if (indoorMapFloorIndex !== null) {\r\n        return indoorMapFloorIndex;\r\n    }\r\n\r\n    // try a legacy-named option to maintain backwards compat\r\n    return _getOptionsPropertyOrNull(layer, \"indoorFloorIndex\");\r\n};\r\n\r\nexport const getLayerDisplayOption = (layer) => {\r\n    var displayOption = _getOptionsPropertyOrNull(layer, \"displayOption\") || \"currentFloor\";\r\n    return displayOption;\r\n};\r\n\r\nexport const matchesCurrentFloor = (activeIndoorMapFloorId, activeIndoorMapFloorIndex, layer) => {\r\n    if (activeIndoorMapFloorId === getIndoorMapFloorId(layer)) {\r\n        return true;\r\n    }\r\n\r\n    return activeIndoorMapFloorIndex === getIndoorMapFloorIndex(layer);\r\n};\r\n\r\nexport const matchesIndoorMap = (activeIndoorMapId, activeIndoorMapFloorId, activeIndoorMapFloorIndex, layer) => {\r\n    var displayOption = getLayerDisplayOption(layer);\r\n\r\n    if (displayOption === \"always\") {\r\n        return true;\r\n    }\r\n\r\n    if (displayOption === \"currentIndoorMap\" && activeIndoorMapId === getIndoorMapId(layer)) {\r\n        return true;\r\n    }\r\n\r\n    if (displayOption === \"currentFloor\" &&\r\n        activeIndoorMapId === getIndoorMapId(layer) &&\r\n        matchesCurrentFloor(activeIndoorMapFloorId, activeIndoorMapFloorIndex, layer)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n};\r\n\r\nconst _copyOption = (sourceOptions, destOptions, sourcePropertyName, destPropertyName) => {\r\n    if (!(sourcePropertyName in sourceOptions)) {\r\n        return;\r\n    }\r\n\r\n    if (destPropertyName in destOptions) {\r\n        return;\r\n    }\r\n\r\n    destOptions[destPropertyName] = sourceOptions[sourcePropertyName];\r\n};\r\n\r\nexport const copyIndoorMapOptions = (sourceOptions, destOptions) => {\r\n    _copyOption(sourceOptions, destOptions, \"indoorMapId\", \"indoorMapId\");\r\n    _copyOption(sourceOptions, destOptions, \"indoorMapFloorId\", \"indoorMapFloorId\");\r\n    _copyOption(sourceOptions, destOptions, \"indoorMapFloorIndex\", \"indoorMapFloorIndex\");\r\n    _copyOption(sourceOptions, destOptions, \"indoorFloorIndex\", \"indoorMapFloorIndex\");\r\n};\r\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport type Class = new (...args: any[]) => any;\r\n\r\nexport type Constructor<T extends Class> = (...args: ConstructorParameters<T>) => InstanceType<T>;\r\n\r\nexport const factoryFor = <T extends Class>(cla$$: T): Constructor<T> => (...args) => new cla$$(...args);\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport type { ElevationMode } from \"../types/elevationMode\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport type PopupOptions = L.PopupOptions & {\r\n  elevation?: number;\r\n  elevationMode?: ElevationMode;\r\n  closeWhenMovedOffscreen?: boolean;\r\n};\r\n\r\ndeclare class PopupType extends L.Popup {\r\n  options: PopupOptions;\r\n  constructor(options?: PopupOptions, source?: L.Layer);\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n}\r\n\r\nexport type Popup = PopupType;\r\n\r\nexport const Popup: typeof PopupType = L.Popup.extend({\r\n  options: {\r\n    elevation: 0,\r\n    closeWhenMovedOffscreen: false,\r\n  },\r\n\r\n  _onScreen: false,\r\n\r\n  getElevation: function () {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  setElevation: function (elevation: number) {\r\n    this.options.elevation = elevation;\r\n    return this;\r\n  },\r\n\r\n  getCloseWhenMovedOffscreen: function () {\r\n    return this.options.closeWhenMovedOffscreen;\r\n  },\r\n\r\n  setCloseWhenMovedOffscreen: function (closeWhenMovedOffscreen: boolean) {\r\n    this.options.closeWhenMovedOffscreen = closeWhenMovedOffscreen;\r\n    return this;\r\n  },\r\n\r\n  _updateContent: function () {\r\n    if (!this._content) {\r\n      return;\r\n    }\r\n\r\n    const node = this._contentNode;\r\n    const content = typeof this._content === \"function\" ? this._content(this._source || this) : this._content;\r\n\r\n    let contentNeedsUpdate = true;\r\n    if (content.outerHTML && content.outerHTML === node.innerHTML) {\r\n      // This test will fail to detect changes which don't affect HTML, but otherwise the DOM for the popup is\r\n      // rebuilt every update cycle.  This makes embedding external HTML impossible.\r\n      contentNeedsUpdate = false;\r\n    }\r\n\r\n    if (typeof content === \"string\") {\r\n      node.innerHTML = content;\r\n    } else if (!node.hasChildNodes() || contentNeedsUpdate) {\r\n      while (node.hasChildNodes()) {\r\n        node.removeChild(node.firstChild);\r\n      }\r\n      node.appendChild(content);\r\n    }\r\n    this.fire(\"contentupdate\");\r\n  },\r\n\r\n  update: function () {\r\n    if (!this._map) {\r\n      return;\r\n    }\r\n\r\n    this._container.style.visibility = \"hidden\";\r\n\r\n    this._updateContent();\r\n    this._updateLayout();\r\n    this._updatePosition();\r\n\r\n    this._container.style.visibility = \"\";\r\n\r\n    this._adjustPan();\r\n\r\n    if (this.options.closeWhenMovedOffscreen) {\r\n      if (this._onScreen && this._checkOutOfBounds()) {\r\n        this._onScreen = false;\r\n        this._close();\r\n      } else {\r\n        this._onScreen = !this._checkOutOfBounds();\r\n      }\r\n    }\r\n  },\r\n\r\n  _updatePosition: function () {\r\n    if (!this._map) {\r\n      return;\r\n    }\r\n\r\n    // todo: should probably just have a single api point here to get screen pos\r\n    const latLngs = this._map.latLngsForLayer(this);\r\n    const pos = this._map.latLngToLayerPoint(latLngs[0]);\r\n    let offset = L.point(this.options.offset);\r\n\r\n    const anchor = this._getAnchor();\r\n    anchor.x = Math.round(anchor.x);\r\n    anchor.y = Math.round(anchor.y);\r\n\r\n    if (this._zoomAnimated) {\r\n      L.DomUtil.setPosition(this._container, pos.add(anchor));\r\n    } else {\r\n      offset = offset.add(pos).add(anchor);\r\n    }\r\n\r\n    const bottom = (this._containerBottom = -offset.y);\r\n    const left = (this._containerLeft = -Math.round(this._containerWidth / 2) + offset.x);\r\n\r\n    const bottom_style = Math.round(bottom) + \"px\";\r\n    const left_style = Math.round(left) + \"px\";\r\n\r\n    if (L.DomUtil.getStyle(this._container, \"left\") !== left_style) {\r\n      // Do not update if style is already applied to prevent vertical wiggling\r\n      this._container.style.left = left_style;\r\n    }\r\n\r\n    if (L.DomUtil.getStyle(this._container, \"bottom\") !== bottom_style) {\r\n      // bottom position the popup in case the height of the popup changes (images loading etc)\r\n      this._container.style.bottom = bottom_style;\r\n    }\r\n  },\r\n\r\n  _checkOutOfBounds: function () {\r\n    const rect = this._container.getBoundingClientRect();\r\n    const rectHeight = rect.bottom - rect.top;\r\n    const rectWidth = rect.right - rect.left;\r\n    const mapRect = this._map._container.getBoundingClientRect();\r\n\r\n    const offBottom = rect.bottom > mapRect.bottom + rectHeight / 2.0;\r\n    const offTop = rect.top < mapRect.top - rectHeight / 2.0;\r\n    const offRight = rect.right > mapRect.right + rectWidth / 2.0;\r\n    const offleft = rect.left < mapRect.left - rectWidth / 2.0;\r\n    return offBottom || offTop || offRight || offleft;\r\n  },\r\n});\r\n\r\nexport const popup = factoryFor(Popup);\r\n","import L from \"leaflet\";\r\n\r\nexport class Vector3 {\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n\r\n  constructor(vector: Vector3);\r\n  constructor(vector: [number, number, number]);\r\n  constructor(x: number);\r\n  constructor(x: number, y: number);\r\n  constructor(x: number, y: number, z: number);\r\n  constructor(...args: Vector3[] | number[] | ([number, number, number][])) {\r\n    if (typeof (args[0]) === \"number\") {\r\n      const [x, y, z] = (args as number[]);\r\n      this.x = x;\r\n      this.y = y;\r\n      this.z = z || 0.0;\r\n    } else {\r\n      const vector = args[0];\r\n      this.x = !Array.isArray(vector) ? vector.x : vector[0];\r\n      this.y = !Array.isArray(vector) ? vector.y : vector[1] || 0.0;\r\n      this.z = !Array.isArray(vector) ? vector.z : vector[2] || 0.0;\r\n    }\r\n  }\r\n\r\n  toPoint (): L.Point {\r\n    return L.point(this.x, this.y);\r\n  }\r\n}\r\n\r\nexport class Vector4 {\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n  w: number;\r\n\r\n  constructor(vector: Vector4);\r\n  constructor(vector: [number, number, number?, number?]);\r\n  constructor(x: number);\r\n  constructor(x: number, y: number);\r\n  constructor(x: number, y: number, z: number);\r\n  constructor(x: number, y: number, z: number, w: number);\r\n  constructor(...args: Vector4[] | number[] | ([number, number, number?, number?][])) {\r\n    if (typeof (args[0]) === \"number\") {\r\n      const [x, y, z, w] = (args as number[]);\r\n      this.x = x;\r\n      this.y = y;\r\n      this.z = z || 0.0;\r\n      this.w = w || 1.0;\r\n    } else {\r\n      const vector = args[0];\r\n      this.x = !Array.isArray(vector) ? vector.x : vector[0];\r\n      this.y = !Array.isArray(vector) ? vector.y : vector[1];\r\n      this.z = !Array.isArray(vector) ? vector.z : vector[2] || 0.0;\r\n      this.w = !Array.isArray(vector) ? vector.w : vector[3] || 1.0;\r\n    }\r\n  }\r\n}\r\n\r\n// TODO: fix DRY fail -- this should move to platform\r\n// Judging by Leaflet, approx = 2.74287e7 * Math.exp(-0.622331 * zoom)\r\nconst _altitudes = [\r\n  27428700,\r\n  14720762,\r\n  8000000,\r\n  4512909,\r\n  2087317,\r\n  1248854,\r\n  660556,\r\n  351205,\r\n  185652,\r\n  83092,\r\n  41899,\r\n  21377,\r\n  11294,\r\n  5818,\r\n  3106,\r\n  1890,\r\n  1300,\r\n  821,\r\n  500,\r\n  300,\r\n  108,\r\n  58,\r\n  31,\r\n  17,\r\n  9,\r\n  5\r\n];\r\n\r\nconst _lerp = (a: number, b: number, c: number) => a + c * (b - a);\r\n\r\nconst _altitudeToZoom = (altitude: number, comparisonFunc: (altitude: number, zoomLevelDistance: number) => boolean) => {\r\n  const zoom = _altitudes.findIndex((zoomLevelDistance) => {\r\n    return comparisonFunc(altitude, zoomLevelDistance);\r\n  });\r\n  const maxZoom = _altitudes.length - 1;\r\n  return (zoom === -1) ? maxZoom : zoom;\r\n};\r\n\r\nconst _nearestZoomAbove = (distance: number) => {\r\n  const zoomAbove = _altitudeToZoom(distance, (d, z) => { return d > z; });\r\n  return Math.max(0, zoomAbove - 1);\r\n};\r\n\r\nconst _nearestZoomBelow = (distance: number) => _altitudeToZoom(distance, (d, z) => d >= z);\r\n\r\nexport const zoomToDistance = (zoom: number): number => {\r\n  let zoomlevel = zoom;\r\n  if (zoomlevel < 0) {\r\n    zoomlevel = 0;\r\n  } else if (zoomlevel >= _altitudes.length) {\r\n    zoomlevel = _altitudes.length - 1;\r\n  }\r\n\r\n  const nearestZoomBelow = Math.floor(zoomlevel);\r\n  const nearestZoomAbove = Math.ceil(zoomlevel);\r\n  const valueBetweenNearestZoomLevels = zoomlevel - nearestZoomBelow;\r\n  return _lerp(_altitudes[nearestZoomBelow], _altitudes[nearestZoomAbove], valueBetweenNearestZoomLevels);\r\n};\r\n\r\nexport const distanceToZoom = (distance: number): number => {\r\n  const smallestAltitude = _altitudes.length - 1;\r\n  if (distance < _altitudes[smallestAltitude]) {\r\n    distance = _altitudes[smallestAltitude];\r\n  }\r\n  if (distance > _altitudes[0]) {\r\n    distance = _altitudes[0];\r\n  }\r\n  const nearestZoomAbove = _nearestZoomAbove(distance);\r\n  const nearestZoomBelow = _nearestZoomBelow(distance);\r\n  const distanceBetweenNearestZoomLevels = _altitudes[nearestZoomAbove] - _altitudes[nearestZoomBelow];\r\n  const distanceFromZoomLevelBelow = distance - _altitudes[nearestZoomBelow];\r\n\r\n  return (nearestZoomAbove === nearestZoomBelow) ? nearestZoomBelow : _lerp(nearestZoomBelow, nearestZoomAbove, distanceFromZoomLevelBelow / distanceBetweenNearestZoomLevels);\r\n};\r\n","import L from \"leaflet\";\r\nimport type EmscriptenApi from \"../private/emscripten_api/emscripten_api\";\r\nimport { hasIndoorMap, matchesIndoorMap } from \"../private/indoor_map_layer_options\";\r\nimport Color from \"../types/color\";\r\nimport type { Layer, Map as MapType, MapOptions, PrecacheHandler, PrecacheResponse, ZoomPanOptions } from \"./map_type\";\r\nimport { Popup, PopupOptions } from \"./popup\";\r\nimport { Vector3 } from \"./space\";\r\n\r\nconst undefinedPoint = L.point(-100, -100);\r\nconst undefinedLatLng = L.latLng(0, 0);\r\n\r\nconst getCenterOfLayer = (layer: Layer) => {\r\n  if (layer.getLatLng) {\r\n    return layer.getLatLng();\r\n  }\r\n  if (layer.getBounds) {\r\n    return layer.getBounds().isValid() ? layer.getBounds().getCenter() : null;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst convertLatLngToVector = (latLng: L.LatLng): Vector3 => {\r\n  const lat = (latLng.lat * Math.PI) / 180;\r\n  const lng = (latLng.lng * Math.PI) / 180;\r\n\r\n  const x = Math.cos(lat) * Math.cos(lng);\r\n  const y = Math.cos(lat) * Math.sin(lng);\r\n  const z = Math.sin(lat);\r\n\r\n  return new Vector3(x, y, z);\r\n};\r\n\r\n// Prevent Renderer from panning and scaling the overlay layer\r\nL.Renderer.include({\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  _updateTransform: () => {},\r\n});\r\n\r\nexport const Map: typeof MapType = L.Map.extend({\r\n  initialize: function (\r\n    this: MapType,\r\n    browserWindow: typeof MapType.prototype._browserWindow,\r\n    id: number,\r\n    options: MapOptions,\r\n    onRemoveCallback: typeof MapType.prototype._onRemoveCallback,\r\n    cameraModule: typeof MapType.prototype._cameraModule,\r\n    precacheModule: typeof MapType.prototype._precacheModule,\r\n    themesModule: typeof MapType.prototype.themes,\r\n    indoorsModule: typeof MapType.prototype.indoors,\r\n    polygonModule: typeof MapType.prototype._polygonModule,\r\n    polylineModule: typeof MapType.prototype._polylineModule,\r\n    layerPointMappingModule: typeof MapType.prototype._layerPointMappingModule,\r\n    routingModule: typeof MapType.prototype.routes,\r\n    renderingModule: typeof MapType.prototype.rendering,\r\n    buildingsModule: typeof MapType.prototype.buildings,\r\n    propModule: typeof MapType.prototype.props,\r\n    indoorMapEntityInformationModule: typeof MapType.prototype.indoorMapEntities,\r\n    indoorMapFloorOutlineInformationModule: typeof MapType.prototype.indoorMapFloorOutlines,\r\n    blueSphereModule: typeof MapType.prototype.blueSphere,\r\n    mapRuntimeModule: typeof MapType.prototype._mapRuntimeModule,\r\n    versionModule: typeof MapType.prototype.versionModule,\r\n    heatmapModule: typeof MapType.prototype.heatmaps,\r\n    frameRateModule: typeof MapType.prototype._frameRateModule\r\n  ) {\r\n    this._browserWindow = browserWindow;\r\n    this._onRemoveCallback = onRemoveCallback;\r\n    this._cameraModule = cameraModule;\r\n    this._precacheModule = precacheModule;\r\n    this._polygonModule = polygonModule;\r\n    this._polylineModule = polylineModule;\r\n    this._layerPointMappingModule = layerPointMappingModule;\r\n    this._frameRateModule = frameRateModule;\r\n    this.themes = themesModule;\r\n    this.indoors = indoorsModule;\r\n    this.routes = routingModule;\r\n    //TODO: The public methods exposed by the RenderingModule require documentation, test coverage and examples.\r\n    //Reverting the change to private as it is being used by the Search Bar and might be used in other places\r\n    //which we may not know about.\r\n    this.rendering = renderingModule;\r\n    this.buildings = buildingsModule;\r\n    this.props = propModule;\r\n    this.indoorMapEntities = indoorMapEntityInformationModule;\r\n    this.indoorMapFloorOutlines = indoorMapFloorOutlineInformationModule;\r\n    this.blueSphere = blueSphereModule;\r\n    this.versionModule = versionModule;\r\n    this.heatmaps = heatmapModule;\r\n    this._mapRuntimeModule = mapRuntimeModule;\r\n    this._layersOnMap = {};\r\n    this._spacesApi = null;\r\n    this._ready = false;\r\n    this._viewInitialized = false;\r\n\r\n    L.Map.prototype.initialize.call(this, id, options);\r\n\r\n    this.dragging.disable();\r\n    this.touchZoom.disable();\r\n    this.doubleClickZoom.disable();\r\n    this.scrollWheelZoom.disable();\r\n    this.boxZoom.disable();\r\n    this.keyboard.disable();\r\n\r\n    this.attributionControl.setPrefix(\r\n      \"<a href='http://leafletjs.com' title='A JS library for interactive maps' target='_blank'>Leaflet</a>\"\r\n    );\r\n    this.attributionControl.addAttribution(\r\n      \"3D Maps &copy; <a href='https://www.wrld3d.com' target='_blank'>WRLD</a> and <a href='https://www.wrld3d.com/legal/' target='_blank'>partners</a>\"\r\n    );\r\n  },\r\n\r\n  _initEvents: function (this: MapType, remove: boolean, surface: HTMLElement) {\r\n    if (!L.DomEvent || !surface) {\r\n      return;\r\n    }\r\n\r\n    this._targets = {};\r\n    this._targets[L.stamp(surface)] = this;\r\n\r\n    const onOff = remove ? \"off\" : \"on\";\r\n\r\n    // @event click: MouseEvent\r\n    // Fired when the user clicks (or taps) the map.\r\n    // @event dblclick: MouseEvent\r\n    // Fired when the user double-clicks (or double-taps) the map.\r\n    // @event mousedown: MouseEvent\r\n    // Fired when the user pushes the mouse button on the map.\r\n    // @event mouseup: MouseEvent\r\n    // Fired when the user releases the mouse button on the map.\r\n    // @event mouseover: MouseEvent\r\n    // Fired when the mouse enters the map.\r\n    // @event mouseout: MouseEvent\r\n    // Fired when the mouse leaves the map.\r\n    // @event mousemove: MouseEvent\r\n    // Fired while the mouse moves over the map.\r\n    // @event contextmenu: MouseEvent\r\n    // Fired when the user pushes the right mouse button on the map, prevents\r\n    // default browser context menu from showing if there are listeners on\r\n    // this event. Also fired on mobile when the user holds a single touch\r\n    // for a second (also called long press).\r\n    // @event keypress: KeyboardEvent\r\n    // Fired when the user presses a key from the keyboard while the map is focused.\r\n    L.DomEvent[onOff](\r\n      surface,\r\n      \"click dblclick mousedown mouseup \" + \"mouseover mouseout mousemove contextmenu keypress\",\r\n      this._handleDOMEvent,\r\n      this\r\n    );\r\n    L.DomEvent[onOff](\r\n      this._container,\r\n      \"click dblclick mousedown mouseup \" + \"mouseover mouseout mousemove contextmenu keypress\",\r\n      this._handleDOMEvent,\r\n      this\r\n    );\r\n\r\n    if (this.options.trackResize) {\r\n      L.DomEvent[onOff](this._browserWindow as unknown as HTMLElement, \"resize\", this._onResize, this);\r\n    }\r\n\r\n    if (L.Browser.any3d && this.options.transform3DLimit) {\r\n      this[onOff](\"moveend\", this._onMoveEnd);\r\n    }\r\n  },\r\n\r\n  _handleDOMEvent: function (this: MapType, e: Event) {\r\n    // @ts-ignore we don't have a type definition for this\r\n    L.Map.prototype[\"_handleDOMEvent\"].call(this, e);\r\n\r\n    if (e.type === \"contextmenu\") {\r\n      L.DomEvent.preventDefault(e);\r\n    }\r\n\r\n    if (e.type === \"mousedown\") {\r\n      let element = e.target as HTMLElement;\r\n      while (element && typeof element.className === \"string\" && element.className !== \"wrld-map-container\") {\r\n        if (element.className.indexOf(\"leaflet-marker\") !== -1) {\r\n          L.DomEvent.stopPropagation(e);\r\n          break;\r\n        }\r\n        element = element.parentNode as HTMLElement;\r\n      }\r\n    }\r\n  },\r\n\r\n  addLayer: function (this: MapType, layer: Layer) {\r\n    const id = L.stamp(layer);\r\n\r\n    if (id in this._layersOnMap) {\r\n      return this;\r\n    }\r\n\r\n    this._createPointMapping(layer);\r\n\r\n    this._layersOnMap[id] = layer;\r\n\r\n    L.Map.prototype.addLayer.call(this, layer);\r\n    return this;\r\n  },\r\n\r\n  removeLayer: function (this: MapType, layer: Layer) {\r\n    const id = L.stamp(layer);\r\n\r\n    if (!(id in this._layersOnMap)) {\r\n      return this;\r\n    }\r\n\r\n    this._removePointMapping(layer);\r\n    L.Map.prototype.removeLayer.call(this, layer);\r\n\r\n    delete this._layersOnMap[id];\r\n    return this;\r\n  },\r\n\r\n  _removeAllLayers: function (this: MapType) {\r\n    const layerIds = Object.keys(this._layersOnMap);\r\n\r\n    layerIds.forEach((id) => {\r\n      const layer = this._layersOnMap[id];\r\n      if (layer === undefined) {\r\n        return;\r\n      }\r\n      this.removeLayer(layer);\r\n    });\r\n  },\r\n\r\n  onInitialized: function (this: MapType, emscriptenApi: EmscriptenApi) {\r\n    this._spacesApi = emscriptenApi.spacesApi;\r\n    this._ready = true;\r\n    const panes = this.getPanes();\r\n    panes.mapPane.style.zIndex = \"10\";\r\n    panes.mapPane.style.pointerEvents = \"auto\";\r\n    panes.overlayPane.style.pointerEvents = \"none\";\r\n    this.fire(\"initialize\");\r\n  },\r\n\r\n  onInitialStreamingCompleted: function (this: MapType) {\r\n    this.fire(\"initialstreamingcomplete\");\r\n  },\r\n\r\n  latLngToLayerPoint: function (this: MapType, latLng: L.LatLng) {\r\n    return this._ready ? this._spacesApi?.worldToScreen(latLng).toPoint() : undefinedPoint;\r\n  },\r\n\r\n  layerPointToLatLng: function (this: MapType, point: L.PointExpression) {\r\n    const latLng = this._ready ? this._spacesApi?.screenToWorldPoint(point) : null;\r\n    return latLng || undefinedLatLng;\r\n  },\r\n\r\n  latLngToContainerPoint: function (this: MapType, latLng: L.LatLng) {\r\n    return this.latLngToLayerPoint(latLng);\r\n  },\r\n\r\n  containerPointToLatLng: function (this: MapType, point: L.PointExpression) {\r\n    return this.layerPointToLatLng(point);\r\n  },\r\n\r\n  containerPointToLayerPoint: function (this: MapType, point: L.PointExpression) {\r\n    return point;\r\n  },\r\n\r\n  layerPointToContainerPoint: function (this: MapType, point: L.PointExpression) {\r\n    return point;\r\n  },\r\n\r\n  latLngsForLayer: function (this: MapType, layer: Layer) {\r\n    return this._layerPointMappingModule.latLngsForLayer(layer);\r\n  },\r\n\r\n  _createPointMapping: function (this: MapType, layer: Layer) {\r\n    this._layerPointMappingModule.createPointMapping(layer);\r\n  },\r\n\r\n  _removePointMapping: function (this: MapType, layer: Layer) {\r\n    this._layerPointMappingModule.removePointMapping(layer);\r\n  },\r\n\r\n  _projectLatlngs: function (\r\n    this: MapType,\r\n    layer: Layer,\r\n    latlngs: L.LatLng[],\r\n    result: unknown,\r\n    projectedBounds: L.Bounds\r\n  ) {\r\n    return this._layerPointMappingModule.projectLatlngs(layer, latlngs, result, projectedBounds);\r\n  },\r\n\r\n  _updateZoom: function (this: MapType) {\r\n    this._zoom = this.getZoom();\r\n  },\r\n\r\n  setView: function (this: MapType, center: L.LatLngExpression, zoom?: number, options?: ZoomPanOptions) {\r\n    // Superclass' implementation of setView does some initialization so we have to call it\r\n    if (!this._viewInitialized) {\r\n      L.Map.prototype.setView.call(this, center, zoom, { reset: true } as L.ZoomPanOptions);\r\n      this._viewInitialized = true;\r\n    }\r\n\r\n    zoom = typeof zoom === \"undefined\" ? this._zoom : this._limitZoom(zoom);\r\n    center = this._limitCenter(L.latLng(center), zoom, this.options.maxBounds);\r\n    options = options || {};\r\n\r\n    if (!(\"animate\" in options)) {\r\n      if (typeof options.pan === \"object\" && \"animate\" in options.pan) {\r\n        options[\"animate\"] = options.pan.animate;\r\n      } else if (typeof options.zoom === \"object\" && \"animate\" in options.zoom) {\r\n        options[\"animate\"] = options.zoom.animate;\r\n      }\r\n    }\r\n\r\n    if (!(\"allowInterruption\" in options)) {\r\n      if (typeof options.pan === \"object\" && \"allowInterruption\" in options.pan) {\r\n        options[\"allowInterruption\"] = options.pan.allowInterruption;\r\n      } else if (typeof options.zoom === \"object\" && \"allowInterruption\" in options.zoom) {\r\n        options[\"allowInterruption\"] = options.zoom.allowInterruption;\r\n      }\r\n    }\r\n\r\n    const _options = { ...options, zoom, location: center };\r\n    this._cameraModule.setView(_options);\r\n    return this;\r\n  },\r\n\r\n  zoomIn: function (this: MapType, delta: number) {\r\n    delta = delta || 1;\r\n    const config = {\r\n      location: this.getCenter(),\r\n      zoom: this._cameraModule.getCurrentZoomLevel() + delta,\r\n      durationSeconds: 0.33,\r\n      allowInterruption: false,\r\n    };\r\n    if (config.zoom <= this.getMaxZoom()) {\r\n      this.fire(\"zoomstart\");\r\n      this.once(\"transitionend\", () => {\r\n        this.fire(\"zoomend\");\r\n      });\r\n      this._cameraModule.setView(config);\r\n      this._updateZoom();\r\n    }\r\n    return this;\r\n  },\r\n\r\n  zoomOut: function (this: MapType, delta: number) {\r\n    delta = delta || 1;\r\n    const config = {\r\n      location: this.getCenter(),\r\n      zoom: this._cameraModule.getCurrentZoomLevel() - delta,\r\n      durationSeconds: 0.33,\r\n      allowInterruption: false,\r\n    };\r\n    if (config.zoom >= this.getMinZoom()) {\r\n      this.fire(\"zoomstart\");\r\n      this.once(\"transitionend\", () => {\r\n        this.fire(\"zoomend\");\r\n      });\r\n      this._cameraModule.setView(config);\r\n      this._updateZoom();\r\n    }\r\n    return this;\r\n  },\r\n\r\n  setZoomAround: function (this: MapType) {\r\n    return this;\r\n  },\r\n\r\n  setViewVerticallyLocked: function (this: MapType, isVerticallyLocked: boolean) {\r\n    this._cameraModule.setVerticallyLocked(isVerticallyLocked);\r\n    return this;\r\n  },\r\n\r\n  fitBounds: function (this: MapType, bounds: L.LatLngBoundsExpression) {\r\n    const config = { bounds: bounds };\r\n    this._cameraModule.setViewToBounds(config);\r\n    return this;\r\n  },\r\n\r\n  fitWorld: function (this: MapType) {\r\n    return this.setZoom(0);\r\n  },\r\n\r\n  panTo: function (this: MapType, center: L.LatLng, options?: ZoomPanOptions) {\r\n    this._updateZoom();\r\n    return L.Map.prototype.panTo.call(this, center, options);\r\n  },\r\n\r\n  panInsideBounds: function (this: MapType, bounds: L.LatLngBoundsExpression, options?: ZoomPanOptions) {\r\n    this._updateZoom();\r\n    return L.Map.prototype.panInsideBounds.call(this, bounds, options);\r\n  },\r\n\r\n  panBy: function (this: MapType) {\r\n    return this;\r\n  },\r\n\r\n  getCenter: function (this: MapType) {\r\n    return this._cameraModule.getCenter();\r\n  },\r\n\r\n  pause: function (this: MapType) {\r\n    return this._mapRuntimeModule.Pause();\r\n  },\r\n\r\n  resume: function (this: MapType) {\r\n    return this._mapRuntimeModule.Resume();\r\n  },\r\n\r\n  getZoom: function (this: MapType) {\r\n    this._zoom = this._cameraModule.getCurrentZoomLevel();\r\n    return this._zoom;\r\n  },\r\n\r\n  getBounds: function (this: MapType) {\r\n    const topLeft = this.layerPointToLatLng(new L.Point(0, 0));\r\n    const topRight = this.layerPointToLatLng(new L.Point(this.getContainer().clientWidth, 0));\r\n    const bottomLeft = this.layerPointToLatLng(new L.Point(0, this.getContainer().clientHeight));\r\n    const BottomRight = this.layerPointToLatLng(\r\n      new L.Point(this.getContainer().clientWidth, this.getContainer().clientHeight)\r\n    );\r\n\r\n    return L.latLngBounds([topLeft, topRight, bottomLeft, BottomRight]);\r\n  },\r\n\r\n  locate: function (this: MapType) {\r\n    return this;\r\n  },\r\n\r\n  stopLocate: function (this: MapType) {\r\n    return this;\r\n  },\r\n\r\n  remove: function (this: MapType) {\r\n    this._removeAllLayers();\r\n    this._mapRuntimeModule.Remove();\r\n    this._onRemoveCallback();\r\n    return this;\r\n  },\r\n\r\n  openPopup: function (this: MapType, popup: Popup | L.Content, latLng: L.LatLngExpression, options?: PopupOptions) {\r\n    let _popup: Popup;\r\n\r\n    if (!(popup instanceof L.Popup)) {\r\n      // aka if L.Content\r\n      const content = popup;\r\n      _popup = new Popup(options).setLatLng(latLng).setContent(content);\r\n    } else {\r\n      _popup = popup;\r\n    }\r\n\r\n    // troubles with the parent's method overrides – manually specifying the signature to allow current behaviour\r\n    const _super = L.Map.prototype.openPopup as unknown as (\r\n      content: L.Popup,\r\n      latlng: L.LatLngExpression,\r\n      options?: PopupOptions\r\n    ) => MapType;\r\n\r\n    return _super.call(this, _popup, latLng, options);\r\n  },\r\n\r\n  _onUpdate: function (this: MapType) {\r\n    this.fire(\"update\");\r\n  },\r\n\r\n  _onDraw: function (this: MapType) {\r\n    this._updateLayerVisibility();\r\n\r\n    this.eachLayer((layer: Layer) => {\r\n      if (layer.update) {\r\n        layer.update();\r\n      } else if (layer.redraw) {\r\n        layer.redraw();\r\n      }\r\n    });\r\n    this.fire(\"draw\");\r\n  },\r\n\r\n  getAltitudeAtLatLng: function (this: MapType, latLng: L.LatLngExpression) {\r\n    return this._ready ? this._spacesApi?.getAltitudeAtLatLng(latLng) : 0;\r\n  },\r\n\r\n  getMortonKeyAtLatLng: function (this: MapType, latLng: L.LatLngExpression) {\r\n    return this._ready ? this._spacesApi?.getMortonKeyAtLatLng(latLng) : null;\r\n  },\r\n\r\n  getMortonKeyCenter: function (this: MapType, mortonKey: string) {\r\n    return this._ready ? this._spacesApi?.getMortonKeyCenter(mortonKey) : null;\r\n  },\r\n\r\n  getMortonKeyCorners: function (this: MapType, mortonKey: string, insetMeters: number) {\r\n    return this._ready ? this._spacesApi?.getMortonKeyCorners(mortonKey, insetMeters) : null;\r\n  },\r\n\r\n  getCameraDistanceToInterest: function (this: MapType) {\r\n    return this._cameraModule.getDistanceToInterest();\r\n  },\r\n\r\n  getCameraPitchDegrees: function (this: MapType) {\r\n    return this._cameraModule.getPitchDegrees();\r\n  },\r\n\r\n  setCameraTiltDegrees: function (this: MapType, tilt: number) {\r\n    this._cameraModule.setTiltDegrees(tilt);\r\n    return this;\r\n  },\r\n\r\n  getCameraTiltDegrees: function (this: MapType) {\r\n    return this._cameraModule.getTiltDegrees();\r\n  },\r\n\r\n  getCameraHeadingDegrees: function (this: MapType) {\r\n    return this._cameraModule.getHeadingDegrees();\r\n  },\r\n\r\n  setCameraHeadingDegrees: function (this: MapType, heading: number) {\r\n    this._cameraModule.setHeadingDegrees(heading);\r\n    return this;\r\n  },\r\n\r\n  getMaximumPrecacheRadius: function (this: MapType): number {\r\n    return this._precacheModule.getMaximumPrecacheRadius();\r\n  },\r\n\r\n  precache: function (\r\n    this: MapType,\r\n    center: L.LatLngExpression,\r\n    radius: number,\r\n    completionCallback: (success: boolean) => void\r\n  ): PrecacheResponse {\r\n    return this.precacheWithDetailedResult(center, radius, (precacheResult) => {\r\n      completionCallback(precacheResult.succeeded);\r\n    });\r\n  },\r\n\r\n  precacheWithDetailedResult: function (\r\n    this: MapType,\r\n    center: L.LatLngExpression,\r\n    radius: number,\r\n    completionCallback: PrecacheHandler\r\n  ) {\r\n    return this._precacheModule.precache(center, radius, completionCallback);\r\n  },\r\n\r\n  setMapCollapsed: function (this: MapType, isMapCollapsed: boolean) {\r\n    this.rendering.setMapCollapsed(isMapCollapsed);\r\n    return this;\r\n  },\r\n\r\n  isMapCollapsed: function () {\r\n    return this.rendering.isMapCollapsed();\r\n  },\r\n\r\n  setDrawClearColor: function (this: MapType, clearColor: Color) {\r\n    this.rendering.setClearColor(clearColor);\r\n    return this;\r\n  },\r\n\r\n  setTargetVSyncInterval: function (this: MapType, targetVSyncInterval: number) {\r\n    this._frameRateModule.setTargetVSyncInterval(targetVSyncInterval);\r\n    return this;\r\n  },\r\n\r\n  setThrottledTargetFrameInterval: function (this: MapType, throttledTargetFrameIntervalMilliseconds: number) {\r\n    this._frameRateModule.setThrottledTargetFrameInterval(throttledTargetFrameIntervalMilliseconds);\r\n    return this;\r\n  },\r\n\r\n  setIdleSecondsBeforeThrottle: function (this: MapType, idleSecondsBeforeThrottle: number) {\r\n    this._frameRateModule.setIdleSecondsBeforeThrottle(idleSecondsBeforeThrottle);\r\n    return this;\r\n  },\r\n\r\n  setThrottleWhenIdleEnabled: function (this: MapType, throttleWhenIdleEnabled: boolean) {\r\n    this._frameRateModule.setThrottleWhenIdleEnabled(throttleWhenIdleEnabled);\r\n    return this;\r\n  },\r\n\r\n  cancelFrameRateThrottle: function (this: MapType) {\r\n    this._frameRateModule.cancelThrottle();\r\n    return this;\r\n  },\r\n\r\n  isHardwareAccelerationAvailable: function (this: MapType) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const hardwareAccelerationEnforcer = { failIfMajorPerformanceCaveat: true };\r\n    const webglContext =\r\n      canvas.getContext(\"webgl\", hardwareAccelerationEnforcer) ||\r\n      canvas.getContext(\"experimental-webgl\", hardwareAccelerationEnforcer);\r\n    return !!(webglContext && webglContext instanceof WebGLRenderingContext);\r\n  },\r\n\r\n  _getAngleFromCameraToHorizon: function (this: MapType) {\r\n    const altitude = this.getCameraDistanceToInterest();\r\n    const earthRadius = 6378100.0;\r\n    return Math.acos(earthRadius / (earthRadius + altitude));\r\n  },\r\n\r\n  _isLatLngBehindEarth: function (this: MapType, latlng: L.LatLng, cameraVector: Vector3, maxAngle: number) {\r\n    const latlngVector = convertLatLngToVector(latlng);\r\n    const dotProd = cameraVector.x * latlngVector.x + cameraVector.y * latlngVector.y + cameraVector.z * latlngVector.z;\r\n    return dotProd < Math.cos(maxAngle);\r\n  },\r\n\r\n  _updateLayerVisibility: function (this: MapType) {\r\n    const layerIds = Object.keys(this._layersOnMap);\r\n    const cameraVector = convertLatLngToVector(this.getCenter());\r\n    const maxAngle = this._getAngleFromCameraToHorizon();\r\n\r\n    layerIds.forEach((id) => {\r\n      const layer = this._layersOnMap[id];\r\n\r\n      // we're checking for null, as there's a few potentially confusing interactions that can happen.\r\n      // e.g. if we have a marker with an associated popup (say markerId = 23 and popupId = 75), then on starting this loop, we'll\r\n      // have layerIds = [ 23, 75 ] and both of these ids exist in the _layersOnMap dictionary. However, a side-effect of removing\r\n      // a marker is that any associated popup will be removed. We're spinning over the layerIds that we copied _before_\r\n      // removing anything, so we now have a stale id (75) that no longer exists in _layersOnMap, and we can skip it.\r\n      if (layer === undefined) {\r\n        return;\r\n      }\r\n\r\n      const latlng = getCenterOfLayer(layer);\r\n\r\n      // certain layers (such as L.layerGroup) don't have positions and are purely organisational tools, so we can ignore them\r\n      // Additionally check if it's FeatureGroup, which is explicitly used by Leaflet.Draw.\r\n      if (latlng === null || layer instanceof L.FeatureGroup) {\r\n        return;\r\n      }\r\n\r\n      const latLngBehindEarth = this._isLatLngBehindEarth(latlng, cameraVector, maxAngle);\r\n      const hasLayer = this.hasLayer(layer);\r\n      const indoorMapDisplayFilter = this._isVisibleForCurrentMapState(layer);\r\n\r\n      if (!hasLayer && !latLngBehindEarth && indoorMapDisplayFilter) {\r\n        L.Map.prototype.addLayer.call(this, layer);\r\n      } else if (hasLayer && (latLngBehindEarth || !indoorMapDisplayFilter)) {\r\n        L.Map.prototype.removeLayer.call(this, layer);\r\n      }\r\n    });\r\n  },\r\n\r\n  _isVisibleForCurrentMapState: function (this: MapType, layer: Layer): boolean {\r\n    const currentMapStateIsOutdoors = !this.indoors.isIndoors();\r\n    const layerIsOutdoors = !hasIndoorMap(layer);\r\n\r\n    if (layer.options?.displayOption === \"currentMap\") return true;\r\n\r\n    if (currentMapStateIsOutdoors) {\r\n      return layerIsOutdoors;\r\n    }\r\n\r\n    // from here on in, we know our map state is indoors\r\n    if (layerIsOutdoors) {\r\n      return false;\r\n    }\r\n\r\n    return matchesIndoorMap(\r\n      this.indoors.getActiveIndoorMap()?.getIndoorMapId(),\r\n      this.indoors.getFloor()?.getFloorZOrder(),\r\n      this.indoors.getFloor()?.getFloorIndex(),\r\n      layer\r\n    );\r\n  },\r\n\r\n  _rawPanBy: function (this: MapType) {\r\n    // Do nothing\r\n  },\r\n});\r\n\r\nexport type {\r\n    MapFloorId,\r\n    MapFloorIndex,\r\n    MapId,\r\n    MapOptions,\r\n    PrecacheHandler,\r\n    PrecacheResponse,\r\n    ZoomPanOptions\r\n} from \"./map_type\";\r\n\r\nexport type Map = MapType;\r\n\r\nexport default Map;\r\n","export function HTMLMapContainer (browserDocument, browserWindow, parentElement, canvasId, canvasWidth, canvasHeight, backgroundColor, containerId, mapId) {\r\n\r\n    var _browserWindow = browserWindow;\r\n    var _browserDocument = browserDocument;\r\n\r\n    var _createDOMElement = (parentElement, tagName, attributes, style) => {\r\n        var element = _browserDocument.createElement(tagName);\r\n        for (var attributeName in attributes) {\r\n            element.setAttribute(attributeName, attributes[attributeName]);\r\n        }\r\n        for (var styleProperty in style) {\r\n            element.style[styleProperty] = style[styleProperty];\r\n        }\r\n        parentElement.appendChild(element);\r\n        return element;\r\n    };\r\n\r\n    var _createMapContainer = (parentElement) => {\r\n        var attributes = {\r\n            \"class\": \"wrld-map-container\",\r\n            \"id\": containerId\r\n        };\r\n        var style = {\r\n            \"position\": \"relative\",\r\n            \"width\": \"100%\",\r\n            \"height\": \"100%\",\r\n            \"line-height\": \"0px\",\r\n            \"padding\": \"0px\",\r\n            \"margin\": \"0px\",\r\n            \"overflow\": \"hidden\",\r\n            \"cursor\": \"default\"\r\n        };\r\n        var mapContainer = _createDOMElement(parentElement, \"div\", attributes, style);\r\n\r\n        var css = document.createElement(\"style\");\r\n        css.type = \"text/css\";\r\n        css.innerHTML = \".leaflet-dragging .wrld-map-container { cursor: move; cursor: -webkit-grabbing; cursor: -moz-grabbing; }\";\r\n        document.head.appendChild(css);\r\n\r\n        mapContainer.onmousedown = (e) => {\r\n            // Prevent middle-mouse scrolling on Windows\r\n            if (e.button === 1) {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        // Fix for IE - onwheel is undefined, but is actually functional\r\n        if (typeof mapContainer.onwheel === \"undefined\") {\r\n            mapContainer.onwheel = null;\r\n        }\r\n\r\n        return mapContainer;\r\n    };\r\n\r\n    var _createLeafletOverlay = (parentElement) => {\r\n        var attributes = { \"class\": \"wrld-leaflet-overlay\" };\r\n        var style = {\r\n            \"position\": \"absolute\",\r\n            \"overflow\": \"hidden\",\r\n            \"width\": \"100%\",\r\n            \"height\": \"100%\",\r\n            \"background\": \"transparent\",\r\n            \"pointer-events\": \"none\"\r\n        };\r\n        return _createDOMElement(parentElement, \"div\", attributes, style);\r\n    };\r\n\r\n    var _createErrorMessage = (parentElement, messageText) => {\r\n        var attributes = { \"class\": \"wrld-error-message\" };\r\n        var style = {\r\n            \"position\": \"absolute\",\r\n            \"left\": \"0px\",\r\n            \"bottom\": \"0px\",\r\n            \"line-height\": \"normal\",\r\n            \"color\": \"white\",\r\n            \"font-family\": \"sans-serif\",\r\n            \"font-weight\": \"bold\",\r\n            \"margin\": \"0.5em\"\r\n        };\r\n        var errorMessage = _createDOMElement(parentElement, \"div\", attributes, style);\r\n        errorMessage.textContent = messageText;\r\n        return errorMessage;\r\n    };\r\n\r\n    var _createCanvas = (parentElement, canvasId, width, height, backgroundColor) => {\r\n        var attributes = {\r\n            \"class\": \"wrld-map-canvas\",\r\n            \"id\": canvasId,\r\n            \"oncontextmenu\": \"event.preventDefault();\",\r\n            \"width\": width.toString(),\r\n            \"height\": height.toString()\r\n        };\r\n        var style = {\r\n            \"background-color\": backgroundColor\r\n        };\r\n        var canvas = _createDOMElement(parentElement, \"canvas\", attributes, style);\r\n\r\n        return canvas;\r\n    };\r\n\r\n    var _createLoadingSpinner = (parentElement) => {\r\n        var style = {\r\n            \"position\": \"absolute\",\r\n            \"width\": \"18px\",\r\n            \"height\": \"18px\",\r\n            \"z-index\": \"20\",\r\n            \"background-image\": \"url('https://cdn-webgl.wrld3d.com/wrldjs/resources/loading_spinner.png')\"\r\n        };\r\n        return _createDOMElement(parentElement, \"div\", {}, style);\r\n    };\r\n\r\n    var _createIndoorMapWatermark = (parentElement) => {\r\n        var attributes = {\r\n            \"id\": \"wrld-indoor-map-watermark\" + mapId,\r\n            \"class\": \"wrld-indoor-map-watermark\",\r\n            \"draggable\": \"false\"\r\n        };\r\n\r\n        var style = {\r\n            \"position\": \"absolute\",\r\n            \"z-index\": \"20\",\r\n            \"display\": \"block\",\r\n            \"margin\": \"auto auto 0 auto\",\r\n            \"left\": \"0\",\r\n            \"right\": \"0\",\r\n            \"bottom\": \"-50px\",\r\n            \"transition\": \"all 500ms\"\r\n        };\r\n\r\n        return _createDOMElement(parentElement, \"img\", attributes, style);\r\n    };\r\n\r\n    this.mapContainer = _createMapContainer(parentElement);\r\n    this.loadingSpinnerIcon = _createLoadingSpinner(this.mapContainer);\r\n    this.overlay = _createLeafletOverlay(this.mapContainer);\r\n    this.indoorMapWatermark = _createIndoorMapWatermark(this.mapContainer);\r\n    this.canvas = _createCanvas(this.mapContainer, canvasId, canvasWidth, canvasHeight, backgroundColor);\r\n\r\n    this.loadingSpinner = new LoadingSpinner(_browserWindow, this.loadingSpinnerIcon);\r\n    this.loadingSpinner.startSpinning();\r\n\r\n    this.onInitialized = () => {\r\n        this.loadingSpinner.stopSpinning();\r\n        this.loadingSpinnerIcon.parentNode.removeChild(this.loadingSpinnerIcon);\r\n    };\r\n\r\n    this.onError = (message) => {\r\n        this.loadingSpinner.stopSpinning();\r\n        _createErrorMessage(this.mapContainer, message);\r\n    };\r\n\r\n    this.width = () => {\r\n        return this.mapContainer.clientWidth;\r\n    };\r\n\r\n    this.height = () => {\r\n        return this.mapContainer.clientHeight;\r\n    };\r\n\r\n    this.onRemove = () => {\r\n        if (this.mapContainer.parentElement) {\r\n            this.mapContainer.parentElement.removeChild(this.mapContainer);\r\n        }\r\n    };\r\n}\r\n\r\nfunction LoadingSpinner (browserWindow, domElement) {\r\n    var _browserWindow = browserWindow;\r\n    var _domElement = domElement;\r\n    var _speed = 360;\r\n    var _spinning = false;\r\n\r\n    var spin = (timestamp) => {\r\n        if (!_spinning) {\r\n            return;\r\n        }\r\n        var timeInSeconds = (timestamp || 0) / 1000;\r\n        var degrees = (timeInSeconds * _speed) % 360;\r\n        _domElement.style[\"transform\"] = \"rotate(\" + degrees + \"deg)\";\r\n        _browserWindow.requestAnimationFrame(spin);\r\n    };\r\n\r\n    this.startSpinning = () => {\r\n        _spinning = true;\r\n        spin();\r\n    };\r\n\r\n    this.stopSpinning = () => {\r\n        _spinning = false;\r\n    };\r\n}\r\n\r\nexport default HTMLMapContainer;","import L from \"leaflet\";\r\nconst tinyRotationString = \" rotate(0.0001deg)\";\r\n\r\nexport const setPositionSmooth = (el: HTMLElement, point: L.Point, disable3D = false) : void => {\r\n  L.DomUtil.setPosition(el, point);\r\n\r\n  if (!disable3D && L.Browser.any3d) {\r\n    (el.style[L.DomUtil.TRANSFORM as \"position\"]) += tinyRotationString;\r\n  }\r\n};\r\n","import { ElevationMode } from \"../types/elevationMode\";\r\n\r\nexport enum ElevationModeType {\r\n  HEIGHT_ABOVE_GROUND = \"heightAboveGround\",\r\n  HEIGHT_ABOVE_SEA_LEVEL = \"heightAboveSeaLevel\",\r\n}\r\n\r\nexport const isValidElevationMode = (elevationMode: ElevationModeType | ElevationMode): boolean => {\r\n  return (\r\n    elevationMode === ElevationModeType.HEIGHT_ABOVE_GROUND ||\r\n    elevationMode === ElevationModeType.HEIGHT_ABOVE_SEA_LEVEL\r\n  );\r\n};\r\n\r\nexport const getElevationModeInt = (elevationModeString: ElevationModeType): number => {\r\n  const elevationModes = {\r\n    heightAboveSeaLevel: 0,\r\n    heightAboveGround: 1,\r\n  };\r\n\r\n  let elevationModeInt = elevationModes.heightAboveGround;\r\n\r\n  if (\r\n    elevationModeString &&\r\n    elevationModeString.toLowerCase() === ElevationModeType.HEIGHT_ABOVE_SEA_LEVEL.toLowerCase()\r\n  ) {\r\n    elevationModeInt = elevationModes.heightAboveSeaLevel;\r\n  }\r\n\r\n  return elevationModeInt;\r\n};\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport { setPositionSmooth } from \"../private/eegeo_dom_util\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\nimport { copyIndoorMapOptions } from \"../private/indoor_map_layer_options.js\";\r\nimport { ElevationMode } from \"../types/elevationMode\";\r\nimport { MapId, MapFloorId, MapFloorIndex } from \"./map\";\r\nimport { Popup, PopupOptions } from \"./popup\";\r\n\r\ntype Content = Parameters<typeof L.Popup.prototype.setContent>[0];\r\n\r\nexport type MarkerOptions = L.MarkerOptions & {\r\n  elevation?: number;\r\n  elevationMode?: ElevationMode;\r\n  indoorMapId?: MapId;\r\n  indoorMapFloorId?: MapFloorId;\r\n};\r\n\r\ndeclare class MarkerType extends L.Marker {\r\n  options: MarkerOptions;\r\n  constructor(latLng: L.LatLngExpression, options?: MarkerOptions);\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n  getElevationMode(): ElevationMode;\r\n  setElevationMode(elevationMode: ElevationMode): this;\r\n  setIndoorMapWithFloorId(indoorMapId: MapId, indoorMapFloorId: MapFloorId): this;\r\n  setIndoorMapWithFloorIndex(indoorMapId: MapId, indoorMapFloorIndex: MapFloorIndex): this;\r\n  setOutdoor(): this;\r\n}\r\n\r\nexport type Marker = MarkerType;\r\n\r\nexport const Marker: typeof MarkerType = L.Marker.extend({\r\n  initialize: function (latLng: L.LatLngExpression, options?: MarkerOptions) {\r\n    L.Marker.prototype.initialize.call(this, latLng, options);\r\n    this.on(\"dragstart\", this._onDragStart);\r\n    this.on(\"drag\", this._onDrag);\r\n    this.on(\"dragend\", this._onDragEnd);\r\n    this._elevationBeforeDrag = 0;\r\n    this._isDragging = false;\r\n    this._latOffsetForDrag = 0;\r\n    this._lngOffsetForDrag = 0;\r\n  },\r\n\r\n  options: {\r\n    elevation: 0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n  },\r\n\r\n  getElevation: function (): number {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  setElevation: function (elevation: number) {\r\n    this.options.elevation = elevation;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (mode: ElevationMode) {\r\n    if (isValidElevationMode(mode)) {\r\n      this.options.elevationMode = mode;\r\n\r\n      if (this._map !== null) {\r\n        this._map._createPointMapping(this);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  getElevationMode: function (): ElevationMode {\r\n    return this.options.elevationMode;\r\n  },\r\n\r\n  setIndoorMapWithFloorId: function (indoorMapId: MapId, indoorMapFloorId: MapFloorId) {\r\n    this.options.indoorMapId = indoorMapId;\r\n    this.options.indoorMapFloorId = indoorMapFloorId;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setIndoorMapWithFloorIndex: function (indoorMapId: MapId, indoorMapFloorIndex: MapFloorIndex) {\r\n    this.options.indoorMapId = indoorMapId;\r\n    this.options.indoorMapFloorIndex = indoorMapFloorIndex;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setOutdoor: function () {\r\n    delete this.options.indoorMapId;\r\n    delete this.options.indoorMapFloorId;\r\n    delete this.options.indoorMapFloorIndex;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setLatLng: function (latLng: L.LatLngExpression) {\r\n    const baseReturnValue = L.Marker.prototype.setLatLng.call(this, latLng);\r\n\r\n    if (this._map) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return baseReturnValue;\r\n  },\r\n\r\n  update: function () {\r\n    if (this._icon) {\r\n      // todo: should probably just have a single api point here to get screen pos\r\n      const latLngs = this._map.latLngsForLayer(this);\r\n      let screenPos;\r\n      if (this._isDragging) {\r\n        // Leaflet updates the latlng directly during a drag event to correspond to screen pos\r\n        screenPos = this._map.latLngToLayerPoint(this.getLatLng());\r\n      } else {\r\n        screenPos = this._map.latLngToLayerPoint(latLngs[0]);\r\n      }\r\n      this._setPos(screenPos);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  _setPos: function (pos: L.Point) {\r\n    const setPosFunc = L.Browser.gecko ? setPositionSmooth : L.DomUtil.setPosition;\r\n\r\n    setPosFunc(this._icon, pos);\r\n\r\n    if (this._shadow) {\r\n      setPosFunc(this._shadow, pos);\r\n    }\r\n\r\n    this._zIndex = pos.y * 10000 + this.options.zIndexOffset * 10000;\r\n\r\n    this._resetZIndex();\r\n  },\r\n\r\n  bindPopup: function (this: Marker, content: Content | L.Popup, options?: PopupOptions) {\r\n    let popup = content;\r\n    if (!(content instanceof L.Popup)) {\r\n      if (!options) {\r\n        options = {};\r\n      }\r\n\r\n      // copy relevant marker options into popup\r\n      if (!(\"elevation\" in options)) {\r\n        options.elevation = this.getElevation();\r\n      }\r\n\r\n      if (!(\"elevationMode\" in options)) {\r\n        options.elevationMode = this.options.elevationMode;\r\n      }\r\n\r\n      copyIndoorMapOptions(this.options, options);\r\n\r\n      popup = new Popup(options, this).setContent(content);\r\n    }\r\n    return L.Marker.prototype.bindPopup.call(this, popup, options);\r\n  },\r\n\r\n  _onDragStart: function () {\r\n    // During drag, leaflet uses screen space for positioning. This has no notion of altitude\r\n    // so we need to compensate at the beginning and end of the drag.\r\n    this._isDragging = true;\r\n    this._elevationBeforeDrag = this.getElevation();\r\n    const flatPos = L.DomUtil.getPosition(this._icon);\r\n    const flatLatLng = this._map.layerPointToLatLng(flatPos);\r\n    const realLatLng = this.getLatLng();\r\n    this._latOffsetForDrag = realLatLng.lat - flatLatLng.lat;\r\n    this._lngOffsetForDrag = realLatLng.lng - flatLatLng.lng;\r\n    this.setLatLng(flatLatLng);\r\n  },\r\n\r\n  _onDrag: function () {\r\n    this._map._createPointMapping(this);\r\n  },\r\n\r\n  _onDragEnd: function () {\r\n    const flatLatLng = this.getLatLng();\r\n    if (this.options.indoorMapId) {\r\n      // preserve the original elevation, offsetting the position accordingly\r\n      this.setLatLng(\r\n        new L.LatLng(\r\n          flatLatLng.lat + this._latOffsetForDrag,\r\n          flatLatLng.lng + this._lngOffsetForDrag,\r\n          this._elevationBeforeDrag\r\n        )\r\n      );\r\n    } else {\r\n      // we're dragging a marker outside, the original elevation above ground may not be relevant in its new location\r\n      // so just place it where it was dragged\r\n      this.setLatLng(new L.LatLng(flatLatLng.lat, flatLatLng.lng));\r\n      this.options.elevation = 0;\r\n    }\r\n    this._map._createPointMapping(this);\r\n    this._latOffsetForDrag = 0;\r\n    this._lngOffsetForDrag = 0;\r\n    this._elevationBeforeDrag = 0;\r\n    this._isDragging = false;\r\n  },\r\n});\r\n\r\nexport const marker = factoryFor(Marker);\r\n","import L from \"leaflet\";\r\nimport { marker as _marker } from \"../public/marker\";\r\n\r\nexport function IndoorEntranceMarkerUpdater (map, indoorsModule) {\r\n\r\n\tvar _map = map;\r\n\tvar _indoorsModule = indoorsModule;\r\n\tvar _entranceMarkers = {};\r\n\tvar _layerGroup = L.layerGroup([]);\r\n\r\n\tvar _entranceIcon = L.icon({\r\n\t    iconUrl: \"https://cdn-webgl.wrld3d.com/wrldjs/resources/indoor_map_entrance_marker.png\",\r\n\t    iconRetinaUrl: \"https://cdn-webgl.wrld3d.com/wrldjs/resources/indoor_map_entrance_marker@2.png\",\r\n\t    iconSize: [48, 48],\r\n\t    iconAnchor: [24, 48]\r\n\t});\r\n\r\n\tvar _addEntranceMarker = (event) => {\r\n\t\tvar entrance = event.entrance;\r\n\t\tvar id = entrance.getIndoorMapId();\r\n\r\n\t\tvar marker = _createEntranceMarker(entrance);\r\n\t\tmarker.addTo(_layerGroup);\r\n\t\t_entranceMarkers[id] = marker;\r\n\t};\r\n\r\n\tvar _removeEntranceMarker = (event) => {\r\n\t\tvar entrance = event.entrance;\r\n\t\tvar id = entrance.getIndoorMapId();\r\n\r\n\t\tvar marker = _entranceMarkers[id];\r\n\t\t_layerGroup.removeLayer(marker);\r\n\t\tdelete _entranceMarkers[id];\r\n\t};\r\n\r\n\tvar _createEntranceMarker = (entrance) => {\r\n\t\tvar marker = _marker(entrance.getLatLng(), {\r\n\t\t\ttitle: entrance.getIndoorMapName(),\r\n\t\t\ticon: _entranceIcon\r\n\t\t});\r\n\t\tmarker.on(\"click\", function () {\r\n\t\t\t_indoorsModule.enter(entrance);\r\n\t\t});\r\n\t\treturn marker;\r\n\t};\r\n\r\n\tvar _showEntranceMarkers = () => {\r\n\t\t_map.addLayer(_layerGroup);\r\n\t};\r\n\r\n\tvar _hideEntranceMarkers = () => {\r\n\t\t_map.removeLayer(_layerGroup);\r\n\t};\r\n\r\n\t_showEntranceMarkers();\r\n\r\n\t_indoorsModule.on(\"indoorentranceadd\", _addEntranceMarker);\r\n\t_indoorsModule.on(\"indoorentranceremove\", _removeEntranceMarker);\r\n\r\n\t_indoorsModule.on(\"indoormapenter\", _hideEntranceMarkers);\r\n\t_indoorsModule.on(\"indoormapexit\", _showEntranceMarkers);\r\n\r\n\tthis.removeAllEntranceMarkers = () => {\r\n\t\t_layerGroup.clearLayers();\r\n\t\t_entranceMarkers = {};\r\n\t};\r\n\r\n}\r\n\r\nexport default IndoorEntranceMarkerUpdater;\r\n","import type CameraApi from \"../emscripten_api/emscripten_camera_api\";\r\nimport type { Map } from \"leaflet\";\r\n\r\nconst _eventType = [\r\n  \"move\",\r\n  \"movestart\",\r\n  \"moveend\",\r\n  \"drag\",\r\n  \"dragstart\",\r\n  \"dragend\",\r\n  \"pan\",\r\n  \"panstart\",\r\n  \"panend\",\r\n  \"rotate\",\r\n  \"rotatestart\",\r\n  \"rotateend\",\r\n  \"tilt\",\r\n  \"tiltstart\",\r\n  \"tiltend\",\r\n  \"zoom\",\r\n  \"zoomstart\",\r\n  \"zoomend\",\r\n  \"transitionstart\",\r\n  \"transitionend\",\r\n];\r\n\r\nexport class MapMoveEvents {\r\n  private _onEvent: (eventKey: number) => void;\r\n\r\n  constructor(leafletMap: Map) {\r\n    this._onEvent = (eventKey: number) => {\r\n      if (typeof _eventType[eventKey] === undefined) {\r\n        return;\r\n      }\r\n      leafletMap.fire(_eventType[eventKey]);\r\n    };\r\n  }\r\n\r\n  setEventCallbacks = (cameraApi: CameraApi): void => {\r\n    cameraApi.setEventCallback(this._onEvent);\r\n  };\r\n}\r\n\r\nexport default MapMoveEvents;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nexport class MapModuleClass {\r\n  /** @internal */ onUpdate(_dt: number) {}\r\n\r\n  /** @internal */ onDraw(_dt: number) {}\r\n\r\n  /** @internal */ onInitialized() {}\r\n\r\n  /** @internal */ onInitialStreamingCompleted() {}\r\n}\r\n\r\n/**\r\n * Used for legacy class extensions via prototype, use MapModuleClass with ES5 classes.\r\n * @deprecated\r\n */\r\nexport const MapModule = {\r\n  onUpdate: (_dt: number) => {},\r\n\r\n  onDraw: (_dt: number) => {},\r\n\r\n  onInitialized: () => {},\r\n\r\n  onInitialStreamingCompleted: () => {},\r\n};\r\n\r\nexport default MapModule;\r\n","export enum season {\r\n  Spring = \"Spring\",\r\n  Summer = \"Summer\",\r\n  Autumn = \"Autumn\",\r\n  Winter = \"Winter\",\r\n}\r\n\r\nexport enum time {\r\n  Dawn = \"Dawn\",\r\n  Day = \"Day\",\r\n  Dusk = \"Dusk\",\r\n  Night = \"Night\",\r\n}\r\n\r\nexport enum weather {\r\n  Clear = \"Default\",\r\n  Overcast = \"Overcast\",\r\n  Foggy = \"Foggy\",\r\n  Rainy = \"Rainy\",\r\n  Snowy = \"Snowy\",\r\n}\r\n","import { MapModuleClass } from \"./map_module\";\r\nimport { season as Season, time as Time, weather as Weather } from \"../../public/themes\";\r\nimport type { EmscriptenApi } from \"../emscripten_api/emscripten_api\";\r\n\r\nexport class ThemesModule extends MapModuleClass {\r\n  private _emscriptenApi: EmscriptenApi;\r\n  private _ready: boolean;\r\n  private _season: Season;\r\n  private _time: Time;\r\n  private _weather: Weather;\r\n  private _shouldChangeTheme: boolean;\r\n  private _shouldChangeState: boolean;\r\n\r\n  constructor(emscriptenApi: EmscriptenApi) {\r\n    super();\r\n    this._emscriptenApi = emscriptenApi;\r\n    this._ready = false;\r\n\r\n    this._season = Season.Summer;\r\n    this._time = Time.Day;\r\n    this._weather = Weather.Clear;\r\n\r\n    this._shouldChangeTheme = false;\r\n    this._shouldChangeState = false;\r\n  }\r\n\r\n  private _updateTheme = (): void => {\r\n    if (!this._ready) {\r\n      return;\r\n    }\r\n\r\n    if (this._shouldChangeTheme) {\r\n      this._emscriptenApi.themesApi?.setTheme(this._season);\r\n      this._shouldChangeTheme = false;\r\n    }\r\n\r\n    if (this._shouldChangeState) {\r\n      this._emscriptenApi.themesApi?.setState(this._time + this._weather, 1.0);\r\n      this._shouldChangeState = false;\r\n    }\r\n  };\r\n\r\n  private _tryMatchBuiltIn = (season: Season, time: Time, weather: Weather): {season: Season, time: Time, weather: Weather} => {\r\n    const caseInsensitiveMatchWithCollection = (key: string, values: string[]) => {\r\n      const keyUpper = key.toUpperCase();\r\n      const matchedValue = values.find(function (item) {\r\n        return keyUpper.localeCompare(item.toUpperCase()) === 0;\r\n      });\r\n      return matchedValue ? matchedValue : key;\r\n    };\r\n\r\n    return {\r\n      season: caseInsensitiveMatchWithCollection(season, Object.values(season)) as Season,\r\n      time: caseInsensitiveMatchWithCollection(time, Object.values(time)) as Time,\r\n      weather: caseInsensitiveMatchWithCollection(weather, Object.values(weather)) as Weather,\r\n    };\r\n  };\r\n\r\n  private _onThemesStreamingCompleted = (): void => {\r\n    this._ready = true;\r\n    this._updateTheme();\r\n  };\r\n\r\n  setTheme = (season: Season, time: Time, weather: Weather): void => {\r\n    const themeInfo = this._tryMatchBuiltIn(season, time, weather);\r\n\r\n    if (themeInfo.season !== this._season) {\r\n      this._shouldChangeTheme = true;\r\n    }\r\n\r\n    if (themeInfo.time !== this._time || themeInfo.weather !== this._weather) {\r\n      this._shouldChangeState = true;\r\n    }\r\n\r\n    this._season = themeInfo.season;\r\n    this._time = themeInfo.time;\r\n    this._weather = themeInfo.weather;\r\n    this._updateTheme();\r\n  };\r\n\r\n  setSeason = (season: Season): void => {\r\n    this.setTheme(season, this._time, this._weather);\r\n  };\r\n\r\n  getSeason = (): Season => this._season;\r\n\r\n  setTime = (time: Time): void => {\r\n    this.setTheme(this._season, time, this._weather);\r\n  };\r\n\r\n  getTime = (): Time => this._time;\r\n\r\n  setWeather = (weather: Weather): void => {\r\n    this.setTheme(this._season, this._time, weather);\r\n  };\r\n\r\n  getWeather = (): Weather => this._weather;\r\n\r\n  setEnvironmentThemesManifest = (environmentThemesManifest: string): void => {\r\n    if (!this._ready) {\r\n      return;\r\n    }\r\n    this._emscriptenApi.themesApi?.setThemeManifest(environmentThemesManifest);\r\n  };\r\n\r\n  /** @internal */ onInitialized(): void {\r\n    this._emscriptenApi.themesApi?.registerStreamingCompletedCallback(this._onThemesStreamingCompleted);\r\n  }\r\n}\r\n\r\nexport default ThemesModule;\r\n","import IndoorMapFloor from \"./indoor_map_floor\";\r\nimport type { MapId } from \"../map\";\r\n\r\nexport type SearchTag = {\r\n  name: string;\r\n  search_tag: string;\r\n  icon_key: string;\r\n};\r\n\r\nexport class IndoorMap {\r\n  private _indoorMapId: MapId;\r\n  private _indoorMapName: string;\r\n  private _indoorMapSourceVendor: string;\r\n  private _floorCount: number;\r\n  private _floors: IndoorMapFloor[];\r\n  private _searchTags: SearchTag[];\r\n  public exit: () => void;\r\n\r\n  constructor(\r\n    indoorMapId: MapId,\r\n    indoorMapName: string,\r\n    indoorMapSourceVendor: string,\r\n    floorCount: number,\r\n    floors: IndoorMapFloor[],\r\n    searchTags: SearchTag[],\r\n    exitFunc: () => void\r\n  ) {\r\n    this._indoorMapId = indoorMapId;\r\n    this._indoorMapName = indoorMapName;\r\n    this._indoorMapSourceVendor = indoorMapSourceVendor;\r\n    this._floorCount = floorCount;\r\n    this._floors = floors;\r\n    this._searchTags = searchTags;\r\n    this.exit = exitFunc;\r\n  }\r\n\r\n  getIndoorMapId(): MapId {\r\n    return this._indoorMapId;\r\n  }\r\n\r\n  getIndoorMapName(): string {\r\n    return this._indoorMapName;\r\n  }\r\n\r\n  getIndoorMapSourceVendor(): string {\r\n    return this._indoorMapSourceVendor;\r\n  }\r\n\r\n  getFloorCount(): number {\r\n    return this._floorCount;\r\n  }\r\n\r\n  getFloors(): IndoorMapFloor[] {\r\n    return this._floors;\r\n  }\r\n\r\n  getSearchTags(): SearchTag[] {\r\n    return this._searchTags;\r\n  }\r\n}\r\n\r\nexport default IndoorMap;\r\n","import type { MapId } from \"../map\";\r\n\r\nexport class IndoorMapEntrance {\r\n  private _indoorMapId: MapId;\r\n  private _indoorMapName: string;\r\n  private _latLng: L.LatLng;\r\n\r\n  constructor(indoorMapId: MapId, indoorMapName: string, latLng: L.LatLng) {\r\n    this._indoorMapId = indoorMapId;\r\n    this._indoorMapName = indoorMapName;\r\n    this._latLng = latLng;\r\n  }\r\n\r\n  getIndoorMapId(): MapId {\r\n    return this._indoorMapId;\r\n  }\r\n\r\n  getIndoorMapName(): string {\r\n    return this._indoorMapName;\r\n  }\r\n\r\n  getLatLng(): L.LatLng {\r\n    return this._latLng;\r\n  }\r\n}\r\n\r\nexport default IndoorMapEntrance;\r\n","export class IndoorMapFloor {\r\n  private _floorId: number;\r\n  private _floorIndex: number;\r\n  private _floorName: string;\r\n  private _floorShortName: string;\r\n\r\n  constructor(floorId: number, floorIndex: number, floorName: string, floorShortName: string) {\r\n    this._floorId = floorId;\r\n    this._floorIndex = floorIndex;\r\n    this._floorName = floorName;\r\n    this._floorShortName = floorShortName;\r\n  }\r\n\r\n  /**\r\n   * Note: this is for compatibility with the existing API – the short name was exposed as id. The actual id property in the submission json is not accessible through this API.\r\n   *\r\n   * @deprecated use {@link IndoorMapFloor.getFloorShortName} instead.\r\n   * @returns {string} the short name of the floor.\r\n   */\r\n  getFloorId(): string {\r\n    return this._floorShortName;\r\n  }\r\n\r\n  /**\r\n   * Note: this is for compatibility with the existing API. The actual id property in the submission json is not accessible through this API.\r\n   *\r\n   * @deprecated use {@link IndoorMapFloor.getFloorZOrder}\r\n   * @returns {number} the z_order of the floor, as defined in the json submission.\r\n   */\r\n  _getFloorId(): number {\r\n    return this._floorId;\r\n  }\r\n\r\n  /**\r\n   * @returns {number} the z_order of the floor, as defined in the json submission.\r\n   */\r\n  getFloorZOrder(): number {\r\n    return this._floorId;\r\n  }\r\n\r\n  /**\r\n   * @returns {number} the index of this floor in the array.\r\n   */\r\n  getFloorIndex(): number {\r\n    return this._floorIndex;\r\n  }\r\n\r\n  getFloorName(): string {\r\n    return this._floorName;\r\n  }\r\n\r\n  getFloorShortName(): string {\r\n    return this._floorShortName;\r\n  }\r\n}\r\n\r\nexport default IndoorMapFloor;\r\n","export function IndoorWatermarkController (mapId, showWrldWatermark) {\r\n  var _indoorWatermarkElement = null;\r\n  var _elementId = \"wrld-indoor-map-watermark\" + mapId;\r\n  var _urlRoot = \"https://cdn-webgl.wrld3d.com/wrldjs/resources/indoor-vendors/\";\r\n  var _showWrldWatermark = showWrldWatermark;\r\n\r\n  var _eegeoVenderKey = \"eegeo\";\r\n\r\n  var _buildUrlForVendor = (vendorKey) => {\r\n    var vendorKeyLower = vendorKey.toLowerCase();\r\n    if (vendorKeyLower === _eegeoVenderKey) {\r\n      vendorKeyLower = \"wrld\";\r\n    }\r\n    return _urlRoot + vendorKeyLower + \"_logo.png\";\r\n  };\r\n\r\n  var _precacheKnownVendors = () => {\r\n    var knownVendors = [_eegeoVenderKey, \"micello\"];\r\n\r\n    knownVendors.forEach(function (vendor) {\r\n      var vendorImageUrl = _buildUrlForVendor(vendor);\r\n      var tempImage = new Image();\r\n      tempImage.src = vendorImageUrl;\r\n    });\r\n  };\r\n\r\n  _precacheKnownVendors();\r\n\r\n  this.showWatermarkForVendor = (vendorKey) => {\r\n\r\n    if ((vendorKey === _eegeoVenderKey) &&\r\n      !_showWrldWatermark) {\r\n      return;\r\n    }\r\n\r\n    var imageUrl = _buildUrlForVendor(vendorKey);\r\n\r\n    if (_indoorWatermarkElement === null) {\r\n      _indoorWatermarkElement = document.getElementById(_elementId);\r\n    }\r\n\r\n    _indoorWatermarkElement.src = imageUrl;\r\n    _indoorWatermarkElement.style.bottom = 0;\r\n  };\r\n\r\n  this.hideWatermark = () => {\r\n    if (_indoorWatermarkElement !== null) {\r\n      _indoorWatermarkElement.style.bottom = \"-50px\";\r\n    }\r\n  };\r\n}\r\n\r\nexport default IndoorWatermarkController;","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\nimport { IndoorMap, IndoorMapFloor, IndoorMapEntrance } from \"../../public/indoors\";\r\nimport IndoorWatermarkController from \"../indoor_watermark_controller\";\r\n\r\nfunction IndoorsModule (emscriptenApi, mapController, mapId, indoorId, floorIndex, center, headingDegrees, zoom, showWrldWatermark, backgroundColor) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _mapController = mapController;\r\n\r\n    var _activeIndoorMap = null;\r\n    var _entrances = {};\r\n\r\n    var _ready = false;\r\n    var _pendingEnterTransition = null;\r\n    var _transitioningToIndoorMap = false;\r\n\r\n    var _indoorWatermarkController = new IndoorWatermarkController(mapId, showWrldWatermark);\r\n\r\n    var _startingIndoorId = indoorId;\r\n    var _startingFloorIndex = floorIndex;\r\n    var _center = center;\r\n    var _headingDegrees = headingDegrees;\r\n    var _zoom = zoom;\r\n    var _backgroundColor = backgroundColor;\r\n\r\n    \r\n\r\n    var _createIndoorMapObject = () => {\r\n        var mapId = _emscriptenApi.indoorsApi.getActiveIndoorMapId();\r\n        var mapName = _emscriptenApi.indoorsApi.getActiveIndoorMapName();\r\n        var sourceVendor = _emscriptenApi.indoorsApi.getActiveIndoorMapSourceVendor();\r\n        var floorCount = _emscriptenApi.indoorsApi.getActiveIndoorMapFloorCount();\r\n        var floors = _createFloorsArray(floorCount);\r\n        var searchTags = _createSearchTagsArray();\r\n        var exitFunc = this.exit;\r\n        var indoorMap = new IndoorMap(mapId, mapName, sourceVendor, floorCount, floors, searchTags, exitFunc);\r\n        return indoorMap;\r\n    };\r\n\r\n    var _createFloorsArray = (floorCount) => {\r\n        var floors = [];\r\n        for (var i = 0; i < floorCount; ++i) {\r\n            var floorIndex = i;\r\n            var floorName = _emscriptenApi.indoorsApi.getFloorName(i);\r\n            var floorShortName = _emscriptenApi.indoorsApi.getFloorShortName(i);\r\n            var floorNumber = _emscriptenApi.indoorsApi.getFloorNumber(i);\r\n\r\n            var floorId = floorNumber;\r\n\r\n            var floor = new IndoorMapFloor(floorId, floorIndex, floorName, floorShortName);\r\n            floors.push(floor);\r\n        }\r\n        return floors;\r\n    };\r\n\r\n    var _createSearchTagsArray = () => {\r\n        var userData;\r\n        try {\r\n            userData = JSON.parse(_emscriptenApi.indoorsApi.getActiveIndoorMapUserData());\r\n        }\r\n        catch (e) {\r\n            return [];\r\n        }\r\n\r\n        if (typeof userData.search_menu_items !== \"object\") { return []; }\r\n        if (!(userData.search_menu_items.items instanceof Array)) { return []; }\r\n\r\n        var searchTags = [];\r\n        userData.search_menu_items.items.forEach((item) => {\r\n                searchTags.push({\r\n                    name: item.name,\r\n                    search_tag: item.search_tag,\r\n                    icon_key: item.icon_key\r\n                });\r\n            });\r\n        return searchTags;\r\n    };\r\n\r\n    var _executeIndoorMapEnteredCallbacks = () => {\r\n        _activeIndoorMap = _createIndoorMapObject();\r\n        this.fire(\"indoormapenter\", { indoorMap: _activeIndoorMap });\r\n    };\r\n\r\n    var _executeIndoorMapEnterFailedCallbacks = () => {\r\n        this.fire(\"indoormapenterfailed\", {});\r\n    };\r\n\r\n    var _executeIndoorMapExitedCallbacks = () => {\r\n        var indoorMap = _activeIndoorMap;\r\n        _activeIndoorMap = null;\r\n        _indoorWatermarkController.hideWatermark();\r\n        this.fire(\"indoormapexit\", { indoorMap: indoorMap });\r\n    };\r\n\r\n    var _executeIndoorMapFloorChangedCallbacks = () => {\r\n        this.fire(\"indoormapfloorchange\", { floor: this.getFloor() });\r\n    };\r\n\r\n    var _executeIndoorMapEntranceAddedCallbacks = (indoorMapId, indoorMapName, indoorMapLatLng) => {\r\n        // discard the altitude, as we're going to use the SDK IPointOnMap positioning to snap it to the terrain (this is now default)\r\n        // alternative is to use the altitude, but use \"elevationMode: heightAboveSeaLevel\" when creating the indoor entrance marker\r\n        var entrance = new IndoorMapEntrance(indoorMapId, indoorMapName, L.latLng([indoorMapLatLng.lat, indoorMapLatLng.lng]));\r\n        _entrances[entrance.getIndoorMapId()] = entrance;\r\n        this.fire(\"indoorentranceadd\", { entrance: entrance });\r\n    };\r\n\r\n    var _executeIndoorMapEntranceRemovedCallbacks = (indoorMapId, indoorMapName, indoorMapLatLng) => {\r\n        var entrance = new IndoorMapEntrance(indoorMapId, indoorMapName, indoorMapLatLng);\r\n        delete _entrances[entrance.getIndoorMapId()];\r\n        this.fire(\"indoorentranceremove\", { entrance: entrance });\r\n    };\r\n\r\n    var _executeIndoorMapLoadedCallbacks = (indoorMapId) => {\r\n        this.fire(\"indoormapload\", { indoorMapId: indoorMapId });\r\n    };\r\n\r\n    var _executeIndoorMapUnloadedCallbacks = (indoorMapId) => {\r\n        this.fire(\"indoormapunload\", { indoorMapId: indoorMapId });\r\n    };\r\n\r\n    var _executeEntityClickedCallbacks = (ids) => {\r\n        var idArray = ids.split(\"|\");\r\n        this.fire(\"indoorentityclick\", { ids: idArray });\r\n    };\r\n\r\n    var _onCollapseStart = () => {\r\n        this.fire(\"collapsestart\");\r\n    };\r\n\r\n    var _onCollapse = () => {\r\n        this.fire(\"collapse\");\r\n    };\r\n\r\n    var _onCollapseEnd = () => {\r\n        this.fire(\"collapseend\");\r\n    };\r\n\r\n    var _onExpandStart = () => {\r\n        this.fire(\"expandstart\");\r\n    };\r\n\r\n    var _onExpand = () => {\r\n        this.fire(\"expand\");\r\n    };\r\n\r\n    var _onExpandEnd = () => {\r\n        this.fire(\"expandend\");\r\n    };\r\n\r\n    var _enterIndoorMap = (indoorMapId) => {\r\n        this.fire(\"indoormapenterrequested\");\r\n        _emscriptenApi.indoorsApi.enterIndoorMap(indoorMapId);\r\n    };\r\n\r\n    var _transitionToIndoorMap = (config) => {\r\n\r\n        _transitioningToIndoorMap = true;\r\n\r\n        if (!_ready) {\r\n            _pendingEnterTransition = config;\r\n            return;\r\n        }\r\n        var animated = \"animate\" in config ? config[\"animate\"] : true;\r\n        _emscriptenApi.cameraApi.setView({ location: config.latLng, distance: config.distance, allowInterruption: false, headingDegrees: config.orientation, animate: animated });\r\n        _mapController._setIndoorTransitionCompleteEventListener(function () { _enterIndoorMap(config.indoorMapId); });\r\n\r\n        this.once(\"indoormapenter\", () => {\r\n                _transitioningToIndoorMap = false;\r\n                var vendorKey = _activeIndoorMap.getIndoorMapSourceVendor();\r\n                _indoorWatermarkController.showWatermarkForVendor(vendorKey);\r\n            });\r\n        this.once(\"indoormapenterfailed\", () => {\r\n                _transitioningToIndoorMap = false;\r\n            });\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _emscriptenApi.indoorsApi.onInitialized();\r\n\r\n        _emscriptenApi.indoorsApi.setNotificationCallbacks(\r\n            _executeIndoorMapEnteredCallbacks,\r\n            _executeIndoorMapEnterFailedCallbacks,\r\n            _executeIndoorMapExitedCallbacks,\r\n            _executeIndoorMapFloorChangedCallbacks,\r\n            _executeIndoorMapEntranceAddedCallbacks,\r\n            _executeIndoorMapEntranceRemovedCallbacks,\r\n            _executeIndoorMapLoadedCallbacks,\r\n            _executeIndoorMapUnloadedCallbacks\r\n        );\r\n\r\n        _emscriptenApi.indoorEntityApi.onInitialized();\r\n        _emscriptenApi.indoorEntityApi.registerIndoorEntityPickedCallback(_executeEntityClickedCallbacks);\r\n\r\n        _emscriptenApi.expandFloorsApi.setCollapseStartCallback(_onCollapseStart);\r\n        _emscriptenApi.expandFloorsApi.setCollapseCallback(_onCollapse);\r\n        _emscriptenApi.expandFloorsApi.setCollapseEndCallback(_onCollapseEnd);\r\n        _emscriptenApi.expandFloorsApi.setExpandStartCallback(_onExpandStart);\r\n        _emscriptenApi.expandFloorsApi.setExpandCallback(_onExpand);\r\n        _emscriptenApi.expandFloorsApi.setExpandEndCallback(_onExpandEnd);\r\n\r\n\r\n        _emscriptenApi.indoorsApi.setBackgroundColor(_backgroundColor);\r\n    };\r\n\r\n    this.onInitialStreamingCompleted = () => {\r\n        _ready = true;\r\n\r\n        if (_startingIndoorId) {\r\n            var config = {\r\n                latLng: _center,\r\n                zoom: _zoom,\r\n                indoorMapId: _startingIndoorId,\r\n                orientation: _headingDegrees\r\n            };\r\n            this.enter(_startingIndoorId, config);\r\n\r\n            if (_startingFloorIndex) {\r\n                this.once(\"indoormapenter\", function() { this.setFloor(Number(_startingFloorIndex)); });\r\n            }\r\n        }\r\n\r\n        if (_pendingEnterTransition !== null) {\r\n            _transitionToIndoorMap(_pendingEnterTransition);\r\n            _pendingEnterTransition = null;\r\n        }\r\n    };\r\n\r\n    this.exit = () => {\r\n        if (_emscriptenApi.ready()) {\r\n            _emscriptenApi.indoorsApi.exitIndoorMap();\r\n            _indoorWatermarkController.hideWatermark();\r\n        }\r\n        _pendingEnterTransition = null;\r\n        _transitioningToIndoorMap = false;\r\n        return this;\r\n    };\r\n\r\n    this.isIndoors = () => _activeIndoorMap !== null;\r\n\r\n    this.getActiveIndoorMap = () => _activeIndoorMap;\r\n\r\n    this.getFloor = () => {\r\n        if (this.isIndoors()) {\r\n            var index = _emscriptenApi.indoorsApi.getSelectedFloorIndex();\r\n            return _activeIndoorMap.getFloors()[index];\r\n        }\r\n        return null;\r\n    };\r\n\r\n    this.setFloor = (floor) => {\r\n        if (!this.isIndoors()) {\r\n            return false;\r\n        }\r\n\r\n        var index = null;\r\n        var floors = _activeIndoorMap.getFloors();\r\n\r\n        if (typeof floor === \"number\") {\r\n            index = floor;\r\n        }\r\n        else if (typeof floor === \"object\") {\r\n            var floorIndex = floors.indexOf(floor);\r\n            index = (floorIndex >= 0) ? floorIndex : null;\r\n        }\r\n        else if (typeof floor === \"string\") {\r\n            for (var i = 0; i < floors.length; ++i) {\r\n                if (floors[i].getFloorShortName() === floor) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (index !== null) {\r\n            return _emscriptenApi.indoorsApi.setSelectedFloorIndex(index);\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    this.moveUp = (numberOfFloors) => {\r\n        var delta = (typeof numberOfFloors === \"undefined\") ? 1 : numberOfFloors;\r\n        var thisFloor = this.getFloor();\r\n        if (thisFloor === null) {\r\n            return false;\r\n        }\r\n        return this.setFloor(thisFloor.getFloorIndex() + delta);\r\n    };\r\n\r\n    this.moveDown = (numberOfFloors) => {\r\n        var delta = (typeof numberOfFloors === \"undefined\") ? -1 : -numberOfFloors;\r\n        return this.moveUp(delta);\r\n    };\r\n\r\n    this.enter = (indoorMap, config) => {\r\n        if (this.isIndoors() || _transitioningToIndoorMap) {\r\n            return false;\r\n        }\r\n\r\n        var indoorMapId = null;\r\n        if (typeof indoorMap === \"object\" && \"getIndoorMapId\" in indoorMap && typeof indoorMap[\"getIndoorMapId\"] === \"function\") {\r\n            indoorMapId = indoorMap.getIndoorMapId();\r\n        }\r\n        else if (typeof indoorMap === \"string\") {\r\n            indoorMapId = indoorMap;\r\n        }\r\n\r\n        var entrance = _entrances[indoorMapId] || null;\r\n\r\n        var latLng = null;\r\n        if (entrance !== null) {\r\n            latLng = entrance.getLatLng();\r\n        }\r\n        else if (config && config.latLng) {\r\n            latLng = config.latLng;\r\n        }\r\n\r\n        if (latLng === null) {\r\n            if (!_ready) {\r\n                return false;\r\n            }\r\n\r\n            _enterIndoorMap(indoorMapId);\r\n            return true;\r\n        }\r\n\r\n        var distance = 400;\r\n\r\n        var defaultConfig = {\r\n            latLng: latLng,\r\n            distance: distance,\r\n            indoorMapId: indoorMapId,\r\n            orientation: 0\r\n        };\r\n\r\n        _transitionToIndoorMap(Object.assign(defaultConfig, config));\r\n\r\n        return true;\r\n    };\r\n\r\n    this.getFloorInterpolation = () => {\r\n        if (_activeIndoorMap !== null) {\r\n            var floorParam = _emscriptenApi.expandFloorsApi.getFloorParam();\r\n            var normalizedValue = floorParam / _activeIndoorMap.getFloorCount();\r\n            return normalizedValue;\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    this.getFloorHeightAboveSeaLevel = (floorIndex) => {\r\n        if (this.isIndoors() &&\r\n            floorIndex >= 0 &&\r\n            floorIndex < _activeIndoorMap.getFloorCount()) {\r\n            return _emscriptenApi.indoorsApi.getFloorHeightAboveSeaLevel(floorIndex);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    this.tryGetReadableName = (indoorMapId) => {\r\n        if (_emscriptenApi.ready()) {\r\n            return _emscriptenApi.indoorsApi.tryGetReadableName(indoorMapId);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    this.tryGetFloorReadableName = (indoorMapId, indoorMapFloorId) => {\r\n        if (_emscriptenApi.ready()) {\r\n            return _emscriptenApi.indoorsApi.tryGetFloorReadableName(indoorMapId, indoorMapFloorId);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    this.tryGetFloorShortName = (indoorMapId, indoorMapFloorId) => {\r\n        if (_emscriptenApi.ready()) {\r\n            return _emscriptenApi.indoorsApi.tryGetFloorShortName(indoorMapId, indoorMapFloorId);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    this.setFloorInterpolation = (value) => {\r\n        if (_activeIndoorMap !== null) {\r\n            var floorParam = value * _activeIndoorMap.getFloorCount();\r\n            _emscriptenApi.expandFloorsApi.setFloorParam(floorParam);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    this.setFloorFromInterpolation = (interpolationParam) => {\r\n        if (_activeIndoorMap === null) {\r\n            return false;\r\n        }\r\n\r\n        var t = (typeof interpolationParam === \"undefined\") ? this.getFloorInterpolation() : interpolationParam;\r\n        var floorIndex = Math.round(t * _activeIndoorMap.getFloorCount());\r\n        return this.setFloor(floorIndex);\r\n    };\r\n\r\n    this.expand = () => {\r\n        _emscriptenApi.expandFloorsApi.expandIndoorMap();\r\n        return this;\r\n    };\r\n\r\n    this.collapse = () => {\r\n        _emscriptenApi.expandFloorsApi.collapseIndoorMap();\r\n        return this;\r\n    };\r\n\r\n    this.setEntityHighlights = (ids, highlightColor, indoorMapId, highlightBorderThickness) => {\r\n        if (!_ready) return;\r\n\r\n        indoorMapId = _indoorMapIdOrDefault(indoorMapId);\r\n        highlightBorderThickness = _borderThicknessOrDefault(highlightBorderThickness);\r\n        _emscriptenApi.indoorEntityApi.setHighlights(ids, highlightColor, indoorMapId, highlightBorderThickness);\r\n    };\r\n\r\n    this.clearEntityHighlights = (ids, indoorMapId) => {\r\n        if (!_ready) return;\r\n\r\n        indoorMapId = _indoorMapIdOrDefault(indoorMapId);\r\n        _emscriptenApi.indoorEntityApi.clearHighlights(ids, indoorMapId);\r\n    };\r\n\r\n    var _borderThicknessOrDefault = (borderThickness) => {\r\n        if (borderThickness === undefined || borderThickness === null) {\r\n            borderThickness = 0.5;\r\n        }\r\n\r\n        return borderThickness;\r\n    };\r\n\r\n    var _indoorMapIdOrDefault = (indoorMapId) => {\r\n        if (indoorMapId === undefined || indoorMapId === null) {\r\n            if (_activeIndoorMap !== null) {\r\n                indoorMapId = _activeIndoorMap.getIndoorMapId();\r\n            }\r\n        }\r\n\r\n        return indoorMapId;\r\n    };\r\n\r\n    this.setBackgroundColor = (color) => {\r\n        _backgroundColor = color;\r\n        if (!_ready) return;\r\n\r\n        _emscriptenApi.indoorsApi.setBackgroundColor(color);\r\n    };\r\n\r\n    this.hideLabelsForEntity = (entityName) => {\r\n        return this.hideLabelsForEntities([entityName]);\r\n    };\r\n\r\n    this.hideLabelsForEntities = (entityNames) => {\r\n        if (_emscriptenApi.ready()) {\r\n            _emscriptenApi.indoorsApi.hideLabelsForEntities(entityNames);\r\n        }\r\n\r\n        return this;\r\n    };\r\n    \r\n    this.showLabelsForEntity = (entityName) => {\r\n        return this.showLabelsForEntities([entityName]);\r\n    };\r\n\r\n    this.showLabelsForEntities = (entityNames) => {\r\n        if (_emscriptenApi.ready()) {\r\n            _emscriptenApi.indoorsApi.showLabelsForEntities(entityNames);\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    this.showAllLabels = () => {\r\n        if (_emscriptenApi.ready()) {\r\n            _emscriptenApi.indoorsApi.showAllLabels();\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n}\r\n\r\nvar IndoorsPrototype = L.extend({}, MapModule, L.Mixin.Events);\r\n\r\nIndoorsModule.prototype = IndoorsPrototype;\r\n\r\nexport default IndoorsModule;\r\n","export function IdToObjectMap () {\r\n    var _objects = {};\r\n\r\n    this.insertObject = function(id, object) {\r\n        _objects[id] = object;\r\n        return id;\r\n    };\r\n\r\n    this.removeObjectById = function(id) {\r\n        var object = _objects[id];\r\n        delete _objects[id];\r\n        return object;\r\n    };\r\n\r\n    this.idForObject = function(object) {\r\n        for (var id in _objects) {\r\n            if (_objects[id] === object) {\r\n                return id;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    this.getObjectById = function(id) {\r\n        return _objects[id];\r\n    };\r\n\r\n    this.forEachItem = function(func) {\r\n        for (var id in _objects) {\r\n            var object = _objects[id];\r\n            func(id, object);\r\n        }\r\n    };\r\n}\r\n\r\nexport default IdToObjectMap;\r\n","export class PreCacheOperationResult {\r\n  private _succeeded: boolean;\r\n\r\n  constructor(succeeded: boolean) {\r\n    this._succeeded = succeeded;\r\n  }\r\n\r\n  getSucceeded = (): boolean => this._succeeded;\r\n}\r\n\r\nexport default PreCacheOperationResult;\r\n","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\nimport IdToObjectMap from \"../id_to_object_map\";\r\nimport PreCacheOperationResult from \"../../public/precaching/precache_operation_result\";\r\n\r\nfunction PrecacheOperation (operation) {\r\n    var _operation = operation;\r\n\r\n    this.cancel = function() {\r\n        _operation.cancel();\r\n    };\r\n}\r\n\r\n\r\nfunction InternalPrecacheOperation (centre, radius, completionCallback) {\r\n    var _centre = L.latLng(centre);\r\n    var _radius = radius;\r\n    var _completionCallback = completionCallback;\r\n    var _cancelled = false;\r\n\r\n    var _executeCompletionCallback = (success) => {\r\n        _completionCallback(new PreCacheOperationResult(success));\r\n    };\r\n\r\n    this.getCentre = () => _centre;\r\n\r\n    this.getRadius = () => _radius;\r\n\r\n    this.cancel = () => {\r\n        _cancelled = true;\r\n    };\r\n\r\n    this.isCancelled = () => _cancelled;\r\n\r\n    this.notifyComplete = () => {\r\n        _executeCompletionCallback(true);\r\n    };\r\n\r\n    this.notifyCancelled = () => {\r\n        _executeCompletionCallback(false);\r\n    };\r\n}\r\n\r\nfunction PrecacheModule (emscriptenApi) {\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _operations = new IdToObjectMap();\r\n    var _pendingOperations = [];\r\n    var _ready = false;\r\n\r\n    var _beginPrecacheOperation = (operation) => {\r\n        var operationId = _emscriptenApi.precacheApi.beginPrecacheOperation(operation);\r\n        _operations.insertObject(operationId, operation);\r\n\r\n        return operationId;\r\n    };\r\n\r\n    var _beginAllPrecacheOperations = () => {\r\n        _pendingOperations.forEach((operation) => {\r\n                if (operation.isCancelled()) {\r\n                    operation.notifyCancelled();\r\n                }\r\n                else {\r\n                    _beginPrecacheOperation(operation);\r\n                }\r\n            });\r\n\r\n        _pendingOperations = [];\r\n    };\r\n\r\n    var _cancelOperations = (cancelledIds) => {\r\n        cancelledIds.forEach((operationId) => {\r\n                _emscriptenApi.precacheApi.cancelPrecacheOperation(operationId);\r\n            });\r\n    };\r\n\r\n    var _onPrecacheOperationCompleted = (operationId) => {\r\n        var operation = _operations.removeObjectById(operationId);\r\n        operation.notifyComplete();\r\n    };\r\n\r\n    var _onPrecacheOperationCancelled = (operationId) => {\r\n        var operation = _operations.removeObjectById(operationId);\r\n        operation.notifyCancelled();\r\n    };\r\n\r\n    // :TODO: Fix DRY fail causing this to exist in both EegeoPrecacheApi::MaxPrecacheRadius and here.\r\n    var _getMaximumPrecacheRadius = () => 16000.0;\r\n\r\n    var _validatePrecacheParameters = (center, radius) => {\r\n        if (radius > _getMaximumPrecacheRadius() || radius <= 0.0) {\r\n            return new Error(\"radius outside of valid (0.0, \" + _getMaximumPrecacheRadius() + \"] range.\");\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    this.getMaximumPrecacheRadius = () => _getMaximumPrecacheRadius();\r\n\r\n    this.precache = (center, radius, callbackFunction) => {\r\n        var parameterValidationError = _validatePrecacheParameters(center, radius);\r\n\r\n        if (parameterValidationError !== null) {\r\n            throw parameterValidationError;\r\n        }\r\n\r\n        var internalOperation = new InternalPrecacheOperation(center, radius, callbackFunction);\r\n\r\n        if (_ready) {\r\n            var operationId = _beginPrecacheOperation(internalOperation);\r\n            _operations.insertObject(operationId, internalOperation);\r\n        }\r\n        else {\r\n            _pendingOperations.push(internalOperation);\r\n        }\r\n\r\n        var precacheOperation = new PrecacheOperation(internalOperation);\r\n        return precacheOperation;\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _emscriptenApi.precacheApi.registerCallbacks(_onPrecacheOperationCompleted, _onPrecacheOperationCancelled);\r\n        _beginAllPrecacheOperations();\r\n    };\r\n\r\n    this.onUpdate = (dt) => {\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n\r\n        var cancelledOperations = [];\r\n        _operations.forEachItem(function (operationId, operation) {\r\n            if (operation.isCancelled()) {\r\n                cancelledOperations.push(operationId);\r\n            }\r\n        });\r\n        _cancelOperations(cancelledOperations);\r\n    };\r\n}\r\n\r\nPrecacheModule.prototype = MapModule;\r\n\r\nexport default PrecacheModule;\r\n","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\n\r\nfunction CameraModule (\r\n    emscriptenApi,\r\n    startLatLng,\r\n    initialZoom,\r\n    viewVerticallyLocked\r\n    ) {\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _ready = false;\r\n    var _pendingSetViewData = null;\r\n    var _pendingSetViewToBoundsData = null;\r\n    var _center = startLatLng;\r\n    var _isVerticallyLocked = viewVerticallyLocked;\r\n\r\n\r\n    var _setView = function(config) {\r\n        if (_ready) {\r\n            _emscriptenApi.cameraApi.setView(config);\r\n        }\r\n        else {\r\n            if(_pendingSetViewData === null) {\r\n              _pendingSetViewData = {};\r\n            }\r\n            else {\r\n              _pendingSetViewData = Object.assign(_pendingSetViewData, config);\r\n            }\r\n        }\r\n    };\r\n\r\n    var _setViewToBounds = function(config) {\r\n        if (_ready) {\r\n            _emscriptenApi.cameraApi.setViewToBounds(config);\r\n        }\r\n        else {\r\n            _pendingSetViewToBoundsData = config;\r\n        }\r\n    };\r\n\r\n    var _getCenter = function() {\r\n        if (_ready) {\r\n            var cameraApi = _emscriptenApi.cameraApi;\r\n            _center = cameraApi.getInterestLatLong();\r\n        }\r\n        else {\r\n            _center = _pendingSetViewData[\"location\"] || _center;\r\n        }\r\n        return _center;\r\n    };\r\n\r\n    var _getDistanceToInterest = function() {\r\n        if (_ready) {\r\n            return _emscriptenApi.cameraApi.getDistanceToInterest();\r\n        }\r\n        else {\r\n            //Can't convert zoom level to distance before the api is loaded.\r\n          return 0.0;\r\n        }\r\n    };\r\n\r\n    var _getPitchDegrees = function() {\r\n        if (_ready) {\r\n            return _emscriptenApi.cameraApi.getPitchDegrees();\r\n        }\r\n        else {\r\n            return 0.0;\r\n        }\r\n    };\r\n\r\n    var _getTiltDegrees = function() {\r\n      if (_ready) {\r\n          return 90.0 - _emscriptenApi.cameraApi.getPitchDegrees();\r\n      }\r\n      else {\r\n          return 0.0;\r\n      }\r\n    };\r\n\r\n    var _setTiltDegrees = function(pitch) {\r\n        _setView({\"tiltDegrees\":pitch, animate: true});\r\n    };\r\n\r\n    var _getHeadingDegrees = function() {\r\n        if (_ready) {\r\n            return _emscriptenApi.cameraApi.getHeadingDegrees();\r\n        }\r\n        else {\r\n            return parseFloat(_pendingSetViewData[\"headingDegrees\"]) || 0.0;\r\n        }\r\n    };\r\n\r\n    var _setHeadingDegrees = function(heading) {\r\n        return _setView({\"headingDegrees\":heading, \"animate\":true});\r\n    };\r\n\r\n    var _setVerticallyLocked = function(isVerticallyLocked) {\r\n        _isVerticallyLocked = isVerticallyLocked;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.cameraApi.setVerticallyLocked(_isVerticallyLocked);\r\n    };\r\n\r\n    var _flushPendingViewOperations = function() {\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n\r\n        if(_pendingSetViewData !== null) {\r\n            _setView(_pendingSetViewData);\r\n            _pendingSetViewData = null;\r\n        }\r\n\r\n        if(_pendingSetViewToBoundsData !== null) {\r\n            _setViewToBounds(_pendingSetViewToBoundsData);\r\n            _pendingSetViewToBoundsData = null;\r\n        }\r\n    };\r\n\r\n    var _getZoomLevel = function() {\r\n         if (_ready) {\r\n            return _emscriptenApi.cameraApi.getZoomLevel();\r\n        }\r\n        else {\r\n            return  parseFloat(_pendingSetViewData[\"zoom\"]) || 0.0;\r\n        }\r\n    };\r\n\r\n\r\n    this.setView = function(config) {\r\n        _setView(config);\r\n    };\r\n\r\n    this.setViewToBounds = function(config) {\r\n        _setViewToBounds(config);\r\n    };\r\n\r\n    this.onInitialized = function() {\r\n        _ready = true;\r\n        _setVerticallyLocked(_isVerticallyLocked);\r\n        _flushPendingViewOperations();\r\n    };\r\n\r\n    this.getCurrentZoomLevel = function() {\r\n        return _getZoomLevel();\r\n    };\r\n\r\n    this.getCenter = function() {\r\n        return L.latLng(_getCenter());\r\n    };\r\n\r\n    this.getDistanceToInterest = function() {\r\n        return _getDistanceToInterest();\r\n    };\r\n\r\n    this.getPitchDegrees = function() {\r\n        return _getPitchDegrees();\r\n    };\r\n\r\n    this.getTiltDegrees = function() {\r\n      return _getTiltDegrees();\r\n    };\r\n\r\n    this.setTiltDegrees = function(pitch) {\r\n      return _setTiltDegrees(pitch);\r\n    };\r\n\r\n    this.getHeadingDegrees = function() {\r\n        return _getHeadingDegrees();\r\n    };\r\n\r\n    this.setHeadingDegrees = function(heading) {\r\n      return _setHeadingDegrees(heading);\r\n    };\r\n\r\n    this.setVerticallyLocked = function(isVerticallyLocked) {\r\n         _setVerticallyLocked(isVerticallyLocked);\r\n    };\r\n}\r\n\r\nCameraModule.prototype = MapModule;\r\n\r\nexport default CameraModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function PolygonsModule(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _polygonIdToPolygons = {};\r\n    var _pendingPolygons = [];\r\n    var _ready = false;\r\n\r\n\r\n    var _createPendingPolygons = () => {\r\n        _pendingPolygons.forEach(function (polygon) {\r\n            _createAndAdd(polygon);\r\n        });\r\n        _pendingPolygons = [];\r\n    };\r\n\r\n    var _createAndAdd = (polygon) => {\r\n        var polygonId = _emscriptenApi.geofenceApi.createGeofence(polygon.getPoints(), polygon.getHoles(), polygon._getConfig());\r\n        _polygonIdToPolygons[polygonId] = polygon;\r\n        return polygonId;\r\n    };\r\n\r\n    this.addPolygon = (polygon) => {\r\n        if (_ready) {\r\n            _createAndAdd(polygon);\r\n        }\r\n        else {\r\n            _pendingPolygons.push(polygon);\r\n        }\r\n    };\r\n\r\n    this.removePolygon = (polygon) => {\r\n\r\n        if (!_ready) {\r\n            var index = _pendingPolygons.indexOf(polygon);\r\n            if (index > -1) {\r\n                _pendingPolygons.splice(index, 1);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var polygonId = Object.keys(_polygonIdToPolygons).find((key) => _polygonIdToPolygons[key] === polygon\r\n        );\r\n\r\n        if (polygonId === undefined) {\r\n            return;\r\n        }\r\n\r\n        _emscriptenApi.geofenceApi.removeGeofence(polygonId);\r\n        delete _polygonIdToPolygons[polygonId];\r\n    };\r\n\r\n    this.onUpdate = function() {\r\n        if (_ready) {\r\n\r\n            Object.keys(_polygonIdToPolygons).forEach((polygonId) => {\r\n                    var polygon = _polygonIdToPolygons[polygonId];\r\n                    if (polygon._colorNeedsChanged()) {\r\n                        _emscriptenApi.geofenceApi.setGeofenceColor(polygonId, polygon.getColor());\r\n                        polygon._onColorChanged();\r\n                    }\r\n                });\r\n\t\t}\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _createPendingPolygons();\r\n    };\r\n}\r\n\r\nPolygonsModule.prototype = MapModule;\r\n\r\nexport default PolygonsModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function PolylineModule(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _polylineIdToPolyline = {};\r\n    var _pendingPolylines = [];\r\n    var _ready = false;\r\n\r\n\r\n    var _createPendingPolylines = () => {\r\n        _pendingPolylines.forEach((polyline) => {\r\n                _createAndAdd(polyline);\r\n            });\r\n        _pendingPolylines = [];\r\n    };\r\n\r\n    var _createAndAdd = (polyline) => {\r\n        var polylineId = _emscriptenApi.polylineApi.createPolyline(polyline);\r\n        _polylineIdToPolyline[polylineId] = polyline;\r\n        return polylineId;\r\n    };\r\n\r\n    this.addPolyline = (polyline) => {\r\n        if (_ready) {\r\n            _createAndAdd(polyline);\r\n        }\r\n        else {\r\n            _pendingPolylines.push(polyline);\r\n        }\r\n    };\r\n\r\n    this.removePolyline = (polyline) => {\r\n\r\n        if (!_ready) {\r\n            var index = _pendingPolylines.indexOf(polyline);\r\n            if (index > -1) {\r\n                _pendingPolylines.splice(index, 1);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var polylineId = Object.keys(_polylineIdToPolyline).find((key) => _polylineIdToPolyline[key] === polyline\r\n        );\r\n\r\n        if (polylineId === undefined) {\r\n            return;\r\n        }\r\n\r\n        _emscriptenApi.polylineApi.destroyPolyline(polylineId);\r\n        delete _polylineIdToPolyline[polylineId];\r\n    };\r\n\r\n    this.onUpdate = () => {\r\n        if (_ready) {\r\n            Object.keys(_polylineIdToPolyline).forEach((polylineId) => {\r\n                    var polyline = _polylineIdToPolyline[polylineId];\r\n                    _emscriptenApi.polylineApi.updateNativeState(polylineId, polyline);\r\n                });\r\n        }\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _createPendingPolylines();\r\n    };\r\n}\r\n\r\nPolylineModule.prototype = MapModule;\r\n\r\nexport default PolylineModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function RoutingModule (apiKey, indoorsModule) {\r\n\r\n    var _urlRoot = \"https://routing.wrld3d.com/v1/\";\r\n    var _apiKey = apiKey;\r\n    var _indoorsModule = indoorsModule;\r\n\r\n    var _parseMetadataTag = (metadata, tag) => {\r\n        var decoratedTag = \"{\" + tag + \":\";\r\n        var occurrence = metadata.indexOf(decoratedTag);\r\n\r\n        if (occurrence !== -1) {\r\n            var postTag = metadata.slice(occurrence + decoratedTag.length);\r\n            var nextBracketIndex = postTag.indexOf(\"}\");\r\n\r\n            if (nextBracketIndex !== -1) {\r\n                return postTag.substring(0, nextBracketIndex);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    var _parseRouteSteps = (routeSteps) => {\r\n        var parsedSteps = [];\r\n        for (var i = 0; i < routeSteps.length; i++) {\r\n            var metadata = routeSteps[i].name;\r\n            var level = _parseMetadataTag(metadata, \"level\");\r\n            if (level === \"multiple\") {\r\n                // skip route segments which change floor for now\r\n                continue;\r\n            }\r\n            var routeStep = {};\r\n            var latLongPoints = [];\r\n\r\n            routeStep.indoorMapId = _parseMetadataTag(metadata, \"bid\");\r\n            // Hack to preserve Westport/West ward works example behaviour:\r\n            // Routes are defined relative to an indoor map submission, but \r\n            // Westport House was built before the era of UIDs\r\n            if (routeStep.indoorMapId === \"e2657c93-2d13-412a-89fe-0949a14e7eea\") {\r\n                routeStep.indoorMapId = \"westport_house\";\r\n            } else if (routeStep.indoorMapId === \"c857d08d-7de1-4447-9ff8-6747649a00e0\") {\r\n                // West Ward Works also has an unusual history\r\n                routeStep.indoorMapId = \"70f9b00f-8c4f-4570-9a23-62bd80a76f8a\";\r\n            }\r\n            if (level) {\r\n                routeStep.indoorMapFloorId = parseInt(level);\r\n            }\r\n            var stepGeometry = routeSteps[i][\"geometry\"][\"coordinates\"];\r\n\r\n            for (var j = 0; j < stepGeometry.length; j++) {\r\n                var lonlat = stepGeometry[j];\r\n                var latLon = [lonlat[1], lonlat[0]];\r\n                latLongPoints.push(latLon);\r\n            }\r\n            routeStep.points = latLongPoints;\r\n            parsedSteps.push(routeStep);\r\n        }\r\n\r\n        return parsedSteps;\r\n    };\r\n\r\n    var _parseRoutes = (routingJson) => {\r\n        var routes = routingJson[\"routes\"];\r\n        var results = [];\r\n\r\n        for (var routeIndex = 0; routeIndex < routes.length; ++routeIndex) {\r\n            var legs = routes[routeIndex][\"legs\"];\r\n\r\n            for (var legIndex = 0; legIndex < legs.length; ++legIndex) {\r\n                var steps = legs[legIndex][\"steps\"];\r\n                var routeSteps = _parseRouteSteps(steps);\r\n                results.push(routeSteps);\r\n            }\r\n        }\r\n\r\n        return results;\r\n    };\r\n\r\n    var _routeParseHandler = (request, routeLoadHandler, routeLoadErrorHandler) => () => {\r\n        var routeJson = JSON.parse(request.responseText);\r\n\r\n        if (routeJson[\"code\"] === \"Ok\") {\r\n            var routes;\r\n            if (\"type\" in routeJson && routeJson[\"type\"] === \"multipart\") {\r\n                var multiroute = routeJson[\"routes\"];\r\n                for (var index = 0; index < multiroute.length; ++index) {\r\n                    routes = _parseRoutes(multiroute[index]);\r\n                    routeLoadHandler(routes);\r\n                }\r\n            }\r\n\r\n            else {\r\n                routes = _parseRoutes(routeJson);\r\n                routeLoadHandler(routes);\r\n            }\r\n        }\r\n\r\n        else {\r\n            if (routeLoadErrorHandler !== null && routeLoadErrorHandler !== undefined) {\r\n                routeLoadErrorHandler(routeJson);\r\n            }\r\n        }\r\n    };\r\n\r\n    var _cancelRequest = (request) => () => {\r\n        request.abort();\r\n    };\r\n\r\n    this.getRoute = (viaPoints, onLoadHandler, onErrorHandler, transportMode) => {\r\n        transportMode = transportMode || \"walking\";\r\n        var url = _urlRoot + \"route?loc=\";\r\n\r\n        for (var pointIndex = 0; pointIndex < viaPoints.length; ++pointIndex) {\r\n            url += viaPoints[pointIndex].join(\",\");\r\n\r\n            if (pointIndex < viaPoints.length - 1) {\r\n                url += \"%3B\";\r\n            }\r\n\r\n        }\r\n        url += \"&apikey=\" + _apiKey;\r\n        url += \"&limit=400\";\r\n        url += \"&travelmode=\" + transportMode;\r\n        var request = new XMLHttpRequest();\r\n        request.open(\"GET\", url, true);\r\n        request.onload = _routeParseHandler(request, onLoadHandler, onErrorHandler);\r\n        _indoorsModule.on(\"indoormapexit\", _cancelRequest(request));\r\n        request.send();\r\n    };\r\n}\r\n\r\nRoutingModule.prototype = MapModule;\r\n\r\nexport default RoutingModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function RenderingModule(emscriptenApi, clearColor) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _isMapCollapsed = false;\r\n    var _clearColor = clearColor;\r\n    var _ready = false;\r\n\r\n    this.onInitialized = () => {\r\n        _emscriptenApi.renderingApi.setClearColor(_clearColor);\r\n        _emscriptenApi.renderingApi.setMapCollapsed(_isMapCollapsed);\r\n        _ready = true;\r\n    };\r\n\r\n    this.ready = () => _ready;\r\n\r\n    this.setMapCollapsed = (isMapCollapsed) => {\r\n        _isMapCollapsed = isMapCollapsed;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.renderingApi.setMapCollapsed(_isMapCollapsed);\r\n    };\r\n\r\n    this.isMapCollapsed = () => _isMapCollapsed,\r\n\r\n    this.setClearColor = (clearColor) => {\r\n        _clearColor = clearColor;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.renderingApi.setClearColor(_clearColor);\r\n    };\r\n\r\n    this.getCameraRelativePosition = (latLng) => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.renderingApi.getCameraRelativePosition(latLng);\r\n    };\r\n\r\n    this.getNorthFacingOrientationMatrix = (latLng) => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.renderingApi.getNorthFacingOrientationMatrix(latLng);\r\n    };\r\n\r\n    this.getCameraProjectionMatrix = () => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.renderingApi.getCameraProjectionMatrix();\r\n    };\r\n\r\n    this.getCameraOrientationMatrix = () => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.renderingApi.getCameraOrientationMatrix();\r\n    };\r\n\r\n    this.getLightingData = () => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.renderingApi.getLightingData();\r\n    };\r\n}\r\n\r\nRenderingModule.prototype = MapModule;\r\n\r\nexport default RenderingModule;\r\n","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\n\r\nexport function BuildingsModuleImpl(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _nativeIdToBuildingHighlights = {};\r\n    var _callbackInvokedBeforeAssignement = {};\r\n    var _pendingBuildingHighlights = [];\r\n    var _ready = false;\r\n    var _notifyBuildingInformationReceivedCallback = null;\r\n\r\n    var _createPendingBuildingHighlights = () => {\r\n        _pendingBuildingHighlights.forEach((buildingHighlight) => {\r\n                _createAndAdd(buildingHighlight);\r\n            });\r\n        _pendingBuildingHighlights = [];\r\n    };\r\n\r\n    var _createAndAdd = (buildingHighlight) => {\r\n        var nativeId = _emscriptenApi.buildingsApi.createBuildingHighlight(buildingHighlight);\r\n        _nativeIdToBuildingHighlights[nativeId] = buildingHighlight;\r\n        buildingHighlight._setNativeHandle(nativeId);\r\n\r\n        if (nativeId in _callbackInvokedBeforeAssignement) {\r\n            delete _callbackInvokedBeforeAssignement[nativeId];\r\n            _notifyBuildingInformationReceived(nativeId);\r\n        }\r\n\r\n        return nativeId;\r\n    };\r\n\r\n    this.addBuildingHighlight = (buildingHighlight) => {\r\n        if (_ready) {\r\n            _createAndAdd(buildingHighlight);\r\n        }\r\n        else {\r\n            _pendingBuildingHighlights.push(buildingHighlight);\r\n        }\r\n    };\r\n\r\n    this.removeBuildingHighlight = (buildingHighlight) => {\r\n\r\n        if (!_ready) {\r\n            var index = _pendingBuildingHighlights.indexOf(buildingHighlight);\r\n            if (index > -1) {\r\n                _pendingBuildingHighlights.splice(index, 1);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var nativeId = buildingHighlight.getId();\r\n        if (nativeId === undefined) {\r\n            return;\r\n        }\r\n\r\n        _emscriptenApi.buildingsApi.destroyBuildingHighlight(nativeId);\r\n        delete _nativeIdToBuildingHighlights[nativeId];\r\n        buildingHighlight._setNativeHandle(null);\r\n    };\r\n\r\n    this.notifyBuildingHighlightChanged = (buildingHighlight) => {\r\n        if (_ready) {\r\n            var nativeId = buildingHighlight.getId();\r\n            if (nativeId === undefined) {\r\n                return;\r\n            }\r\n            _emscriptenApi.buildingsApi.setHighlightColor(nativeId, buildingHighlight.getColor());\r\n        }\r\n    };\r\n\r\n    this.findIntersectionWithBuilding = (ray) => {\r\n        if (!_ready) {\r\n            return undefined;\r\n        }\r\n        return _emscriptenApi.buildingsApi.findIntersectionWithBuilding(ray);\r\n    };\r\n\r\n    this.findBuildingAtScreenPoint = (screenPoint) => {\r\n        if (!_ready) {\r\n            return undefined;\r\n        }\r\n\r\n        var ray = _emscriptenApi.spacesApi.screenPointToRay(screenPoint);\r\n        return this.findIntersectionWithBuilding(ray);\r\n    };\r\n\r\n    this.findBuildingAtLatLng = (latLng) => {\r\n        if (!_ready) {\r\n            return undefined;\r\n        }\r\n\r\n        var ray = _emscriptenApi.spacesApi.latLongToVerticallyDownRay(latLng);\r\n        return this.findIntersectionWithBuilding(ray);\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _emscriptenApi.buildingsApi.registerBuildingInformationReceivedCallback(_executeBuildingInformationReceivedCallback);\r\n        _createPendingBuildingHighlights();\r\n    };\r\n\r\n    this.isReady = () => _ready;\r\n\r\n    this.setBuildingInformationReceivedCallback = (callback) => {\r\n        _notifyBuildingInformationReceivedCallback = callback;\r\n    };\r\n\r\n    var _executeBuildingInformationReceivedCallback = (buildingHighlightId) => {\r\n        if (buildingHighlightId in _nativeIdToBuildingHighlights) {\r\n            _notifyBuildingInformationReceived(buildingHighlightId);\r\n        }\r\n        else {\r\n            _callbackInvokedBeforeAssignement[buildingHighlightId] = true;\r\n        }\r\n    };\r\n\r\n    var _notifyBuildingInformationReceived = (buildingHighlightId) => {\r\n        var buildingHighlight = _nativeIdToBuildingHighlights[buildingHighlightId];\r\n        var buildingInformation = _emscriptenApi.buildingsApi.tryGetBuildingInformation(buildingHighlightId);\r\n        if (buildingInformation !== null) {\r\n            buildingHighlight._setBuildingInformation(buildingInformation);\r\n        }\r\n        if (_notifyBuildingInformationReceivedCallback !== null) {\r\n            _notifyBuildingInformationReceivedCallback(buildingHighlight);\r\n        }\r\n    };\r\n}\r\n\r\nfunction BuildingsModule(emscriptenApi) {\r\n    var _buildingsModuleImpl = new BuildingsModuleImpl(emscriptenApi);\r\n    var _this = this;\r\n\r\n    var _buildingInformationReceivedHandler = (buildingHighlight) => {\r\n        _this.fire(\"buildinginformationreceived\", { buildingHighlight: buildingHighlight });\r\n    };\r\n\r\n    this.findBuildingAtScreenPoint = (screenPoint) => _buildingsModuleImpl.findBuildingAtScreenPoint(screenPoint);\r\n\r\n    this.findBuildingAtLatLng = (latLng) => _buildingsModuleImpl.findBuildingAtLatLng(latLng);\r\n\r\n    this.onInitialized = () => {\r\n        _buildingsModuleImpl.setBuildingInformationReceivedCallback(_buildingInformationReceivedHandler);\r\n        _buildingsModuleImpl.onInitialized();\r\n    };\r\n\r\n    this._getImpl = () => _buildingsModuleImpl;\r\n}\r\n\r\nvar BuildingsModulePrototype = L.extend({}, MapModule, L.Mixin.Events);\r\n\r\nBuildingsModule.prototype = BuildingsModulePrototype;\r\n\r\nexport default BuildingsModule;\r\n","import L from \"leaflet\";\r\n\r\nimport MapModule from \"./map_module\";\r\nimport IdToObjectMap from \"../id_to_object_map\";\r\n\r\nexport function PropModule (emscriptenApi) {\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _pendingProps = [];\r\n    var _props = new IdToObjectMap();\r\n    var _hasPendingEnableDisable = false;\r\n    var _pendingEnableDisable = false;\r\n    var _pendingServiceUrl = \"\";\r\n    var _hasPendingServiceUrl = false;\r\n    var _ready = false;\r\n\r\n    var _createAndAdd = (prop) => {\r\n        var propId = _emscriptenApi.propsApi.createProp(\r\n            prop.getIndoorMapId(),\r\n            prop.getIndoorMapFloorId(),\r\n            prop.getName(),\r\n            prop.getLocation().lat,\r\n            prop.getLocation().lng,\r\n            prop.getElevation(),\r\n            prop.getElevationMode(),\r\n            prop.getHeadingDegrees(),\r\n            prop.getGeometryId());\r\n        _props.insertObject(propId, prop);\r\n    };\r\n\r\n    var _createAndAddArray = (propArray) => {\r\n        var indoorMapIds = [];\r\n        var indoorMapFloorIds = [];\r\n        var names = [];\r\n        var latitudes = [];\r\n        var longitudes = [];\r\n        var elevations = [];\r\n        var elevationModes = [];\r\n        var headings = [];\r\n        var geometryIds = [];\r\n\r\n        for (var propIndex = 0; propIndex < propArray.length; ++propIndex) {\r\n            var prop = propArray[propIndex];\r\n            indoorMapIds.push(prop.getIndoorMapId());\r\n            indoorMapFloorIds.push(prop.getIndoorMapFloorId());\r\n            names.push(prop.getName());\r\n            latitudes.push(prop.getLocation().lat);\r\n            longitudes.push(prop.getLocation().lng);\r\n            elevations.push(prop.getElevation());\r\n            elevationModes.push(prop.getElevationMode());\r\n            headings.push(prop.getHeadingDegrees());\r\n            geometryIds.push(prop.getGeometryId());\r\n        }\r\n\r\n        var propIds = _emscriptenApi.propsApi.createProps(indoorMapIds, indoorMapFloorIds, names, latitudes, longitudes, elevations, elevationModes, headings, geometryIds);\r\n\r\n        for (propIndex = 0; propIndex < propIds.length; ++propIndex) {\r\n            var propId = propIds[propIndex];\r\n            _props.insertObject(propId, propArray[propIndex]);\r\n        }\r\n    };\r\n\r\n    var _createPendingProps = () => {\r\n        if (_pendingProps.length === 0) {\r\n            return;\r\n        }\r\n        _createAndAddArray(_pendingProps);\r\n        _pendingProps = [];\r\n    };\r\n\r\n    var _executeIndoorMapEntitySetPropsLoadedCallbacks = (indoorMapId, floorId) => {\r\n        this.fire(\"indoormapentitysetpropsloaded\", {indoorMapId: indoorMapId, floorId: floorId});\r\n    };\r\n\r\n    var _executeIndoorMapPopulationRequestCompletedCallbacks = (succeeded, httpStatusCode) => {\r\n        this.fire(\"indoormappopulationrequestcomplete\", {\r\n            succeeded: (succeeded === 0 ? false : true),\r\n            httpStatusCode: httpStatusCode\r\n        });\r\n    };\r\n\r\n    this.addProp = (prop) => {\r\n        if (_ready) {\r\n            _createAndAdd(prop);\r\n        }\r\n        else {\r\n            _pendingProps.push(prop);\r\n        }\r\n    };\r\n\r\n    this.addProps = (propArray) => {\r\n        if (_ready) {\r\n            _createAndAddArray(propArray);\r\n        }\r\n        else {\r\n            _pendingProps = _pendingProps.concat(propArray);\r\n        }\r\n    };\r\n\r\n    this.removeProp = (prop) => {\r\n        if (_ready && _pendingProps.length === 0) {\r\n            var propId = _props.idForObject(prop);\r\n\r\n            if (propId !== null) {\r\n                _emscriptenApi.propsApi.destroyProp(propId);\r\n                _props.removeObjectById(propId);\r\n            }\r\n        }\r\n        else {\r\n            var index = _pendingProps.indexOf(prop);\r\n\r\n            if (index > -1) {\r\n                _pendingProps.splice(index, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    this.removeProps = (propArray) => {\r\n        var propIndex = 0;\r\n\r\n        if (_ready && _pendingProps.length === 0) {\r\n            var propIds = [];\r\n\r\n            for (; propIndex < propArray.length; ++propIndex) {\r\n                var propId = _props.idForObject(propArray[propIndex]);\r\n                _props.removeObjectById(propId);\r\n                propIds.push(parseInt(propId));\r\n            }\r\n\r\n            _emscriptenApi.propsApi.destroyProps(propIds);\r\n        }\r\n        else {\r\n            for (; propIndex < propArray.length; ++propIndex) {\r\n                var index = _pendingProps.indexOf(propArray[propIndex]);\r\n\r\n                if (index > -1) {\r\n                    _pendingProps.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _createPendingProps();\r\n\r\n        if (_hasPendingEnableDisable) {\r\n            this.setAutomaticIndoorMapPopulationEnabled(_pendingEnableDisable);\r\n        }\r\n        if (_hasPendingServiceUrl) {\r\n            this.setIndoorMapPopulationServiceUrl(_pendingServiceUrl);\r\n        }\r\n\r\n        _emscriptenApi.propsApi.setIndoorMapEntitySetPropsLoadedCallback(_executeIndoorMapEntitySetPropsLoadedCallbacks);\r\n        _emscriptenApi.propsApi.setIndoorMapPopulationRequestCompletedCallback(_executeIndoorMapPopulationRequestCompletedCallbacks);\r\n        _emscriptenApi.propsApi.onInitialized();\r\n    };\r\n\r\n    this.onUpdate = (dt) => {\r\n        if (_ready) {\r\n\r\n            _props.forEachItem((propId, /** @type {import(\"../../public/prop\").Prop} */ prop) => {\r\n                    if (prop._locationNeedsChanged()) {\r\n                        _emscriptenApi.propsApi.setLocation(propId, prop.getLocation().lat, prop.getLocation().lng);\r\n                        prop._onLocationChanged();\r\n                    }\r\n\r\n                    if (prop._headingDegreesNeedsChanged()) {\r\n                        _emscriptenApi.propsApi.setHeadingDegrees(propId, prop.getHeadingDegrees());\r\n                        prop._onHeadingDegreesChanged();\r\n                    }\r\n\r\n                    if (prop._elevationNeedsChanged()) {\r\n                        _emscriptenApi.propsApi.setElevation(propId, prop.getElevation());\r\n                        prop._onElevationChanged();\r\n                    }\r\n\r\n                    if (prop._elevationModeNeedsChanged()) {\r\n                        _emscriptenApi.propsApi.setElevationMode(propId, prop.getElevationMode());\r\n                        prop._onElevationModeChanged();\r\n                    }\r\n\r\n                    if (prop._geometryIdNeedsChanged()) {\r\n                        _emscriptenApi.propsApi.setGeometryId(propId, prop.getGeometryId());\r\n                        prop._onGeometryIdChanged();\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    this.setAutomaticIndoorMapPopulationEnabled = (enabled) => {\r\n        if (_ready) {\r\n            _emscriptenApi.propsApi.setAutomaticIndoorMapPopulationEnabled(enabled);\r\n        }\r\n        else {\r\n            _pendingEnableDisable = enabled;\r\n            _hasPendingEnableDisable = true;\r\n        }\r\n    };\r\n\r\n    this.isAutomaticIndoorMapPopulationEnabled = () => {\r\n        if (_ready) {\r\n            return _emscriptenApi.propsApi.isAutomaticIndoorMapPopulationEnabled();\r\n        }\r\n        else {\r\n            return _pendingEnableDisable;\r\n        }\r\n    };\r\n\r\n    this.setIndoorMapPopulationServiceUrl = (serviceUrl) => {\r\n        if (_ready) {\r\n            return _emscriptenApi.propsApi.setIndoorMapPopulationServiceUrl(serviceUrl);\r\n        }\r\n        else {\r\n            _pendingServiceUrl = serviceUrl;\r\n            _hasPendingServiceUrl = true;\r\n        }\r\n    };\r\n\r\n    this.getIndoorMapEntitySetProps = (indoorMapId, floorId) => {\r\n        if (_ready) {\r\n            return _emscriptenApi.propsApi.tryGetIndoorMapEntitySetProps(indoorMapId, floorId);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n\r\nvar PropPrototype = L.extend({}, MapModule, L.Mixin.Events);\r\n\r\nPropModule.prototype = PropPrototype;\r\n\r\nexport default PropModule;\r\n","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\n\r\nexport function IndoorMapEntityInformationModuleImpl(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _nativeIdToIndoorMapEntityInformation = {};\r\n    var _callbackInvokedBeforeAssignement = {};\r\n    var _pendingIndoorEntityInformation = [];\r\n    var _ready = false;\r\n    var _notifyIndoorMapEntityInformationChangedCallback = null;\r\n\r\n    var _createPendingIndoorMapEntityInformations = () => {\r\n        _pendingIndoorEntityInformation.forEach(function (indoorMapEntityInformation) {\r\n            _createAndAdd(indoorMapEntityInformation);\r\n        });\r\n\r\n        _pendingIndoorEntityInformation = [];\r\n    };\r\n\r\n    var _createAndAdd = (indoorMapEntityInformation) => {\r\n        var nativeId = _emscriptenApi.indoorMapEntityInformationApi.createIndoorMapEntityInformation(indoorMapEntityInformation);\r\n        _nativeIdToIndoorMapEntityInformation[nativeId] = indoorMapEntityInformation;\r\n        indoorMapEntityInformation._setNativeHandle(nativeId);\r\n\r\n        if (nativeId in _callbackInvokedBeforeAssignement) {\r\n            delete _callbackInvokedBeforeAssignement[nativeId];\r\n            _notifyIndoorMapEntityInformationChanged(nativeId);\r\n        }\r\n\r\n        return nativeId;\r\n    };\r\n\r\n    this.addIndoorMapEntityInformation = (indoorMapEntityInformation) => {\r\n        if (_ready) {\r\n            _createAndAdd(indoorMapEntityInformation);\r\n        }\r\n        else {\r\n            _pendingIndoorEntityInformation.push(indoorMapEntityInformation);\r\n        }\r\n    };\r\n    \r\n    this.removeIndoorMapEntityInformation = (indoorMapEntityInformation) => {\r\n\r\n        if (!_ready) {\r\n            var index = _pendingIndoorEntityInformation.indexOf(indoorMapEntityInformation);\r\n            if (index > -1) {\r\n                _pendingIndoorEntityInformation.splice(index, 1);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var nativeId = indoorMapEntityInformation.getNativeId();\r\n        if (nativeId === undefined) {\r\n            return;\r\n        }\r\n\r\n        _emscriptenApi.indoorMapEntityInformationApi.destroyIndoorMapEntityInformation(nativeId);\r\n        delete _nativeIdToIndoorMapEntityInformation[nativeId];\r\n        indoorMapEntityInformation._setNativeHandle(null);\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _emscriptenApi.indoorMapEntityInformationApi.registerIndoorMapEntityInformationChangedCallback(_executeIndoorMapEntityInformationChangedCallback);\r\n        _createPendingIndoorMapEntityInformations();\r\n    };\r\n\r\n    this.setIndoorMapEntityInformationChangedCallback = (callback) => {\r\n        _notifyIndoorMapEntityInformationChangedCallback = callback;\r\n    };\r\n\r\n    var _executeIndoorMapEntityInformationChangedCallback = (indoorMapEntityInformationId) => {\r\n        if (indoorMapEntityInformationId in _nativeIdToIndoorMapEntityInformation) {\r\n            _notifyIndoorMapEntityInformationChanged(indoorMapEntityInformationId);\r\n        }\r\n        else {\r\n            _callbackInvokedBeforeAssignement[indoorMapEntityInformationId] = true;\r\n        }\r\n    };\r\n\r\n    var _notifyIndoorMapEntityInformationChanged = (indoorMapEntityInformationId) => {\r\n        var indoorMapEntityInformation = _nativeIdToIndoorMapEntityInformation[indoorMapEntityInformationId];\r\n        var data = _emscriptenApi.indoorMapEntityInformationApi.tryGetIndoorMapEntityInformation(indoorMapEntityInformationId);\r\n        if (data !== null) {\r\n            indoorMapEntityInformation._setData(data);\r\n        }\r\n        if (_notifyIndoorMapEntityInformationChangedCallback !== null) {\r\n            _notifyIndoorMapEntityInformationChangedCallback(indoorMapEntityInformation);\r\n        }\r\n    };\r\n}\r\n\r\nfunction IndoorMapEntityInformationModule(emscriptenApi) {\r\n    var _indoorMapEntityInformationModuleImpl = new IndoorMapEntityInformationModuleImpl(emscriptenApi);\r\n\r\n    var _IndoorMapEntityInformationChangedHandler = (indoorMapEntityInformation) => {\r\n        this.fire(\"indoormapentityinformationchanged\", { indoorMapEntityInformation: indoorMapEntityInformation });\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _indoorMapEntityInformationModuleImpl.setIndoorMapEntityInformationChangedCallback(_IndoorMapEntityInformationChangedHandler);\r\n        _indoorMapEntityInformationModuleImpl.onInitialized();\r\n    };\r\n\r\n    this._getImpl = () => _indoorMapEntityInformationModuleImpl;\r\n}\r\n\r\nvar IndoorMapEntityInformationModulePrototype = L.extend({}, MapModule, L.Mixin.Events);\r\n\r\nIndoorMapEntityInformationModule.prototype = IndoorMapEntityInformationModulePrototype;\r\n\r\nexport default IndoorMapEntityInformationModule;\r\n","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\n\r\nexport function IndoorMapFloorOutlineInformationModuleImpl(emscriptenApi) {\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _nativeIdToIndoorMapFloorOutlineInformation = {};\r\n    var _callbackInvokedBeforeAssignement = {};\r\n    var _pendingIndoorMapFloorOutlineInformation = [];\r\n    var _ready = false;\r\n    var _notifyIndoorMapFloorOutlineInformationLoadedCallback = null;\r\n\r\n    var _createPendingIndoorMapFloorOutlineInformations = () => {\r\n        _pendingIndoorMapFloorOutlineInformation.forEach((indoorMapFloorOutlineInformation) => {\r\n            _createAndAdd(indoorMapFloorOutlineInformation);\r\n        });\r\n\r\n        _pendingIndoorMapFloorOutlineInformation = [];\r\n    };\r\n\r\n    var _createAndAdd = (indoorMapFloorOutlineInformation) => {\r\n        var nativeId = _emscriptenApi.indoorMapFloorOutlineInformationApi.createIndoorMapFloorOutlineInformation(indoorMapFloorOutlineInformation);\r\n        _nativeIdToIndoorMapFloorOutlineInformation[nativeId] = indoorMapFloorOutlineInformation;\r\n        indoorMapFloorOutlineInformation._setNativeHandle(nativeId);\r\n\r\n        if (nativeId in _callbackInvokedBeforeAssignement) {\r\n            delete _callbackInvokedBeforeAssignement[nativeId];\r\n            _fetchIndoorMapFloorOutlineInformation(nativeId);\r\n        }\r\n\r\n        return nativeId;\r\n    };\r\n\r\n    this.addIndoorMapFloorOutlineInformation = (indoorMapFloorOutlineInformation) => {\r\n        if (_ready) {\r\n            _createAndAdd(indoorMapFloorOutlineInformation);\r\n        }\r\n        else {\r\n            _pendingIndoorMapFloorOutlineInformation.push(indoorMapFloorOutlineInformation);\r\n        }\r\n    };\r\n    \r\n    this.removeIndoorMapFloorOutlineInformation = (indoorMapFloorOutlineInformation) => {\r\n\r\n        if (!_ready) {\r\n            var index = _pendingIndoorMapFloorOutlineInformation.indexOf(indoorMapFloorOutlineInformation);\r\n            if (index > -1) {\r\n                _pendingIndoorMapFloorOutlineInformation.splice(index, 1);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var nativeId = indoorMapFloorOutlineInformation.getId();\r\n        if (nativeId === undefined) {\r\n            return;\r\n        }\r\n\r\n        _emscriptenApi.indoorMapFloorOutlineInformationApi.destroyIndoorMapFloorOutlineInformation(nativeId);\r\n        delete _nativeIdToIndoorMapFloorOutlineInformation[nativeId];\r\n        indoorMapFloorOutlineInformation._setNativeHandle(null);\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _emscriptenApi.indoorMapFloorOutlineInformationApi.registerIndoorMapFloorOutlineInformationLoadedCallback(_executeIndoorMapFloorOutlineInformationLoadedCallback);\r\n        _createPendingIndoorMapFloorOutlineInformations();\r\n    };\r\n\r\n    this.setIndoorMapFloorOutlineInformationLoadedCallback = (callback) => {\r\n        _notifyIndoorMapFloorOutlineInformationLoadedCallback = callback;\r\n    };\r\n\r\n    var _executeIndoorMapFloorOutlineInformationLoadedCallback = (indoorMapFloorOutlineInformationId) => {\r\n        if (indoorMapFloorOutlineInformationId in _nativeIdToIndoorMapFloorOutlineInformation) {\r\n            _fetchIndoorMapFloorOutlineInformation(indoorMapFloorOutlineInformationId);\r\n        }\r\n        else {\r\n            _callbackInvokedBeforeAssignement[indoorMapFloorOutlineInformationId] = true;\r\n        }\r\n    };\r\n\r\n    var _fetchIndoorMapFloorOutlineInformation = (indoorMapFloorOutlineInformationId) => {\r\n        var indoorMapFloorOutlineInformation = _nativeIdToIndoorMapFloorOutlineInformation[indoorMapFloorOutlineInformationId];\r\n        if (_emscriptenApi.indoorMapFloorOutlineInformationApi.getIndoorMapFloorOutlineInformationLoaded(indoorMapFloorOutlineInformationId)) {\r\n            var data = _emscriptenApi.indoorMapFloorOutlineInformationApi.tryGetIndoorMapFloorOutlineInformation(indoorMapFloorOutlineInformationId);\r\n            if (data !== null) {\r\n                indoorMapFloorOutlineInformation._setData(data);\r\n                if (_notifyIndoorMapFloorOutlineInformationLoadedCallback !== null) {\r\n                    _notifyIndoorMapFloorOutlineInformationLoadedCallback(indoorMapFloorOutlineInformation);\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction IndoorMapFloorOutlineInformationModule(emscriptenApi) {\r\n    var _indoorMapFloorOutlineInformationModuleImpl = new IndoorMapFloorOutlineInformationModuleImpl(emscriptenApi);\r\n    \r\n\r\n    var _IndoorMapFloorOutlineInformationLoadedHandler = (indoorMapFloorOutlineInformation) => {\r\n        this.fire(\"indoormapflooroutlineinformationloaded\", { indoorMapFloorOutlineInformation: indoorMapFloorOutlineInformation });\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _indoorMapFloorOutlineInformationModuleImpl.setIndoorMapFloorOutlineInformationLoadedCallback(_IndoorMapFloorOutlineInformationLoadedHandler);\r\n        _indoorMapFloorOutlineInformationModuleImpl.onInitialized();\r\n    };\r\n\r\n    this._getImpl = () => _indoorMapFloorOutlineInformationModuleImpl;\r\n}\r\n\r\nvar IndoorMapFloorOutlineInformationModulePrototype = L.extend({}, MapModule, L.Mixin.Events);\r\n\r\nIndoorMapFloorOutlineInformationModule.prototype = IndoorMapFloorOutlineInformationModulePrototype;\r\n\r\nexport default IndoorMapFloorOutlineInformationModule;\r\n","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\n\r\nexport function BlueSphereModule(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _ready = false;\r\n    var _location = null;\r\n    var _isEnabled = false;\r\n    var _indoorMapId = \"\";\r\n    var _indoorMapFloorId = 0;\r\n    var _headingDegrees = 0.0;\r\n    var _elevation = 0.0;\r\n    var _stateChanged = false;\r\n    var _showOrientation = true;\r\n\r\n    this.isEnabled = () => _isEnabled;\r\n\r\n    this.setEnabled = (isEnabled) => {\r\n        _isEnabled = isEnabled ? true : false;\r\n    };\r\n\r\n    this.getLocation = () => _location;\r\n\r\n    this.setLocation = (location) => {\r\n        _location = L.latLng(location);\r\n        _stateChanged = true;\r\n    };\r\n\r\n    this.getIndoorMapId = () => _indoorMapId;\r\n\r\n    this.getIndoorMapFloorId = () => _indoorMapFloorId;\r\n\r\n    this.setIndoorMap = (indoorMapId, indoorMapFloorId) => {\r\n        _indoorMapId = indoorMapId;\r\n        _indoorMapFloorId = indoorMapFloorId;\r\n    };\r\n\r\n    this.setOutdoor = () => {\r\n        this.setIndoorMap(\"\", 0);\r\n    };\r\n\r\n    this.isOrientationVisible = () => _showOrientation;\r\n\r\n    this.getHeadingDegrees = () => _headingDegrees;\r\n\r\n    this.setHeadingDegrees = (headingDegrees) => {\r\n        _headingDegrees = headingDegrees;\r\n        _stateChanged = true;\r\n    };\r\n\r\n    this.getElevation = () => _elevation;\r\n\r\n    this.setElevation = (elevation) => {\r\n        _elevation = elevation;\r\n        _stateChanged = true;\r\n    };\r\n\r\n    this.showOrientation = (isVisible) => {\r\n        _showOrientation = isVisible;\r\n        _stateChanged = true;\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _emscriptenApi.blueSphereApi.updateNativeState(this);\r\n    };\r\n\r\n    this.onUpdate = () => {\r\n        if (_ready && _stateChanged) {\r\n            _emscriptenApi.blueSphereApi.updateNativeState(this);\r\n            _stateChanged = false;\r\n        }\r\n    };\r\n\r\n}\r\n\r\nBlueSphereModule.prototype = MapModule;\r\n\r\nexport default BlueSphereModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function MapRuntimeModule(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _ready = false;\r\n\r\n    this.Pause = () => {\r\n        if (_ready) {\r\n            _emscriptenApi.mapRuntimeApi.onPause();\r\n        }\r\n    };\r\n\r\n    this.Resume = () => {\r\n        if (_ready) {\r\n            _emscriptenApi.mapRuntimeApi.onResume();\r\n        }\r\n    };\r\n\r\n    this.Remove = () => {\r\n        if (_ready) {\r\n            _emscriptenApi.mapRuntimeApi.onRemove();\r\n        }\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n    };\r\n}\r\n\r\nMapRuntimeModule.prototype = MapModule;\r\n\r\nexport default MapRuntimeModule;\r\n","import L from \"leaflet\";\r\n\r\nimport MapModule from \"./map_module\";\r\nimport { getIndoorMapId, getIndoorMapFloorIndex, getIndoorMapFloorId } from \"../indoor_map_layer_options\";\r\nimport { getElevationModeInt } from \"../elevation_mode\";\r\n\r\nvar _undefinedPoint = L.point(-100, -100);\r\n\r\nfunction LayerPointMappingModule (emscriptenApi) {\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _spacesApi = null;\r\n    var _ready = false;\r\n    var _layerToLatLngsMapping = {};\r\n    var _pendingMappings = [];\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _spacesApi = _emscriptenApi.spacesApi;\r\n        this._createPendingLayers();\r\n    };       \r\n\r\n    // https://stackoverflow.com/a/15030117\r\n    var _flatten = (arr) => arr.reduce(function (flat, toFlatten) {\r\n        return flat.concat(Array.isArray(toFlatten) ? _flatten(toFlatten) : toFlatten);\r\n    }, []);\r\n\r\n    this._getLayerId = (layer) => L.stamp(layer);\r\n\r\n    this._useWrldSdkPointMappingForLayer = (layer) => {\r\n        if (typeof layer.getLatLng !== \"function\" && typeof layer.getLatLngs !== \"function\") {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    this._createAndAdd = (layer) => {\r\n        if (!this._useWrldSdkPointMappingForLayer(layer)) {\r\n            return;\r\n        }\r\n\r\n        var id = this._getLayerId(layer);\r\n\r\n        if(id in _layerToLatLngsMapping) {\r\n            this.removePointMapping(layer);\r\n        }\r\n\r\n        var sourceLatLngArray = typeof layer.getLatLngs === \"function\" ? layer.getLatLngs() : [ layer.getLatLng() ];\r\n        var latLngsFlatArray = _flatten(sourceLatLngArray);\r\n\r\n        var elevation = layer.options.elevation || 0.0;\r\n        \r\n        var elevationModeInt = getElevationModeInt(layer.options.elevationMode);\r\n\r\n        var api = _emscriptenApi.layerPointMappingApi;\r\n        \r\n        // due to legacy uses where positions were defined using floor index (poi tool, for example)\r\n        // check to see if we're dealing with a floor index, and use that instead. Floor id & index \r\n        // have different semantics, so they cannot be used interchangeably.\r\n        var indoorMapId = getIndoorMapId(layer);\r\n        var indoorMapFloorIndex = getIndoorMapFloorIndex(layer);\r\n        var indoorMapWithFloorIndex = indoorMapId !== null && indoorMapFloorIndex !== null;\r\n\r\n        if(indoorMapWithFloorIndex === true) {\r\n            api.createPointMappingWithFloorIndex(id, elevation, elevationModeInt, indoorMapId, indoorMapFloorIndex, latLngsFlatArray);\r\n        } else {\r\n            var indoorMapFloorId = getIndoorMapFloorId(layer);\r\n            var indoorOptionsValid = indoorMapId !== null && indoorMapFloorId !== null;            \r\n\r\n            // in the case where _either_ the indoor map id or the floor id is invalid, use neither (defaults to outside)\r\n            var sanitisedIndoorMapId = indoorOptionsValid === true ? indoorMapId : \"\";\r\n            var sanitisedIndoorMapFloorId = indoorOptionsValid === true ? indoorMapFloorId : 0;\r\n\r\n            api.createPointMapping(id, elevation, elevationModeInt, sanitisedIndoorMapId, sanitisedIndoorMapFloorId, latLngsFlatArray);\r\n        }\r\n        \r\n        _layerToLatLngsMapping[id] = api.getLatLngsForLayer(id, latLngsFlatArray.length);\r\n    };\r\n\r\n    this._createPendingLayers = () => {\r\n        _pendingMappings.forEach((layer) => {\r\n                this._createAndAdd(layer);\r\n            });\r\n        _pendingMappings = [];\r\n    };\r\n\r\n    this.createPointMapping = (layer) => {\r\n        if (!this._useWrldSdkPointMappingForLayer(layer)) {\r\n            return;\r\n        }\r\n\r\n        if(!_ready) {\r\n            _pendingMappings.push(layer);\r\n            return;\r\n        }\r\n\r\n        this._createAndAdd(layer);\r\n    };\r\n\r\n    this.removePointMapping = (layer) => {\r\n        if(!_ready) {\r\n            var index = _pendingMappings.indexOf(layer);\r\n            if (index > -1) {\r\n                _pendingMappings.splice(index, 1);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        var layerId = this._getLayerId(layer);\r\n\r\n        // try to remove the mapping for this layer, even if it doesn't follow the rules that\r\n        // would permit a mapping to be created in the first place. This is to guard against a \r\n        // user mutating the layer options _after_ adding it to the map\r\n        if (layerId in _layerToLatLngsMapping) {\r\n            _emscriptenApi.layerPointMappingApi.removePointMapping(layerId);\r\n            delete _layerToLatLngsMapping[layerId];\r\n        }\r\n    };\r\n\r\n    this._updateMappings = () => {\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n\r\n        var api = _emscriptenApi.layerPointMappingApi;\r\n\r\n        for (var id in _layerToLatLngsMapping) {\r\n            var latLngCount = _layerToLatLngsMapping[id].length;\r\n\r\n            _layerToLatLngsMapping[id] = api.getLatLngsForLayer(id, latLngCount);\r\n        }\r\n    };\r\n\r\n    this.onDraw = () => {\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n\r\n        this._updateMappings();\r\n    };\r\n\r\n    this._getDefaultLatLngsFromLayer = (layer) => {\r\n        if (typeof layer.getLatLngs === \"function\") {\r\n            return layer.getLatLngs();\r\n        }\r\n\r\n        if (typeof layer.getLatLng === \"function\") {\r\n            return [layer.getLatLng()];\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    this.latLngsForLayer = (layer) => {        \r\n        if(!_ready) {            \r\n            return this._getDefaultLatLngsFromLayer(layer);\r\n        }\r\n\r\n        // todo js_loc: this assumes we've called onDraw() at least once to populate contents\r\n        // ... depending on ordering of calls, we may have to gate this & do an update on first tick\r\n        var layerId = this._getLayerId(layer);\r\n    \r\n        if (layerId in _layerToLatLngsMapping) {\r\n            return _layerToLatLngsMapping[layerId];\r\n        }\r\n        \r\n        // fall back to leaflet defaults\r\n        return this._getDefaultLatLngsFromLayer(layer);\r\n    };\r\n\r\n    this.projectLatlngs = (layer, latlngs, result, projectedBounds) => {\r\n        if(!_ready) {\r\n            return false;\r\n        }\r\n        \r\n        if(!this._useWrldSdkPointMappingForLayer(layer)) {\r\n            return false;\r\n        }\r\n\t\r\n        // the source latlngs are in a jagged array\r\n        // retrieve the latlngs for our flat array containining values passed from C++\r\n        var associatedFlatLatlngArray = this.latLngsForLayer(layer);\r\n    \r\n        if(associatedFlatLatlngArray === null) {\r\n            return false;\r\n        }\r\n         \r\n        var currentFlatIndex = 0;\r\n        this._projectLatlngsRecursive(latlngs, associatedFlatLatlngArray, currentFlatIndex, result, projectedBounds);\r\n\r\n        return true;\r\n    };\r\n\r\n    this._latLngToLayerPoint = (latlng) => {\r\n        return (_ready) ? _spacesApi.worldToScreen(latlng).toPoint() : _undefinedPoint;\r\n    };\r\n\r\n    this._projectLatlngsRecursive = (originalLatlngs, associatedFlatLatlngArray, currentFlatIndex, result, projectedBounds) => {\r\n        var flat = originalLatlngs[0] instanceof L.LatLng,\r\n            len = originalLatlngs.length,\r\n            i, ring;\r\n\r\n        if (flat) {\r\n            ring = [];\r\n            for (i = 0; i < len; i++, currentFlatIndex++) {                         \r\n                // the goal here is to do a few things:\r\n                //  1. take the source (raw) leaflet LatLongAlts, and figure out the corresponding C++ IPointOnMap LatLongAlts\r\n                //  2. convert the corresponding LatLongAlt => screen coordinates\r\n                // todo: we end up jumping back to emscripten spaces api after doing this (via latLngToLayerPoint), so it may be a good idea\r\n                // to allow just passing back the screen space positions in the C++ code\r\n                var cppLatLngAlt = associatedFlatLatlngArray[currentFlatIndex];\r\n                ring[i] = this._latLngToLayerPoint(cppLatLngAlt);\r\n                projectedBounds.extend(ring[i]);\r\n            }\r\n            result.push(ring);\r\n        } else {\r\n            for (i = 0; i < len; i++) {\r\n                currentFlatIndex = this._projectLatlngsRecursive(\r\n                    originalLatlngs[i], associatedFlatLatlngArray, currentFlatIndex, result, projectedBounds);\r\n            }\r\n        }\r\n\r\n        return currentFlatIndex;\r\n    };\r\n}\r\n\r\nLayerPointMappingModule.prototype = MapModule;\r\n\r\nexport default LayerPointMappingModule;","import MapModule from \"./map_module\";\r\n\r\nexport function VersionModule(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _ready = false;\r\n\r\n    this.getVersion = () => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.versionApi.getPlatformVersion();\r\n    };\r\n\r\n    this.getVersionHash = () => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.versionApi.getPlatformVersionHash();\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n    };\r\n\r\n}\r\n\r\nVersionModule.prototype = MapModule;\r\n\r\nexport default VersionModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function HeatmapModule(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _heatmapIdToHeatmap = {};\r\n    var _pendingHeatmaps = [];\r\n    var _ready = false;\r\n\r\n\r\n    var _createPendingHeatmaps = () => {\r\n        _pendingHeatmaps.forEach(function (heatmap) {\r\n            _createAndAdd(heatmap);\r\n        });\r\n        _pendingHeatmaps = [];\r\n    };\r\n\r\n    var _createAndAdd = (heatmap) => {\r\n        var heatmapId = _emscriptenApi.heatmapApi.createHeatmap(heatmap);\r\n        _heatmapIdToHeatmap[heatmapId] = heatmap;\r\n        return heatmapId;\r\n    };\r\n\r\n    this.addHeatmap = (heatmap) => {\r\n        if (_ready) {\r\n            _createAndAdd(heatmap);\r\n        }\r\n        else {\r\n            _pendingHeatmaps.push(heatmap);\r\n        }\r\n    };\r\n\r\n    this.removeHeatmap = (heatmap) => {\r\n\r\n        if (!_ready) {\r\n            var index = _pendingHeatmaps.indexOf(heatmap);\r\n            if (index > -1) {\r\n                _pendingHeatmaps.splice(index, 1);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var heatmapId = Object.keys(_heatmapIdToHeatmap).find((key) => _heatmapIdToHeatmap[key] === heatmap);\r\n\r\n        if (heatmapId === undefined) {\r\n            return;\r\n        }\r\n\r\n        _emscriptenApi.heatmapApi.destroyHeatmap(heatmapId);\r\n        delete _heatmapIdToHeatmap[heatmapId];\r\n    };\r\n\r\n    this.onUpdate = () => {\r\n        if (_ready) {\r\n            Object.keys(_heatmapIdToHeatmap).forEach((heatmapId) => {\r\n                    var heatmap = _heatmapIdToHeatmap[heatmapId];\r\n                    _emscriptenApi.heatmapApi.updateNativeState(heatmapId, heatmap);\r\n                });\r\n        }\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _createPendingHeatmaps();\r\n    };\r\n}\r\n\r\nHeatmapModule.prototype = MapModule;\r\n\r\nexport default HeatmapModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function FrameRateModule(\r\n    emscriptenApi,\r\n    targetVSyncInterval,\r\n    throttledTargetFrameIntervalMilliseconds,\r\n    idleSecondsBeforeThrottle,\r\n    throttleWhenIdleEnabled\r\n    ) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _targetVSyncInterval = targetVSyncInterval;\r\n    var _throttledTargetFrameIntervalMilliseconds = throttledTargetFrameIntervalMilliseconds;\r\n    var _idleSecondsBeforeThrottle = idleSecondsBeforeThrottle;\r\n    var _throttleWhenIdleEnabled = throttleWhenIdleEnabled;\r\n    var _ready = false;\r\n\r\n    this.onInitialized = () => {\r\n        _emscriptenApi.frameRateApi.setTargetVSyncInterval(_targetVSyncInterval);\r\n        _emscriptenApi.frameRateApi.setThrottledTargetFrameInterval(_throttledTargetFrameIntervalMilliseconds);\r\n        _emscriptenApi.frameRateApi.setIdleSecondsBeforeThrottle(_idleSecondsBeforeThrottle);\r\n        _emscriptenApi.frameRateApi.setThrottleWhenIdleEnabled(_throttleWhenIdleEnabled);\r\n        _ready = true;\r\n    };\r\n\r\n    this.ready = () => _ready;\r\n\r\n    this.setTargetVSyncInterval = (targetVSyncInterval) => {\r\n        _targetVSyncInterval = targetVSyncInterval;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.frameRateApi.setTargetVSyncInterval(_targetVSyncInterval);\r\n    };\r\n\r\n    this.setThrottledTargetFrameInterval = (throttledTargetFrameIntervalMilliseconds) => {\r\n        _throttledTargetFrameIntervalMilliseconds = throttledTargetFrameIntervalMilliseconds;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.frameRateApi.setThrottledTargetFrameInterval(_throttledTargetFrameIntervalMilliseconds);\r\n    };\r\n\r\n    this.setIdleSecondsBeforeThrottle = (idleSecondsBeforeThrottle) => {\r\n        _idleSecondsBeforeThrottle = idleSecondsBeforeThrottle;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.frameRateApi.setIdleSecondsBeforeThrottle(_idleSecondsBeforeThrottle);\r\n    };\r\n\r\n    this.setThrottleWhenIdleEnabled = (throttleWhenIdleEnabled) => {\r\n        _throttleWhenIdleEnabled = throttleWhenIdleEnabled;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.frameRateApi.setThrottleWhenIdleEnabled(_throttleWhenIdleEnabled);\r\n    };\r\n\r\n    this.cancelThrottle = () => {\r\n        // don't attempt to defer command if called during startup\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.frameRateApi.cancelThrottle();\r\n    };\r\n}\r\n\r\nFrameRateModule.prototype = MapModule;\r\n\r\nexport default FrameRateModule;\r\n","import L from \"leaflet\";\r\nimport EegeoLeafletMap from \"../public/map\";\r\n\r\nimport HTMLMapContainer from \"./html_map_container\";\r\nimport IndoorEntranceMarkerUpdater from \"./indoor_entrance_marker_updater\";\r\nimport MapMoveEvents from \"./events/map_move_events\";\r\n\r\nimport ThemesModule from \"./modules/themes_module\";\r\nimport IndoorsModule from \"./modules/indoors_module\";\r\nimport PrecacheModule from \"./modules/precache_module\";\r\nimport CameraModule from \"./modules/camera_module\";\r\nimport PolygonModule from \"./modules/polygon_module\";\r\nimport PolylineModule from \"./modules/polyline_module\";\r\nimport RoutingModule from \"./modules/routing_module\";\r\nimport RenderingModule from \"./modules/rendering_module\";\r\nimport BuildingsModule from \"./modules/buildings_module\";\r\nimport PropModule from \"./modules/prop_module\";\r\nimport IndoorMapEntityInformationModule from \"./modules/indoor_map_entity_information_module\";\r\nimport IndoorMapFloorOutlineInformationModule from \"./modules/indoor_map_floor_outline_information_module\";\r\nimport BlueSphereModule from \"./modules/blue_sphere_module\";\r\nimport MapRuntimeModule from \"./modules/map_runtime_module\";\r\nimport LayerPointMappingModule from \"./modules/layer_point_mapping_module\";\r\nimport VersionModule from \"./modules/version_module\";\r\nimport HeatmapModule from \"./modules/heatmap_module\";\r\nimport FrameRateModule from \"./modules/frame_rate_module\";\r\n\r\nconst removeFileExtension = (fileName, extensionToRemove) => {\r\n    var extensionPosition = fileName.lastIndexOf(\".\");\r\n    var extension = fileName.slice(extensionPosition);\r\n    if (extension === extensionToRemove) {\r\n        return fileName.slice(0, extensionPosition);\r\n    }\r\n    return fileName;\r\n};\r\n\r\nexport function EegeoMapController (mapId, emscriptenApi, domElement, apiKey, browserWindow, browserDocument, module, options, onMapRemoveCallback) {\r\n\r\n    var _defaultOptions = {\r\n        canvasId: \"canvas\",\r\n        width: undefined,\r\n        height: undefined,\r\n        indoorsEnabled: false,\r\n        displayEntranceMarkers: true,\r\n        coverageTreeManifest: \"\",\r\n        environmentThemesManifest: \"\",\r\n        headingDegrees: 0,\r\n\r\n        // Override Leaflet defaults\r\n        center: L.latLng([37.7858, -122.401]),\r\n        zoom: 16,\r\n        doubleClickZoom: true,\r\n        zoomControl: false,\r\n        zoomAnimation: false,\r\n        minZoom: 0,\r\n        maxZoom: 20,\r\n        zoomSnap: 0,\r\n\r\n        viewVerticallyLocked: false,\r\n        showIndoorWrldWatermark: true,\r\n        trafficEnabled: true,\r\n        trafficDisableWhenEnteringIndoorMaps: true,\r\n        indoorLabelsAlwaysHidden: false,\r\n\r\n        targetVSyncInterval: 1,\r\n        frameRateThrottleWhenIdleEnabled: false,\r\n        throttledTargetFrameIntervalMilliseconds: 1000,\r\n        idleSecondsBeforeFrameRateThrottle: 30.0,\r\n\r\n        drawClearColor: \"#000000ff\",\r\n        indoorMapBackgroundColor: \"#000000c0\",\r\n        indoorSelectionTimeoutDuration: 30.0\r\n    };\r\n\r\n    options = L.extend(_defaultOptions, options);\r\n\r\n    var _mapId = mapId;\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _browserWindow = browserWindow;\r\n    var _browserDocument = browserDocument;\r\n\r\n    var _themesModule = new ThemesModule(emscriptenApi);\r\n    var _precacheModule = new PrecacheModule(emscriptenApi);\r\n    var _cameraModule = new CameraModule(\r\n        emscriptenApi,\r\n        options.center,\r\n        options.zoom,\r\n        options.viewVerticallyLocked\r\n    );\r\n    var _indoorsModule = new IndoorsModule(emscriptenApi, this, _mapId, options.indoorId, options.floorIndex, options.center, options.headingDegrees, options.zoom, options.showIndoorWrldWatermark, options.indoorMapBackgroundColor);\r\n    var _polygonModule = new PolygonModule(emscriptenApi);\r\n    var _polylineModule = new PolylineModule(emscriptenApi);\r\n    var _layerPointMappingModule = new LayerPointMappingModule(emscriptenApi);\r\n    var _routingModule = new RoutingModule(apiKey, _indoorsModule);\r\n    var _renderingModule = new RenderingModule(emscriptenApi, options.drawClearColor);\r\n    var _buildingsModule = new BuildingsModule(emscriptenApi);\r\n    var _propModule = new PropModule(emscriptenApi);\r\n    var _indoorMapEntityInformationModule = new IndoorMapEntityInformationModule(emscriptenApi);\r\n    var _indoorMapFloorOutlineInformationModule = new IndoorMapFloorOutlineInformationModule(emscriptenApi);\r\n    var _blueSphereModule = new BlueSphereModule(emscriptenApi);\r\n    var _mapRuntimeModule = new MapRuntimeModule(emscriptenApi);\r\n    var _versionModule = new VersionModule(emscriptenApi);\r\n    var _heatmapModule = new HeatmapModule(emscriptenApi);\r\n\r\n    var _frameRateModule = new FrameRateModule(\r\n        emscriptenApi,\r\n        options.targetVSyncInterval,\r\n        options.throttledTargetFrameIntervalMilliseconds,\r\n        options.idleSecondsBeforeFrameRateThrottle,\r\n        options.frameRateThrottleWhenIdleEnabled\r\n    );\r\n\r\n    var _onMapRemoveCallback = onMapRemoveCallback;\r\n\r\n    var _canvasId = _mapId ? options[\"canvasId\"] + _mapId : options[\"canvasId\"];\r\n    var _canvasWidth = options[\"width\"] || domElement.clientWidth;\r\n    var _canvasHeight = options[\"height\"] || domElement.clientHeight;\r\n    var _containerId = \"wrld-map-container\" + _mapId;\r\n\r\n    var _mapContainer = new HTMLMapContainer(_browserDocument, _browserWindow, domElement, _canvasId, _canvasWidth, _canvasHeight, options.drawClearColor, _containerId, _mapId);\r\n\r\n    var _canvas = _mapContainer.canvas;\r\n\r\n    var _Module = module;\r\n    _Module[\"canvas\"] = _canvas;\r\n\r\n    var center = L.latLng(options.center);\r\n    var zoom = options.zoom;\r\n    var headingDegrees = options.headingDegrees;\r\n\r\n    var indoorsEnabledArg = (options.indoorsEnabled) ? \"1\" : \"0\";\r\n    var coverageTreeManifest = removeFileExtension(options.coverageTreeManifest, \".gz\");\r\n    var environmentThemesManifest = removeFileExtension(options.environmentThemesManifest, \".gz\");\r\n    var doubleClickZoom = (options.doubleClickZoom) ? \"1\" : \"0\";\r\n    var trafficEnabled = (options.trafficEnabled) ? \"1\" : \"0\";\r\n    var trafficDisableWhenEnteringIndoorMaps = (options.trafficDisableWhenEnteringIndoorMaps) ? \"1\" : \"0\";\r\n    var indoorLabelsAlwaysHidden = (options.indoorLabelsAlwaysHidden) ? \"1\" : \"0\";\r\n    var indoorSelectionTimeoutDuration = options.indoorSelectionTimeoutDuration;\r\n\r\n    _Module[\"arguments\"] = [\r\n        _canvasId,\r\n        _mapId.toString(),\r\n        _canvasWidth.toString(),\r\n        _canvasHeight.toString(),\r\n        apiKey,\r\n        center.lat.toString(),\r\n        center.lng.toString(),\r\n        zoom.toString(),\r\n        headingDegrees.toString(),\r\n        indoorsEnabledArg,\r\n        coverageTreeManifest,\r\n        environmentThemesManifest,\r\n        doubleClickZoom,\r\n        _containerId,\r\n        trafficEnabled,\r\n        trafficDisableWhenEnteringIndoorMaps,\r\n        indoorLabelsAlwaysHidden,\r\n        indoorSelectionTimeoutDuration.toString()\r\n    ];\r\n\r\n    var _onRemove = function() {\r\n        _onMapRemoveCallback();\r\n        _this.leafletMap._initEvents(true, _canvas);\r\n\r\n        if (_this._indoorEntranceMarkerUpdater) {\r\n            _this._indoorEntranceMarkerUpdater.removeAllEntranceMarkers();\r\n        }\r\n\r\n        _mapContainer.onRemove();\r\n\r\n        var gl = _Module.ctx || _Module.K;\r\n        if (gl && \"getExtension\" in gl) {\r\n            gl.getExtension(\"WEBGL_lose_context\").loseContext();\r\n        }\r\n    };\r\n\r\n    this.leafletMap = new EegeoLeafletMap(\r\n        _browserWindow,\r\n        _mapContainer.overlay,\r\n        options,\r\n        _onRemove,\r\n        _cameraModule,\r\n        _precacheModule,\r\n        _themesModule,\r\n        _indoorsModule,\r\n        _polygonModule,\r\n        _polylineModule,\r\n        _layerPointMappingModule,\r\n        _routingModule,\r\n        _renderingModule,\r\n        _buildingsModule,\r\n        _propModule,\r\n        _indoorMapEntityInformationModule,\r\n        _indoorMapFloorOutlineInformationModule,\r\n        _blueSphereModule,\r\n        _mapRuntimeModule,\r\n        _versionModule,\r\n        _heatmapModule,\r\n        _frameRateModule\r\n    );\r\n\r\n    this.leafletMap._initEvents(false, _canvas);\r\n\r\n    var _mapMoveEvents = new MapMoveEvents(this.leafletMap);\r\n\r\n    var _modules = [\r\n        _layerPointMappingModule,\r\n        _themesModule,\r\n        _indoorsModule,\r\n        _precacheModule,\r\n        _cameraModule,\r\n        _polygonModule,\r\n        _polylineModule,\r\n        _renderingModule,\r\n        _buildingsModule,\r\n        _propModule,\r\n        _indoorMapEntityInformationModule,\r\n        _indoorMapFloorOutlineInformationModule,\r\n        _blueSphereModule,\r\n        _mapRuntimeModule,\r\n        _versionModule,\r\n        _heatmapModule,\r\n        _frameRateModule\r\n    ];\r\n\r\n    this._indoorEntranceMarkerUpdater = null;\r\n\r\n    if (options.displayEntranceMarkers) {\r\n        this._indoorEntranceMarkerUpdater = new IndoorEntranceMarkerUpdater(this.leafletMap, _indoorsModule);\r\n    }\r\n\r\n    var _resizeCanvas = null;\r\n\r\n    var _updateCanvasSize = function() {\r\n        var newWidth = _mapContainer.width();\r\n        var newHeight = _mapContainer.height();\r\n\r\n        if (newWidth !== _canvasWidth || newHeight !== _canvasHeight) {\r\n            _resizeCanvas(newWidth, newHeight);\r\n            _canvasWidth = newWidth;\r\n            _canvasHeight = newHeight;\r\n        }\r\n    };\r\n\r\n    this.onInitialized = function(eegeoApiPointer, emscriptenApiPointer) {\r\n        _mapContainer.onInitialized();\r\n        _resizeCanvas = _Module.cwrap(\"resizeCanvas\", null, [\"number\", \"number\"]);\r\n        _emscriptenApi.onInitialized(eegeoApiPointer, emscriptenApiPointer, _onUpdate, _onDraw, _onInitialStreamingCompleted);\r\n\r\n        _mapMoveEvents.setEventCallbacks(_emscriptenApi.cameraApi);\r\n\r\n        _modules.forEach(function(module) {\r\n            module.onInitialized();\r\n        });\r\n        this.leafletMap.onInitialized(_emscriptenApi);\r\n    };\r\n\r\n    this.onError = function(errorMessage) {\r\n        _mapContainer.onError(errorMessage);\r\n    };\r\n\r\n    this._setIndoorTransitionCompleteEventListener = function(callback) {\r\n        this.leafletMap.once(\"moveend\", callback);\r\n    };\r\n\r\n    var _this = this;\r\n\r\n    var _onUpdate = function(deltaSeconds) {\r\n        _updateCanvasSize();\r\n\r\n        _modules.forEach(function(module) {\r\n            module.onUpdate(deltaSeconds);\r\n        });\r\n\r\n        _this.leafletMap._onUpdate();\r\n    };\r\n\r\n    var _onDraw = function(deltaSeconds) {\r\n        _modules.forEach(function(module) {\r\n            module.onDraw(deltaSeconds);\r\n        });\r\n\r\n        _this.leafletMap._onDraw();\r\n    };\r\n\r\n    var _onInitialStreamingCompleted = function() {\r\n        _modules.forEach(function(module) {\r\n            module.onInitialStreamingCompleted();\r\n        });\r\n        _this.leafletMap.onInitialStreamingCompleted();\r\n    };\r\n}\r\n\r\nexport default EegeoMapController;\r\n","export function EmscriptenMemory(emscriptenModule) {\r\n\r\n    var _emscriptenModule = emscriptenModule;\r\n\r\n    this.readDoubles = (pointer, count) => {\r\n        var result = [];\r\n        for (var i = 0; i < count; ++i) {\r\n            var item = _emscriptenModule.getValue(pointer + i * 8, \"double\");\r\n            result.push(item);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    this.passDoubles = (double_array, func) => {\r\n        var pointer = _emscriptenModule._malloc(double_array.length * 8);\r\n        for (var i = 0; i < double_array.length; ++i) {\r\n            _emscriptenModule.setValue(pointer + i * 8, double_array[i], \"double\");\r\n        }\r\n        func(pointer, double_array.length);\r\n        _emscriptenModule._free(pointer);\r\n    };\r\n\r\n    this.passString = (string, func) => {\r\n        var utf8Length = _emscriptenModule.lengthBytesUTF8(string);\r\n        var pointer = _emscriptenModule._malloc(utf8Length);\r\n        _emscriptenModule.stringToUTF8(string, pointer, utf8Length);\r\n        func(pointer);\r\n        _emscriptenModule._free(pointer);\r\n    };\r\n\r\n    this.passStrings = (string_array, func) => {\r\n        // allocate array of pointers to strings\r\n        // NB Emscripten heap pointers are 32 bits\r\n        var pointer = _emscriptenModule._malloc(string_array.length * 4);\r\n        var strs = [];\r\n        for (var i = 0; i < string_array.length; ++i) {\r\n            var utf8Length = _emscriptenModule.lengthBytesUTF8(string_array[i]) + 1;\r\n            var str = _emscriptenModule._malloc(utf8Length);\r\n            _emscriptenModule.stringToUTF8(string_array[i], str, utf8Length);\r\n            _emscriptenModule.setValue(pointer + i * 4, str, \"*\");\r\n            strs.push(str);\r\n        }\r\n        func(pointer, string_array.length);\r\n        for (var j = 0; j < strs.length; ++j) {\r\n            _emscriptenModule._free(strs[j]);\r\n        }\r\n        _emscriptenModule._free(pointer);\r\n    };\r\n\r\n    this.passInt32s = (int32_array, func) => {\r\n        var pointer = _emscriptenModule._malloc(int32_array.length * 4);\r\n        for (var i = 0; i < int32_array.length; ++i) {\r\n            _emscriptenModule.setValue(pointer + i * 4, int32_array[i], \"i32\");\r\n        }\r\n        func(pointer, int32_array.length);\r\n        _emscriptenModule._free(pointer);\r\n    };\r\n\r\n    this.stringifyPointer = (ptr) => _emscriptenModule.UTF8ToString(ptr);\r\n\r\n    this.createInt8Buffer = (bufferLen) => {\r\n        var bufferPtr = _emscriptenModule._malloc(bufferLen);\r\n        return {\r\n            ptr: bufferPtr,\r\n            element_count: bufferLen,\r\n            element_type: \"i8\",\r\n            element_size_bytes: 1\r\n        };\r\n    };\r\n\r\n    this.createInt32Buffer = (elementCount) => {\r\n        var elementSizeBytes = 4;\r\n        var bufferPtr = _emscriptenModule._malloc(elementCount * elementSizeBytes);\r\n        return {\r\n            ptr: bufferPtr,\r\n            element_count: elementCount,\r\n            element_type: \"i32\",\r\n            element_size_bytes: elementSizeBytes\r\n        };\r\n    };\r\n\r\n    this.createDoubleBuffer = (elementCount) => {\r\n        var elementSizeBytes = 8;\r\n        var bufferPtr = _emscriptenModule._malloc(elementCount * elementSizeBytes);\r\n        return {\r\n            ptr: bufferPtr,\r\n            element_count: elementCount,\r\n            element_type: \"double\",\r\n            element_size_bytes: elementSizeBytes\r\n        };\r\n    };\r\n\r\n    this.createBufferFromArray = (number_array, createXBufferFunc) => {\r\n        var buffer = createXBufferFunc(number_array.length);\r\n        for (var i = 0; i < buffer.element_count; ++i) {\r\n            _emscriptenModule.setValue(buffer.ptr + i * buffer.element_size_bytes, number_array[i], buffer.element_type);\r\n        }\r\n        return buffer;\r\n    };\r\n\r\n    this.consumeBufferToArray = (buffer) => {\r\n        var result = [];\r\n        for (var i = 0; i < buffer.element_count; ++i) {\r\n            var item = _emscriptenModule.getValue(buffer.ptr + i * buffer.element_size_bytes, buffer.element_type);\r\n            result.push(item);\r\n        }\r\n        _emscriptenModule._free(buffer.ptr);\r\n        return result;\r\n    };\r\n\r\n    this.freeBuffer = (buffer) => {\r\n        _emscriptenModule._free(buffer.ptr);\r\n    };\r\n\r\n    this.createUtf8BufferFromString = (str) => {\r\n        var bufferLen = _emscriptenModule.lengthBytesUTF8(str) + 1;\r\n        var buffer = this.createInt8Buffer(bufferLen);\r\n        _emscriptenModule.stringToUTF8(str, buffer.ptr, bufferLen);\r\n        return buffer;\r\n    };\r\n\r\n    this.consumeUtf8BufferToString = (buffer) => {\r\n        var result = _emscriptenModule.UTF8ToString(buffer.ptr);\r\n        _emscriptenModule._free(buffer.ptr);\r\n        return result;\r\n    };\r\n}\r\n\r\nexport default EmscriptenMemory;\r\n","import { Vector4 } from \"../../public/space\";\r\n\r\nconst vec4ToRgba32 = (v) => {\r\n    var rgba = ((v.x & 0xFF) << 24) + ((v.y & 0xFF) << 16) + ((v.z & 0xFF) << 8) + (v.w & 0xFF);\r\n    return rgba;\r\n};\r\n\r\nconst rgba32ToVec4 = (rgba) => {\r\n    var vec4 = new Vector4(\r\n        ((rgba >> 24) & 0xFF),\r\n        ((rgba >> 16) & 0xFF),\r\n        ((rgba >> 8) & 0xFF),\r\n        (rgba & 0xFF)\r\n    );\r\n    return vec4;\r\n};\r\n\r\nconst hexToRgba32 = (hex) => {\r\n    // https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n\r\n    hex = hex.replace(/^#/, \"\");\r\n    var a = 0xff;\r\n    if (hex.length === 8) {\r\n        a = parseInt(hex.slice(6, 8), 16) & 0xff;\r\n    }\r\n    else if (hex.length === 4) {\r\n        a = parseInt(hex.slice(3, 4).repeat(2), 16) & 0xff;\r\n    }\r\n\r\n    var rgb = 0xffffff;\r\n    if (hex.length === 6 || hex.length === 8) {\r\n        rgb = parseInt(hex.substring(0, 6), 16) & 0xffffff;\r\n    }\r\n    else if (hex.length === 3 || hex.length === 4) {\r\n        rgb = parseInt((hex[0].repeat(2) + hex[1].repeat(2) + hex[2].repeat(2)), 16) & 0xffffff;\r\n    }\r\n\r\n    return (rgb << 8) + a;\r\n};\r\n\r\nconst colorArrayToVector4 = (color) => {\r\n    var r = 0.0;\r\n    var g = 0.0;\r\n    var b = 0.0;\r\n    var a = 255.0;\r\n    if (Array.isArray(color) && color.length >= 3) {\r\n        r = color[0];\r\n        g = color[1];\r\n        b = color[2];\r\n        if (color.length > 3) {\r\n            a = color[3];\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Unable to parse color from array: \" + String(color));\r\n    }\r\n\r\n    if (isNaN(r) || isNaN(g) || isNaN(b) || isNaN(a)) {\r\n        throw new Error(\"Unable to parse color - value out of range: \" + String(color));\r\n    }\r\n    return new Vector4(r, g, b, a);\r\n};\r\n\r\nconst colorObjectToVector4 = (color) => {\r\n    var r = undefined;\r\n    var g = undefined;\r\n    var b = undefined;\r\n    var a = 255.0;\r\n    if (typeof color === \"object\") {\r\n        if (\"r\" in color) {\r\n            r = color.r;\r\n        }\r\n        else if (\"x\" in color) {\r\n            r = color.x;\r\n        }\r\n\r\n        if (\"g\" in color) {\r\n            g = color.g;\r\n        }\r\n        else if (\"y\" in color) {\r\n            g = color.y;\r\n        }\r\n\r\n        if (\"b\" in color) {\r\n            b = color.b;\r\n        }\r\n        else if (\"z\" in color) {\r\n            b = color.z;\r\n        }\r\n\r\n        if (\"a\" in color) {\r\n            a = color.a;\r\n        }\r\n        else if (\"w\" in color) {\r\n            a = color.w;\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Unable to parse color: \" + String(color));\r\n    }\r\n\r\n    if (isNaN(r) || isNaN(g) || isNaN(b) || isNaN(a)) {\r\n        throw new Error(\"Unable to parse color - value out of range: \" + String(color));\r\n    }\r\n    return new Vector4(r, g, b, a);\r\n};\r\n\r\nexport const colorToRgba32 = (color) => {\r\n    if (typeof (color) === \"string\") {\r\n        return hexToRgba32(color);\r\n    }\r\n    else if (Array.isArray(color)) {\r\n        return vec4ToRgba32(colorArrayToVector4(color));\r\n    }\r\n    else if (typeof color === \"object\") {\r\n        return vec4ToRgba32(colorObjectToVector4(color));\r\n    }\r\n\r\n    throw new Error(\"Unable to parse color: \" + String(color));\r\n};\r\n\r\nexport const colorToVec4 = (color) => {\r\n    return rgba32ToVec4(colorToRgba32(color));\r\n};\r\n","import { ElevationModeType } from \"../elevation_mode\";\r\nimport { colorToVec4 } from \"./emscripten_interop_utils.js\";\r\n\r\nexport function EmscriptenGeofenceApi(eegeoApiPointer, cwrap, emscriptenModule) {\r\n\r\n    var _eegeoApiPointer = eegeoApiPointer;\r\n    var _emscriptenModule = emscriptenModule;\r\n    var _removeGeofence = cwrap(\"removeGeofence\", null, [\"number\", \"number\"]);\r\n    var _setGeofenceColor = cwrap(\"setGeofenceColor\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _createGeofenceFromRawCoords = cwrap(\"createGeofenceFromRawCoords\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"string\", \"number\", \"number\"]);\r\n    \r\n    this._getElevationIsAboveSeaLevelFromConfig = (config) => {\r\n      var configUsingNewApi = typeof config.elevationMode !== \"undefined\";\r\n      return configUsingNewApi ? config.elevationMode.toLowerCase() === ElevationModeType.HEIGHT_ABOVE_SEA_LEVEL.toLowerCase() :\r\n        (config.offsetFromSeaLevel || false);\r\n    };\r\n    \r\n    this._getAltitudeOffsetFromConfig = (config) => {\r\n      var configUsingNewApi = typeof config.elevation !== \"undefined\";\r\n      return configUsingNewApi ? config.elevation : (config.altitudeOffset || 0.0);\r\n    };\r\n\r\n    this.createGeofence = (outerPoints, holes, config) => {\r\n      var coords = [];\r\n      var ringVertexCounts = [];\r\n      ringVertexCounts.push(outerPoints.length);\r\n      outerPoints.forEach((point) => {\r\n        coords.push(point.lat);\r\n        coords.push(point.lng);\r\n      });\r\n\r\n      holes.forEach((ring) => {\r\n        ringVertexCounts.push(ring.length);\r\n        ring.forEach((point) => {\r\n          coords.push(point.lat);\r\n          coords.push(point.lng);\r\n        });\r\n      });\r\n\r\n      var coordsPointer = _emscriptenModule._malloc(coords.length * 8);\r\n      for (var i=0; i<coords.length; ++i) {\r\n          _emscriptenModule.setValue(coordsPointer + i*8, coords[i], \"double\");\r\n      }\r\n\r\n      var ringVertexCountsPointer = _emscriptenModule._malloc(ringVertexCounts.length * 4);\r\n      for (var k=0; k<ringVertexCounts.length; ++k) {\r\n          _emscriptenModule.setValue(ringVertexCountsPointer + k*4, ringVertexCounts[k], \"i32\");\r\n      }\r\n\r\n      var indoorMapId = config.indoorMapId || \"\";      \r\n      var elevationModeAboveSeaLevel = this._getElevationIsAboveSeaLevelFromConfig(config);\r\n      var altitudeOffset = this._getAltitudeOffsetFromConfig(config);     \r\n      \r\n      var polygonId = _createGeofenceFromRawCoords(_eegeoApiPointer, \r\n          coordsPointer, coords.length,\r\n          ringVertexCountsPointer, ringVertexCounts.length,\r\n          elevationModeAboveSeaLevel, \r\n          altitudeOffset,\r\n          indoorMapId,\r\n          indoorMapId.length,\r\n          config.indoorMapFloorId || 0\r\n          );\r\n\r\n      _emscriptenModule._free(coordsPointer);\r\n      _emscriptenModule._free(ringVertexCountsPointer);\r\n\r\n      return polygonId;\r\n    };\r\n\r\n    this.removeGeofence = (polygonId) => {\r\n      _removeGeofence(_eegeoApiPointer, polygonId);\r\n    };\r\n\r\n    this.setGeofenceColor = (polygonId, color) => {\r\n      var colorVec4 = colorToVec4(color);\r\n      _setGeofenceColor(_eegeoApiPointer, polygonId, colorVec4.x / 255, colorVec4.y / 255, colorVec4.z / 255, colorVec4.w / 255);\r\n    };\r\n}\r\n\r\nexport default EmscriptenGeofenceApi;\r\n","import L from \"leaflet\";\r\nimport { colorToRgba32 } from \"./emscripten_interop_utils.js\";\r\n\r\nexport function EmscriptenIndoorsApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _indoorsApi_RegisterIndoorMapCallbacks = cwrap(\"indoorsApi_RegisterIndoorMapCallbacks\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_EnterIndoorMap = cwrap(\"indoorsApi_EnterIndoorMap\", null, [\"number\", \"string\"]);\r\n    var _indoorsApi_ExitIndoorMap = cwrap(\"indoorsApi_ExitIndoorMap\", null, [\"number\"]);\r\n    var _indoorsApi_HasActiveIndoorMap = cwrap(\"indoorsApi_HasActiveIndoorMap\", \"number\", [\"number\"]);\r\n    var _indoorsApi_GetActiveIndoorMapId = cwrap(\"indoorsApi_GetActiveIndoorMapId\", \"string\", [\"number\"]);\r\n    var _indoorsApi_GetActiveIndoorMapName = cwrap(\"indoorsApi_GetActiveIndoorMapName\", \"string\", [\"number\"]);\r\n    var _indoorsApi_GetActiveIndoorMapSourceVendor = cwrap(\"indoorsApi_GetActiveIndoorMapSourceVendor\", \"string\", [\"number\"]);\r\n    var _indoorsApi_GetActiveIndoorMapFloorCount = cwrap(\"indoorsApi_GetActiveIndoorMapFloorCount\", \"number\", [\"number\"]);\r\n    var _indoorsApi_GetActiveIndoorMapUserData = cwrap(\"indoorsApi_GetActiveIndoorMapUserData\", \"string\", [\"number\"]);\r\n    var _indoorsApi_GetSelectedFloorIndex = cwrap(\"indoorsApi_GetSelectedFloorIndex\", \"number\", [\"number\"]);\r\n    var _indoorsApi_SetSelectedFloorIndex = cwrap(\"indoorsApi_SetSelectedFloorIndex\", \"number\", [\"number\", \"number\"]);\r\n    var _indoorsApi_GetFloorName = cwrap(\"indoorsApi_GetFloorName\", \"string\", [\"number\", \"number\"]);\r\n    var _indoorsApi_GetFloorShortName = cwrap(\"indoorsApi_GetFloorShortName\", \"string\", [\"number\", \"number\"]);\r\n    var _indoorsApi_GetFloorNumber = cwrap(\"indoorsApi_GetFloorNumber\", \"number\", [\"number\", \"number\"]);\r\n    var _indoorsApi_GetFloorHeightAboveSeaLevel = cwrap(\"indoorsApi_GetFloorHeightAboveSeaLevel\", \"number\", [\"number\", \"number\"]);\r\n\r\n    var _indoorsApi_TryGetReadableNameBufferSize = cwrap(\"indoorsApi_TryGetReadableNameBufferSize\", \"number\", [\"number\", \"string\", \"number\", \"number\"]);\r\n    var _indoorsApi_TryGetReadableName = cwrap(\"indoorsApi_TryGetReadableName\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_TryGetFloorReadableNameBufferSize = cwrap(\"indoorsApi_TryGetFloorReadableNameBufferSize\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_TryGetFloorReadableName = cwrap(\"indoorsApi_TryGetFloorReadableName\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_TryGetFloorShortNameBufferSize = cwrap(\"indoorsApi_TryGetFloorShortNameBufferSize\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_TryGetFloorShortName = cwrap(\"indoorsApi_TryGetFloorShortName\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_SetBackgroundColor = cwrap(\"indoorsApi_SetBackgroundColor\", null, [\"number\", \"number\"]);\r\n    var _indoorsApi_HideLabelsForEntities = cwrap(\"indoorsApi_HideLabelsForEntities\", null, [\"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_ShowLabelsForEntities = cwrap(\"indoorsApi_ShowLabelsForEntities\", null, [\"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_ShowAllLabels = cwrap(\"indoorsApi_ShowAllLabels\", null, [\"number\"]);\r\n\r\n    var _onIndoorMapEntered = null;\r\n    var _onIndoorMapEnterFailed = null;\r\n    var _onIndoorMapExited = null;\r\n    var _onIndoorMapFloorChanged = null;\r\n    var _onIndoorMapEntryMarkerAdded = null;\r\n    var _onIndoorMapEntryMarkerRemoved = null;\r\n    var _onIndoorMapLoaded = null;\r\n    var _onIndoorMapUnloaded = null;\r\n\r\n    var _indoorMapEnteredHandler = () => {\r\n        if (_onIndoorMapEntered !== null) {\r\n            _onIndoorMapEntered();\r\n        }\r\n    };\r\n\r\n    var _indoorMapEntryFailedHandler = () => {\r\n        if (_onIndoorMapEnterFailed !== null) {\r\n            _onIndoorMapEnterFailed();\r\n        }\r\n    };\r\n\r\n    var _indoorMapExitedHandler = () => {\r\n        if (_onIndoorMapExited !== null) {\r\n            _onIndoorMapExited();\r\n        }\r\n    };\r\n\r\n    var _indoorMapFloorChangedHandler = () => {\r\n        if (_onIndoorMapFloorChanged !== null) {\r\n            _onIndoorMapFloorChanged();\r\n        }\r\n    };\r\n\r\n    var _executeEntryMarkerCallback = (callback, indoorMapIdPtr, indoorMapNamePtr, indoorMapLatLngPtr) => {\r\n        var indoorMapId = _emscriptenMemory.stringifyPointer(indoorMapIdPtr);\r\n        var indoorMapName = _emscriptenMemory.stringifyPointer(indoorMapNamePtr);\r\n        var latLngArray = _emscriptenMemory.readDoubles(indoorMapLatLngPtr, 3);\r\n        var markerLatLng = L.latLng(latLngArray);\r\n        callback(indoorMapId, indoorMapName, markerLatLng);\r\n    };\r\n\r\n    var _indoorMapEntryMarkerAddedHandler = (indoorMapIdPtr, indoorMapNamePtr, indoorMapLatLngPtr) => {\r\n        if (_onIndoorMapEntryMarkerAdded !== null) {\r\n            _executeEntryMarkerCallback(_onIndoorMapEntryMarkerAdded, indoorMapIdPtr, indoorMapNamePtr, indoorMapLatLngPtr);\r\n        }\r\n    };\r\n\r\n    var _indoorMapEntryMarkerRemovedHandler = (indoorMapIdPtr, indoorMapNamePtr, indoorMapLatLngPtr) => {\r\n        if (_onIndoorMapEntryMarkerRemoved !== null) {\r\n            _executeEntryMarkerCallback(_onIndoorMapEntryMarkerRemoved, indoorMapIdPtr, indoorMapNamePtr, indoorMapLatLngPtr);\r\n        }\r\n    };\r\n\r\n    var _indoorMapLoadedHandler = (indoorMapIdPtr) => {\r\n        if (_onIndoorMapLoaded !== null) {\r\n            var indoorMapId = _emscriptenMemory.stringifyPointer(indoorMapIdPtr);\r\n            _onIndoorMapLoaded(indoorMapId);\r\n        }\r\n    };\r\n\r\n    var _indoorMapUnloadedHandler = (indoorMapIdPtr) => {\r\n        if (_onIndoorMapUnloaded !== null) {\r\n            var indoorMapId = _emscriptenMemory.stringifyPointer(indoorMapIdPtr);\r\n            _onIndoorMapUnloaded(indoorMapId);\r\n        }\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _indoorsApi_RegisterIndoorMapCallbacks(\r\n            _emscriptenApiPointer,\r\n            emscriptenModule.addFunction(_indoorMapEnteredHandler),\r\n            emscriptenModule.addFunction(_indoorMapEntryFailedHandler),\r\n            emscriptenModule.addFunction(_indoorMapExitedHandler),\r\n            emscriptenModule.addFunction(_indoorMapFloorChangedHandler),\r\n            emscriptenModule.addFunction(_indoorMapEntryMarkerAddedHandler),\r\n            emscriptenModule.addFunction(_indoorMapEntryMarkerRemovedHandler),\r\n            emscriptenModule.addFunction(_indoorMapLoadedHandler),\r\n            emscriptenModule.addFunction(_indoorMapUnloadedHandler)\r\n        );\r\n    };\r\n\r\n    this.setNotificationCallbacks = (\r\n        indoorMapEnteredCallback,\r\n        indoorMapEnterFailedCallback,\r\n        indoorMapExitedCallback,\r\n        indoorMapFloorChangedCallback,\r\n        indoorMapEntryMarkerAddedCallback,\r\n        indoorMapEntryMarkerRemovedCallback,\r\n        indoorMapLoadedCallback,\r\n        indoorMapUnloadedCallback\r\n    ) => {\r\n        _onIndoorMapEntered = indoorMapEnteredCallback;\r\n        _onIndoorMapEnterFailed = indoorMapEnterFailedCallback;\r\n        _onIndoorMapExited = indoorMapExitedCallback;\r\n        _onIndoorMapFloorChanged = indoorMapFloorChangedCallback;\r\n        _onIndoorMapEntryMarkerAdded = indoorMapEntryMarkerAddedCallback;\r\n        _onIndoorMapEntryMarkerRemoved = indoorMapEntryMarkerRemovedCallback;\r\n        _onIndoorMapLoaded = indoorMapLoadedCallback;\r\n        _onIndoorMapUnloaded = indoorMapUnloadedCallback;\r\n    };\r\n\r\n    this.enterIndoorMap = (indoorMapId) => {\r\n        return _indoorsApi_EnterIndoorMap(_emscriptenApiPointer, indoorMapId);\r\n    };\r\n\r\n    this.exitIndoorMap = () => {\r\n        _indoorsApi_ExitIndoorMap(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.hasActiveIndoorMap = () => {\r\n        return !!_indoorsApi_HasActiveIndoorMap(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.getActiveIndoorMapId = () => {\r\n        return _indoorsApi_GetActiveIndoorMapId(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.getActiveIndoorMapName = () => {\r\n        return _indoorsApi_GetActiveIndoorMapName(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.getActiveIndoorMapSourceVendor = () => {\r\n        return _indoorsApi_GetActiveIndoorMapSourceVendor(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.getActiveIndoorMapFloorCount = () => {\r\n        return _indoorsApi_GetActiveIndoorMapFloorCount(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.getActiveIndoorMapUserData = () => {\r\n        return _indoorsApi_GetActiveIndoorMapUserData(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.getSelectedFloorIndex = () => {\r\n        return _indoorsApi_GetSelectedFloorIndex(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.setSelectedFloorIndex = (floorIndex) => {\r\n        return !!_indoorsApi_SetSelectedFloorIndex(_emscriptenApiPointer, floorIndex);\r\n    };\r\n\r\n    this.getFloorName = (floorIndex) => {\r\n        return _indoorsApi_GetFloorName(_emscriptenApiPointer, floorIndex);\r\n    };\r\n\r\n    this.getFloorShortName = (floorIndex) => {\r\n        return _indoorsApi_GetFloorShortName(_emscriptenApiPointer, floorIndex);\r\n    };\r\n\r\n    this.getFloorNumber = (floorIndex) => {\r\n        return _indoorsApi_GetFloorNumber(_emscriptenApiPointer, floorIndex);\r\n    };\r\n\r\n    this.getFloorHeightAboveSeaLevel = (floorIndex) => {\r\n        return _indoorsApi_GetFloorHeightAboveSeaLevel(_emscriptenApiPointer, floorIndex);\r\n    };\r\n\r\n    this.tryGetReadableName = (indoorMapId) => {\r\n        var bufferSizeBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n        var success = _indoorsApi_TryGetReadableNameBufferSize(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            bufferSizeBuf.ptr\r\n        );\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var bufferSize = _emscriptenMemory.consumeBufferToArray(bufferSizeBuf)[0];\r\n        var stringBuffer = _emscriptenMemory.createInt8Buffer(bufferSize);\r\n\r\n        success = _indoorsApi_TryGetReadableName(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            stringBuffer.ptr,\r\n            bufferSize\r\n        );\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var indoorMapReadableName = _emscriptenMemory.consumeUtf8BufferToString(stringBuffer);\r\n        return indoorMapReadableName;\r\n    };\r\n\r\n    var _tryGetNativeIndoorMapFloorString = (indoorMapId, indoorMapFloorId, nativeGetBufferSizeFunc, nativeGetStringFunc) => {\r\n        var bufferSizeBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n        var success = nativeGetBufferSizeFunc(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            indoorMapFloorId,\r\n            bufferSizeBuf.ptr\r\n        );\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var bufferSize = _emscriptenMemory.consumeBufferToArray(bufferSizeBuf)[0];\r\n        var stringBuffer = _emscriptenMemory.createInt8Buffer(bufferSize);\r\n\r\n        success = nativeGetStringFunc(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            indoorMapFloorId,\r\n            stringBuffer.ptr,\r\n            bufferSize\r\n        );\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var stringValue = _emscriptenMemory.consumeUtf8BufferToString(stringBuffer);\r\n        return stringValue;\r\n    };\r\n\r\n    this.tryGetFloorReadableName = (indoorMapId, indoorMapFloorId) => {\r\n        return _tryGetNativeIndoorMapFloorString(\r\n            indoorMapId,\r\n            indoorMapFloorId,\r\n            _indoorsApi_TryGetFloorReadableNameBufferSize,\r\n            _indoorsApi_TryGetFloorReadableName\r\n        );\r\n    };\r\n\r\n    this.tryGetFloorShortName = (indoorMapId, indoorMapFloorId) => {\r\n        return _tryGetNativeIndoorMapFloorString(\r\n            indoorMapId,\r\n            indoorMapFloorId,\r\n            _indoorsApi_TryGetFloorShortNameBufferSize,\r\n            _indoorsApi_TryGetFloorShortName\r\n        );\r\n    };\r\n\r\n    this.setBackgroundColor = (color) => {\r\n        var colorRGBA32 = colorToRgba32(color);\r\n        _indoorsApi_SetBackgroundColor(_emscriptenApiPointer, colorRGBA32);\r\n    };\r\n\r\n    this.hideLabelsForEntities = (entityNames) => {\r\n        _emscriptenMemory.passStrings(entityNames, (resultStrings, stringArraySize) => {\r\n            _indoorsApi_HideLabelsForEntities(_emscriptenApiPointer, resultStrings, stringArraySize);\r\n        });\r\n    };\r\n\r\n    this.showLabelsForEntities = (entityNames) => {\r\n        _emscriptenMemory.passStrings(entityNames, (resultStrings, stringArraySize) => {\r\n            _indoorsApi_ShowLabelsForEntities(_emscriptenApiPointer, resultStrings, stringArraySize);\r\n        });\r\n    };\r\n\r\n    this.showAllLabels = () => {\r\n        _indoorsApi_ShowAllLabels(_emscriptenApiPointer);\r\n    };\r\n}\r\n\r\nexport default EmscriptenIndoorsApi;\r\n","export function EmscriptenPrecacheApi(emscriptenApiPointer, cwrap, emscriptenModule) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _beginPrecacheOperation = null;\r\n    var _cancelPrecacheOperation = null;\r\n    var _setPrecacheCallbacks = null;\r\n    var _cancelCallback = null;\r\n    var _completeCallback = null;\r\n\r\n    this.registerCallbacks = (completeCallback, cancelCallback) => {\r\n        if (_completeCallback !== null) {\r\n            emscriptenModule.removeFunction(_completeCallback);\r\n        }\r\n        _completeCallback = emscriptenModule.addFunction(completeCallback);\r\n        if (_cancelCallback !== null) {\r\n            emscriptenModule.removeFunction(_cancelCallback);\r\n        }\r\n        _cancelCallback = emscriptenModule.addFunction(cancelCallback);\r\n\r\n        _setPrecacheCallbacks = _setPrecacheCallbacks || cwrap(\"precacheApi_setPrecacheCallbacks\", null, [\"number\", \"number\", \"number\"]);\r\n        _setPrecacheCallbacks(_emscriptenApiPointer, _completeCallback, _cancelCallback);\r\n    };\r\n\r\n    this.beginPrecacheOperation = (operation) => {\r\n        _beginPrecacheOperation = _beginPrecacheOperation || cwrap(\"precacheApi_beginPrecacheOperation\", \"number\", [\"number\", \"number\", \"number\", \"number\"]);\r\n\r\n        var latlong = operation.getCentre();\r\n        return _beginPrecacheOperation(_emscriptenApiPointer, latlong.lat, latlong.lng, operation.getRadius());\r\n    };\r\n\r\n    this.cancelPrecacheOperation = (operationId) => {\r\n        _cancelPrecacheOperation = _cancelPrecacheOperation || cwrap(\"precacheApi_cancelPrecacheOperation\", null, [\"number\", \"number\"]);\r\n        _cancelPrecacheOperation(_emscriptenApiPointer, operationId);\r\n    };\r\n}\r\n\r\nexport default EmscriptenPrecacheApi;\r\n","import L from \"leaflet\";\r\nimport { Vector3 } from \"../../public/space\";\r\n\r\nexport function EmscriptenSpacesApi(eegeoApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _eegeoApiPointer = eegeoApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n    var _worldToScreenWrap = null;\r\n    var _screenToTerrainPointWrap = null;\r\n    var _screenToIndoorPointWrap = null;\r\n    var _getAltitudeAtLatLngWrap = null;\r\n    var _getUpdatedAltitudeAtLatLngWrap = null;\r\n    var _getMortonKeyAtLatLngWrap = null;\r\n    var _getMortonKeyCenterWrap = null;\r\n    var _getMortonKeyCornersWrap = null;\r\n\r\n    var _spacesApi_ScreenPointToRay = cwrap(\"spacesApi_ScreenPointToRay\", null, [\"number\", \"number\", \"number\", \"number\"]);\r\n    var _spacesApi_LatLongToVerticallyDownRay = cwrap(\"spacesApi_LatLongToVerticallyDownRay\", null, [\"number\", \"number\", \"number\", \"number\"]);\r\n\r\n    var _worldToScreen = (lat, long, alt) => {\r\n        _worldToScreenWrap = _worldToScreenWrap || cwrap(\"worldToScreen\", null, [\"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n        var screenPos = [0, 0, 0];\r\n        _emscriptenMemory.passDoubles(screenPos, function (resultArray, arraySize) {\r\n            _worldToScreenWrap(_eegeoApiPointer, lat, long, alt, resultArray);\r\n            screenPos = _emscriptenMemory.readDoubles(resultArray, 3);\r\n        });\r\n        return new Vector3(screenPos);\r\n    };\r\n\r\n    var _screenToLatLng = (screenX, screenY, raycastFunc) => {\r\n        var latLngAltArray = [0, 0, 0];\r\n        var foundWorldPoint = false;\r\n        _emscriptenMemory.passDoubles(latLngAltArray, function (resultArray, arraySize) {\r\n            var success = raycastFunc(_eegeoApiPointer, screenX, screenY, resultArray);\r\n            foundWorldPoint = !!success;\r\n            latLngAltArray = _emscriptenMemory.readDoubles(resultArray, 3);\r\n        });\r\n        return (foundWorldPoint) ? L.latLng(latLngAltArray) : null;\r\n    };\r\n\r\n    var _screenToTerrainPoint = (screenX, screenY) => {\r\n        _screenToTerrainPointWrap = _screenToTerrainPointWrap || cwrap(\"screenToTerrainPoint\", \"number\", [\"number\", \"number\", \"number\", \"number\"]);\r\n        return _screenToLatLng(screenX, screenY, _screenToTerrainPointWrap);\r\n    };\r\n\r\n    var _screenToIndoorPoint = (screenX, screenY) => {\r\n        _screenToIndoorPointWrap = _screenToIndoorPointWrap || cwrap(\"screenToIndoorPoint\", \"number\", [\"number\", \"number\", \"number\", \"number\"]);\r\n        return _screenToLatLng(screenX, screenY, _screenToIndoorPointWrap);\r\n    };\r\n\r\n    var _getAltitudeAtLatLng = (lat, long) => {\r\n        _getAltitudeAtLatLngWrap = _getAltitudeAtLatLngWrap || cwrap(\"getAltitudeAtLatLng\", \"number\", [\"number\", \"number\", \"number\"]);\r\n        return _getAltitudeAtLatLngWrap(_eegeoApiPointer, lat, long);\r\n    };\r\n\r\n    var _getUpdatedAltitudeAtLatLng = (lat, long, previousHeight, previousLevel) => {\r\n        _getUpdatedAltitudeAtLatLngWrap = _getUpdatedAltitudeAtLatLngWrap || cwrap(\"getUpdatedAltitudeAtLatLng\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n        var results = [0, 0];\r\n        var altitudeUpdated = false;\r\n        _emscriptenMemory.passDoubles(results, (resultArray, arraySize) => {\r\n            var success = _getUpdatedAltitudeAtLatLngWrap(_eegeoApiPointer, lat, long, previousHeight, previousLevel, resultArray);\r\n            altitudeUpdated = !!success;\r\n            if (altitudeUpdated) {\r\n                results = _emscriptenMemory.readDoubles(resultArray, 2);\r\n            }\r\n        });\r\n        return altitudeUpdated ? results : null;\r\n    };\r\n\r\n    var _getMortonKeyAtLatLng = (lat, long) => {\r\n        _getMortonKeyAtLatLngWrap = _getMortonKeyAtLatLngWrap || cwrap(\"getMortonKeyAtLatLng\", null, [\"number\", \"number\", \"number\"]);\r\n        var mortonKey = \"\";\r\n        _emscriptenMemory.passString(mortonKey, (resultString) => {\r\n            _getMortonKeyAtLatLngWrap(lat, long, resultString);\r\n            mortonKey = _emscriptenMemory.stringifyPointer(resultString);\r\n        });\r\n        return mortonKey;\r\n    };\r\n\r\n    var _getMortonKeyCenter = (mortonKey) => {\r\n        _getMortonKeyCenterWrap = _getMortonKeyCenterWrap || cwrap(\"getMortonKeyCenter\", null, [\"string\", \"number\"]);\r\n        var latLngCenterArray = [0, 0];\r\n        _emscriptenMemory.passDoubles(latLngCenterArray, (resultArray, arraySize) => {\r\n            _getMortonKeyCenterWrap(mortonKey, resultArray);\r\n            latLngCenterArray = _emscriptenMemory.readDoubles(resultArray, 2);\r\n        });\r\n        latLngCenterArray.forEach((value, index) => {\r\n            if (isNaN(value)) {\r\n                latLngCenterArray[index] = 0;\r\n            }\r\n        });\r\n        return L.latLng(latLngCenterArray);\r\n    };\r\n\r\n    var _getMortonKeyCorners = (mortonKey, insetMeters) => {\r\n        _getMortonKeyCornersWrap = _getMortonKeyCornersWrap || cwrap(\"getMortonKeyCorners\", null, [\"string\", \"number\", \"number\"]);\r\n        var latLngCornersArray = [0, 0, 0, 0, 0, 0, 0, 0];\r\n        _emscriptenMemory.passDoubles(latLngCornersArray, (resultArray, arraySize) => {\r\n            _getMortonKeyCornersWrap(mortonKey, insetMeters, resultArray);\r\n            latLngCornersArray = _emscriptenMemory.readDoubles(resultArray, 8);\r\n        });\r\n        latLngCornersArray.forEach((value, index) => {\r\n            if (isNaN(value)) {\r\n                latLngCornersArray[index] = 0;\r\n            }\r\n        });\r\n        return [\r\n            L.latLng(latLngCornersArray.slice(0, 2)),\r\n            L.latLng(latLngCornersArray.slice(2, 4)),\r\n            L.latLng(latLngCornersArray.slice(4, 6)),\r\n            L.latLng(latLngCornersArray.slice(6))\r\n        ];\r\n    };\r\n\r\n    this.worldToScreen = (position) => {\r\n        var point = L.latLng(position);\r\n        return _worldToScreen(point.lat, point.lng, point.alt || 0);\r\n    };\r\n\r\n    this.screenToTerrainPoint = (screenPoint) => {\r\n        var point = L.point(screenPoint);\r\n        return _screenToTerrainPoint(point.x, point.y);\r\n    };\r\n\r\n    this.screenToIndoorPoint = (screenPoint) => {\r\n        var point = L.point(screenPoint);\r\n        return _screenToIndoorPoint(point.x, point.y);\r\n    };\r\n\r\n    this.screenToWorldPoint = (screenPoint) => {\r\n        return this.screenToIndoorPoint(screenPoint) || this.screenToTerrainPoint(screenPoint);\r\n    };\r\n\r\n    this.getAltitudeAtLatLng = (latLng) => {\r\n        latLng = L.latLng(latLng);\r\n        return _getAltitudeAtLatLng(latLng.lat, latLng.lng);\r\n    };\r\n\r\n    this.getUpdatedAltitudeAtLatLng = (latLng, previousHeight, previousLevel) =>\r\n        _getUpdatedAltitudeAtLatLng(latLng.lat, latLng.lng, previousHeight, previousLevel);\r\n\r\n\r\n    this.screenPointToRay = (screenPoint) => {\r\n        var point = L.point(screenPoint);\r\n        var resultRayBuffer = _emscriptenMemory.createDoubleBuffer(6);\r\n        _spacesApi_ScreenPointToRay(_eegeoApiPointer, point.x, point.y, resultRayBuffer.ptr);\r\n        var resultArray = _emscriptenMemory.consumeBufferToArray(resultRayBuffer);\r\n        var rayOrigin = new Vector3(resultArray[0], resultArray[1], resultArray[2]);\r\n        var rayDirection = new Vector3(resultArray[3], resultArray[4], resultArray[5]);\r\n        return {\r\n            origin: rayOrigin,\r\n            direction: rayDirection\r\n        };\r\n    };\r\n\r\n    this.latLongToVerticallyDownRay = (latLng) => {\r\n        var resultRayBuffer = _emscriptenMemory.createDoubleBuffer(6);\r\n        _spacesApi_LatLongToVerticallyDownRay(_eegeoApiPointer, latLng.lat, latLng.lng, resultRayBuffer.ptr);\r\n        var resultArray = _emscriptenMemory.consumeBufferToArray(resultRayBuffer);\r\n        var rayOrigin = new Vector3(resultArray[0], resultArray[1], resultArray[2]);\r\n        var rayDirection = new Vector3(resultArray[3], resultArray[4], resultArray[5]);\r\n        return {\r\n            origin: rayOrigin,\r\n            direction: rayDirection\r\n        };\r\n    };\r\n\r\n    this.getMortonKeyAtLatLng = (latLng) => {\r\n        var _latLng = L.latLng(latLng);\r\n        return _getMortonKeyAtLatLng(_latLng.lat, _latLng.lng);\r\n    };\r\n\r\n    this.getMortonKeyCenter = (mortonKey) => _getMortonKeyCenter(mortonKey);\r\n\r\n    this.getMortonKeyCorners = (mortonKey, insetMeters) => _getMortonKeyCorners(mortonKey, insetMeters || 0.0);\r\n}\r\n\r\nexport default EmscriptenSpacesApi;\r\n","export function EmscriptenThemesApi(eegeoApiPointer, cwrap, emscriptenModule) {\r\n\r\n    var _eegeoApiPointer = eegeoApiPointer;\r\n    var _setTheme = null;\r\n    var _setState = null;\r\n    var _setThemeManifest = null;\r\n    var _setCallback = null;\r\n\r\n    this.setTheme = (themeName) => {\r\n        _setTheme = _setTheme || cwrap(\"setTheme\", null, [\"number\", \"string\"]);\r\n        _setTheme(_eegeoApiPointer, themeName);\r\n    };\r\n\r\n    this.setState = (stateName, transitionTime) => {\r\n        _setState = _setState || cwrap(\"setState\", null, [\"number\", \"string\", \"number\"]);\r\n        _setState(_eegeoApiPointer, stateName, transitionTime);\r\n    };\r\n\r\n    this.setThemeManifest = (themeManifest) => {\r\n        _setThemeManifest = _setThemeManifest || cwrap(\"setThemeManifest\", null, [\"number\", \"string\"]);\r\n        _setThemeManifest(_eegeoApiPointer, themeManifest);\r\n    };\r\n\r\n    this.registerStreamingCompletedCallback = (callback) => {\r\n        _setCallback = _setCallback || cwrap(\"setStreamingCompletedCallback\", null, [\"number\", \"number\"]);\r\n        _setCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n}\r\n\r\nexport default EmscriptenThemesApi;","import L from \"leaflet\";\r\n\r\nexport function EmscriptenCameraApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n    var _cameraApi_setViewUsingZenithAngle = cwrap(\"cameraApi_setViewUsingZenithAngle\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\" ]);\r\n    var _cameraApi_setViewToBounds = cwrap(\"cameraApi_setViewToBounds\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n    var _cameraApi_getDistanceToInterest = cwrap(\"cameraApi_getDistanceToInterest\", \"number\", [\"number\"]);\r\n    var _cameraApi_getInterestLatLong = cwrap(\"cameraApi_getInterestLatLong\", null, [\"number\", \"number\"]);\r\n    var _cameraApi_getPitchDegrees = cwrap(\"cameraApi_getPitchDegrees\", \"number\", [\"number\"]);\r\n    var _cameraApi_getHeadingDegrees = cwrap(\"cameraApi_getHeadingDegrees\", \"number\", [\"number\"]);\r\n    var _cameraApi_setEventCallback = cwrap(\"cameraApi_setEventCallback\", null, [\"number\", \"number\"]);\r\n    var _cameraApi_getDistanceFromZoomLevel = cwrap(\"cameraApi_getDistanceFromZoomLevel\", \"number\", [\"number\", \"number\"]);\r\n    var _cameraApi_getZoomLevel = cwrap(\"cameraApi_getZoomLevel\", \"number\", [\"number\"]);\r\n    var _cameraApi_setVerticallyLocked = cwrap(\"cameraApi_setVerticallyLocked\", null, [\"number\", \"number\"]);\r\n\r\n    var _setView = (animated, location, distance, headingDegrees, tiltDegrees, durationSeconds, jumpIfFarAway, allowInterruption) => {\r\n\r\n        var modifyLocation = true;\r\n        if (location === null) {\r\n            location = { lat: 0, lng: 0, alt: 0 };\r\n            modifyLocation = false;\r\n        }\r\n\r\n        return _cameraApi_setViewUsingZenithAngle(\r\n            _emscriptenApiPointer,\r\n            animated,\r\n            location.lat || 0, location.lng || 0, location.alt || 0, modifyLocation,\r\n            distance || 0, distance !== null,\r\n            headingDegrees || 0, headingDegrees !== null,\r\n            tiltDegrees || 0, tiltDegrees !== null,\r\n            durationSeconds || 0, durationSeconds !== null,\r\n            jumpIfFarAway,\r\n            allowInterruption\r\n        );\r\n    };\r\n\r\n    var _setViewToBounds = (northEast, southWest, animated, allowInterruption) => {\r\n        _cameraApi_setViewToBounds(\r\n            _emscriptenApiPointer,\r\n            northEast.lat, northEast.lng, northEast.alt || 0,\r\n            southWest.lat, southWest.lng, southWest.alt || 0,\r\n            animated,\r\n            allowInterruption\r\n        );\r\n    };\r\n\r\n    this.setView = (config) => {\r\n        var animated = \"animate\" in config ? config[\"animate\"] : true;\r\n        var location = \"location\" in config ? L.latLng(config[\"location\"]): null;\r\n        var distance = \"zoom\" in config ? this.getDistanceFromZoomLevel(config[\"zoom\"]) : \"distance\" in config ? config[\"distance\"] : null;\r\n        var headingDegrees = \"headingDegrees\" in config ? config[\"headingDegrees\"] : null;\r\n        var tiltDegrees = \"tiltDegrees\" in config ? config[\"tiltDegrees\"] : null;\r\n        var durationSeconds = \"durationSeconds\" in config ? config[\"durationSeconds\"] : null;\r\n        var alwaysAnimate = \"animate\" in config && config[\"animate\"] === true;\r\n        var jumpIfFarAway = !alwaysAnimate;\r\n        var allowInterruption = \"allowInterruption\" in config ? config[\"allowInterruption\"] : true;\r\n\r\n        return _setView(animated, location, distance, headingDegrees, tiltDegrees, durationSeconds, jumpIfFarAway, allowInterruption);\r\n    };\r\n\r\n    this.setViewToBounds = (config) => {\r\n        var bounds = L.latLngBounds(config[\"bounds\"]);\r\n        var animated = \"animate\" in config ? config[\"animate\"] : true;\r\n        var allowInterruption = \"allowInterruption\" in config ? config[\"allowInterruption\"] : true;\r\n\r\n        return _setViewToBounds(\r\n            bounds._northEast,\r\n            bounds._southWest,\r\n            animated,\r\n            allowInterruption\r\n        );\r\n    };\r\n\r\n    this.getDistanceToInterest = () => _cameraApi_getDistanceToInterest(_emscriptenApiPointer);\r\n\r\n    this.getInterestLatLong = () => {\r\n        var latLong = [0, 0];\r\n        _emscriptenMemory.passDoubles(latLong, (resultArray, arraySize) => {\r\n                _cameraApi_getInterestLatLong(_emscriptenApiPointer, resultArray);\r\n                latLong = _emscriptenMemory.readDoubles(resultArray, 2);\r\n            });\r\n\r\n        return latLong;\r\n    };\r\n\r\n    this.getPitchDegrees = () => _cameraApi_getPitchDegrees(_emscriptenApiPointer);\r\n\r\n    this.getHeadingDegrees = () => _cameraApi_getHeadingDegrees(_emscriptenApiPointer);\r\n\r\n    this.setEventCallback = (callback) => {\r\n        _cameraApi_setEventCallback(_emscriptenApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.getDistanceFromZoomLevel = (zoomLevel) => _cameraApi_getDistanceFromZoomLevel(_emscriptenApiPointer, zoomLevel);\r\n\r\n    this.getZoomLevel = () => _cameraApi_getZoomLevel(_emscriptenApiPointer);\r\n\r\n    this.setVerticallyLocked = (isVerticallyLocked) => {\r\n        _cameraApi_setVerticallyLocked(_emscriptenApiPointer, isVerticallyLocked);\r\n    };\r\n}\r\n\r\nexport default EmscriptenCameraApi;\r\n","export function EmscriptenExpandFloorsApi(eegeoApiPointer, cwrap, emscriptenModule) {\r\n\r\n    var _eegeoApiPointer = eegeoApiPointer;\r\n    \r\n    var _getFloorParam = null;\r\n    var _setFloorParam = null;\r\n    var _expandIndoorMap = null;\r\n    var _collapseIndoorMap = null;\r\n    var _setCollapseStartCallback = null;\r\n    var _setCollapseCallback = null;\r\n    var _setCollapseEndCallback = null;\r\n    var _setExpandStartCallback = null;\r\n    var _setExpandCallback = null;\r\n    var _setExpandEndCallback = null;\r\n\r\n    this.expandIndoorMap = () => {\r\n        _expandIndoorMap = _expandIndoorMap || cwrap(\"expandIndoorMap\", \"number\", [\"number\"]);\r\n        return _expandIndoorMap(_eegeoApiPointer);\r\n    };\r\n\r\n    this.collapseIndoorMap = () => {\r\n        _collapseIndoorMap = _collapseIndoorMap || cwrap(\"collapseIndoorMap\", null, [\"number\"]);\r\n        return _collapseIndoorMap(_eegeoApiPointer);\r\n    };\r\n\r\n    this.getFloorParam = () => {\r\n        _getFloorParam = _getFloorParam || cwrap(\"getFloorParam\", null, [\"number\"]);\r\n        return _getFloorParam(_eegeoApiPointer);\r\n    };\r\n\r\n    this.setFloorParam = (value) => {\r\n        _setFloorParam = _setFloorParam || cwrap(\"setFloorParam\", null, [\"number\", \"number\"]);\r\n        return _setFloorParam(_eegeoApiPointer, value);\r\n    };\r\n\r\n    this.setCollapseStartCallback = (callback) => {\r\n        _setCollapseStartCallback = _setCollapseStartCallback || cwrap(\"setCollapseStartCallback\", null, [\"number\", \"number\"]);\r\n        _setCollapseStartCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.setCollapseCallback = (callback) => {\r\n        _setCollapseCallback = _setCollapseCallback || cwrap(\"setCollapseCallback\", null, [\"number\", \"number\"]);\r\n        _setCollapseCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.setCollapseEndCallback = (callback) => {\r\n        _setCollapseEndCallback = _setCollapseEndCallback || cwrap(\"setCollapseEndCallback\", null, [\"number\", \"number\"]);\r\n        _setCollapseEndCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.setExpandStartCallback = (callback) => {\r\n        _setExpandStartCallback = _setExpandStartCallback || cwrap(\"setExpandStartCallback\", null, [\"number\", \"number\"]);\r\n        _setExpandStartCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.setExpandCallback = (callback) => {\r\n        _setExpandCallback = _setExpandCallback || cwrap(\"setExpandCallback\", null, [\"number\", \"number\"]);\r\n        _setExpandCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.setExpandEndCallback = (callback) => {\r\n        _setExpandEndCallback = _setExpandEndCallback || cwrap(\"setExpandEndCallback\", null, [\"number\", \"number\"]);\r\n        _setExpandEndCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n}\r\n\r\nexport default EmscriptenExpandFloorsApi;\r\n","export function EmscriptenIndoorEntityApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n    var _indoorEntityApi_SetIndoorEntityPickedCallback = cwrap(\"indoorEntityApi_SetIndoorEntityPickedCallback\", null, [\"number\", \"number\"]);\r\n    var _indoorEntityApi_SetHighlightsWithBorderThickness = cwrap(\"indoorEntityApi_SetHighlightsWithBorderThickness\", null, [\"number\", \"string\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _indoorEntityApi_ClearHighlights = cwrap(\"indoorEntityApi_ClearHighlights\", null, [\"number\", \"string\", \"number\", \"number\"]);\r\n    var _indoorEntityApi_ClearAllHighlights = cwrap(\"indoorEntityApi_ClearAllHighlights\", null, [\"number\"]);\r\n    \r\n    var _indoorEntityPickedCallback = null;\r\n    \r\n\r\n    var _onIndoorEntityPicked = (idsPtr) => {\r\n        if (_indoorEntityPickedCallback !== null) {\r\n            var ids = _emscriptenMemory.stringifyPointer(idsPtr);\r\n            _indoorEntityPickedCallback(ids);\r\n        }\r\n    };\r\n\r\n    var _setHighlights = (ids, color, indoorMapId, borderThickness) => {\r\n        _emscriptenMemory.passStrings(ids, (resultStrings, stringArraySize) => {\r\n        _emscriptenMemory.passDoubles(color, (doubleArray, arraySize) => {\r\n                _indoorEntityApi_SetHighlightsWithBorderThickness(_emscriptenApiPointer, indoorMapId, resultStrings, stringArraySize, doubleArray, borderThickness);\r\n            });\r\n        });\r\n    };\r\n\r\n    var _clearHighlights = (ids, indoorMapId) => {\r\n        _emscriptenMemory.passStrings(ids, (resultStrings, stringArraySize) => {\r\n            _indoorEntityApi_ClearHighlights(_emscriptenApiPointer, indoorMapId, resultStrings, stringArraySize);\r\n        });\r\n    };\r\n\r\n    var _clearAllHighlights = () => {\r\n        _indoorEntityApi_ClearAllHighlights(_emscriptenApiPointer);\r\n    };\r\n\r\n\r\n    this.onInitialized = () => {\r\n        // register emscripten callbacks\r\n        _indoorEntityApi_SetIndoorEntityPickedCallback(_emscriptenApiPointer, emscriptenModule.addFunction(_onIndoorEntityPicked));\r\n    };\r\n\r\n    this.registerIndoorEntityPickedCallback = (callback) => {\r\n        _indoorEntityPickedCallback = callback;\r\n    };\r\n\r\n    this.setHighlights = (ids, color, indoorMapId, borderThickness) => {\r\n        if (indoorMapId === null || indoorMapId === undefined) {\r\n            return;\r\n        }\r\n\r\n        if (typeof ids === \"string\") {\r\n            ids = [ids];\r\n        }\r\n        _setHighlights(ids, color, indoorMapId, borderThickness);\r\n    };\r\n    \r\n    this.clearHighlights = (ids, indoorMapId) => {\r\n        if (ids === undefined) {\r\n            _clearAllHighlights();\r\n        }\r\n        else {\r\n            if (indoorMapId === null || indoorMapId === undefined) {\r\n                return;\r\n            }\r\n\r\n            if (typeof ids === \"string\") {\r\n                ids = [ids];\r\n            }\r\n            _clearHighlights(ids, indoorMapId);\r\n        }\r\n    };\r\n}\r\n\r\nexport default EmscriptenIndoorEntityApi;\r\n","import { factoryFor } from \"../../private/factoryFor\";\r\nimport { Vector4 } from \"../space\";\r\nimport type { BuildingHighlightOptions } from \"./building_highlight_options\";\r\nimport type { BuildingInformation } from \"./building_information\";\r\nimport type Map from \"../map\";\r\nimport { ColorArray } from \"../../types/color\";\r\n\r\nexport class BuildingHighlight {\r\n  private _options: BuildingHighlightOptions;\r\n  private _id: number | null;\r\n  private _map: Map | null;\r\n  private _color: Vector4;\r\n  private _buildingInformation: BuildingInformation | null;\r\n\r\n  constructor(options: BuildingHighlightOptions) {\r\n    this._options = options;\r\n    this._id = null;\r\n    this._map = null;\r\n    this._color = options.getColor();\r\n    this._buildingInformation = null;\r\n  }\r\n\r\n  getColor = (): Vector4 => new Vector4(this._color);\r\n\r\n  getOptions = (): BuildingHighlightOptions => this._options;\r\n\r\n  setColor = (color: ColorArray | Vector4): this => {\r\n    this._color = new Vector4(color as Vector4); // Both types work individually, not sure why the union is not accepted 🤷🏻‍♂️\r\n    if (this._map !== null) {\r\n      this._map.buildings._getImpl().notifyBuildingHighlightChanged(this);\r\n    }\r\n    return this;\r\n  };\r\n\r\n  getId = (): number | null => this._id;\r\n\r\n  addTo = (map: Map): this => {\r\n    if (this._map !== null) {\r\n      this.remove();\r\n    }\r\n    this._map = map;\r\n    this._map.buildings._getImpl().addBuildingHighlight(this);\r\n    return this;\r\n  };\r\n\r\n  remove = (): this => {\r\n    if (this._map !== null) {\r\n      this._map.buildings._getImpl().removeBuildingHighlight(this);\r\n      this._map = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  getBuildingInformation = (): BuildingInformation | null => this._buildingInformation;\r\n\r\n  /** @internal */\r\n  _setNativeHandle = (nativeId: number | null): void => {\r\n    this._id = nativeId;\r\n  };\r\n\r\n  /** @internal */\r\n  _setBuildingInformation = (buildingInformation: BuildingInformation): void => {\r\n    this._buildingInformation = buildingInformation;\r\n  };\r\n}\r\n\r\nexport const buildingHighlight = factoryFor(BuildingHighlight);\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../../private/factoryFor\";\r\nimport { ColorArray } from \"../../types/color\";\r\nimport { Vector4 } from \"../space\";\r\n\r\nexport enum BuildingHighlightSelectionType {\r\n  SELECT_AT_LOCATION = \"selectAtLocation\",\r\n  SELECT_AT_SCREEN_POINT = \"selectAtScreenPoint\",\r\n}\r\n\r\nexport class BuildingHighlightOptions {\r\n  private _selectionLocationLatLng: L.LatLng;\r\n  private _selectionScreenPoint: L.Point;\r\n  private _selectionMode: BuildingHighlightSelectionType;\r\n  private _color: ColorArray;\r\n  private _informationOnly: boolean;\r\n\r\n  constructor() {\r\n    this._selectionLocationLatLng = L.latLng([0.0, 0.0]);\r\n    this._selectionScreenPoint = L.point(0.0, 0.0);\r\n    this._selectionMode = BuildingHighlightSelectionType.SELECT_AT_LOCATION;\r\n    this._color = [255, 255, 0, 128];\r\n    this._informationOnly = false;\r\n  }\r\n\r\n  highlightBuildingAtLocation = (latLng: L.LatLng): this => {\r\n    this._selectionMode = BuildingHighlightSelectionType.SELECT_AT_LOCATION;\r\n    this._selectionLocationLatLng = L.latLng(latLng);\r\n    return this;\r\n  };\r\n\r\n  highlightBuildingAtScreenPoint = (screenPoint: L.Point): this => {\r\n    this._selectionMode = BuildingHighlightSelectionType.SELECT_AT_SCREEN_POINT;\r\n    this._selectionScreenPoint = L.point(screenPoint);\r\n    return this;\r\n  };\r\n\r\n  color = (color: ColorArray): this => {\r\n    this._color = color;\r\n    return this;\r\n  };\r\n\r\n  informationOnly = (): this => {\r\n    this._informationOnly = true;\r\n    return this;\r\n  };\r\n\r\n  getSelectionMode = (): BuildingHighlightSelectionType => {\r\n    return this._selectionMode;\r\n  };\r\n\r\n  getSelectionLocation = (): L.LatLng => {\r\n    return this._selectionLocationLatLng;\r\n  };\r\n\r\n  getSelectionScreenPoint = (): L.Point => {\r\n    return this._selectionScreenPoint;\r\n  };\r\n\r\n  getColor = (): Vector4 => {\r\n    return new Vector4(this._color);\r\n  };\r\n\r\n  getIsInformationOnly = (): boolean => {\r\n    return this._informationOnly;\r\n  };\r\n}\r\n\r\nexport const buildingHighlightOptions = factoryFor(BuildingHighlightOptions);\r\n","import type { BuildingContour } from \"./building_contour\";\r\nimport type { BuildingDimensions } from \"./building_dimensions\";\r\n\r\nexport class BuildingInformation {\r\n  private _buildingId: string;\r\n  private _buildingDimensions: BuildingDimensions;\r\n  private _buildingContours: BuildingContour[];\r\n\r\n  constructor(buildingId: string, buildingDimensions: BuildingDimensions, buildingContours: BuildingContour[]) {\r\n    this._buildingId = buildingId;\r\n    this._buildingDimensions = buildingDimensions;\r\n    this._buildingContours = buildingContours;\r\n  }\r\n\r\n  getBuildingId = (): string => this._buildingId;\r\n\r\n  getBuildingDimensions = (): BuildingDimensions => this._buildingDimensions;\r\n\r\n  getBuildingContours = (): BuildingContour[] => this._buildingContours;\r\n\r\n  toJson = (): {\r\n    building_id: string;\r\n    building_dimensions: ReturnType<BuildingDimensions[\"toJson\"]>;\r\n    building_contours: ReturnType<BuildingContour[\"toJson\"]>[];\r\n  } => ({\r\n    building_id: this._buildingId,\r\n    building_dimensions: this._buildingDimensions.toJson(),\r\n    building_contours: this._buildingContours.map((_x) => _x.toJson()),\r\n  });\r\n}\r\n","export class BuildingDimensions {\r\n  private _baseAltitude: number;\r\n  private _topAltitude: number;\r\n  private _centroid: L.LatLng;\r\n\r\n  constructor(baseAltitude: number, topAltitude: number, centroid: L.LatLng) {\r\n    this._baseAltitude = baseAltitude;\r\n    this._topAltitude = topAltitude;\r\n    this._centroid = centroid;\r\n  }\r\n\r\n  getBaseAltitude = (): number => this._baseAltitude;\r\n\r\n  getTopAltitude = (): number => this._topAltitude;\r\n\r\n  getCentroid = (): L.LatLng => this._centroid;\r\n\r\n  toJson = (): { base_altitude: number; top_altitude: number; centroid: L.LatLng } => ({\r\n    base_altitude: this._baseAltitude,\r\n    top_altitude: this._topAltitude,\r\n    centroid: this._centroid,\r\n  });\r\n}\r\n","export class BuildingContour {\r\n  private _bottomAltitude: number;\r\n  private _topAltitude: number;\r\n  private _points: L.LatLng[];\r\n\r\n  constructor(bottomAltitude: number, topAltitude: number, points: L.LatLng[]) {\r\n    this._bottomAltitude = bottomAltitude;\r\n    this._topAltitude = topAltitude;\r\n    this._points = points;\r\n  }\r\n\r\n  getBottomAltitude = (): number => this._bottomAltitude;\r\n\r\n  getTopAltitude = (): number => this._topAltitude;\r\n\r\n  getPoints = (): L.LatLng[] => this._points;\r\n\r\n  toJson = (): { bottom_altitude: number; top_altitude: number; points: L.LatLng[] } => ({\r\n    bottom_altitude: this._bottomAltitude,\r\n    top_altitude: this._topAltitude,\r\n    points: this._points,\r\n  });\r\n}\r\n","import { factoryFor } from \"../../private/factoryFor\";\r\nimport type Map from \"../map\";\r\nimport { MapId } from \"../map\";\r\nimport type { IndoorMapEntity } from \"./indoor_map_entity\";\r\n\r\nenum IndoorMapEntityInformationLoadStateType {\r\n  NONE = \"None\",\r\n  PARTIAL = \"Partial\",\r\n  COMPLETE = \"Complete\",\r\n}\r\n\r\nexport class IndoorMapEntityInformation {\r\n  private _nativeId: number | null;\r\n  private _map: Map | null;\r\n  private _indoorMapId: MapId;\r\n  private _indoorMapEntities: IndoorMapEntity[];\r\n  private _loadState: IndoorMapEntityInformationLoadStateType;\r\n\r\n  constructor(indoorMapId: MapId) {\r\n    this._nativeId = null;\r\n    this._map = null;\r\n    this._indoorMapId = indoorMapId;\r\n    this._indoorMapEntities = [];\r\n    this._loadState = IndoorMapEntityInformationLoadStateType.NONE;\r\n  }\r\n\r\n  getIndoorMapId = (): string => this._indoorMapId;\r\n\r\n  getIndoorMapEntities = (): IndoorMapEntity[] => this._indoorMapEntities;\r\n\r\n  getLoadState = (): IndoorMapEntityInformationLoadStateType => this._loadState;\r\n\r\n  /**\r\n   * Returns the auto-incrementing unique id of this IndoorMapEntityInformation object.\r\n   */\r\n  getId = (): number | null => this._nativeId;\r\n\r\n  /**\r\n   * Returns the auto-incrementing unique id of this IndoorMapEntityInformation object.\r\n   * @deprecated use {@link IndoorMapEntityInformation.getId}\r\n   * @returns {number}\r\n   */\r\n  getNativeId = (): number | null => this._nativeId;\r\n\r\n  addTo = (map: Map): this => {\r\n    if (this._map !== null) {\r\n      this.remove();\r\n    }\r\n    this._map = map;\r\n    this._map.indoorMapEntities._getImpl().addIndoorMapEntityInformation(this);\r\n    return this;\r\n  };\r\n\r\n  remove = (): this => {\r\n    if (this._map !== null) {\r\n      this._map.indoorMapEntities._getImpl().removeIndoorMapEntityInformation(this);\r\n      this._map = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /** @internal */\r\n  _setNativeHandle = (nativeId: number): void => {\r\n    this._nativeId = nativeId;\r\n  };\r\n\r\n  /** @internal */\r\n  _setData = (data: { IndoorMapEntities: IndoorMapEntity[]; LoadState: 0 | 1 | 2 }): void => {\r\n    this._indoorMapEntities = data.IndoorMapEntities;\r\n\r\n    switch (data.LoadState) {\r\n      case 0:\r\n        this._loadState = IndoorMapEntityInformationLoadStateType.NONE;\r\n        break;\r\n      case 1:\r\n        this._loadState = IndoorMapEntityInformationLoadStateType.PARTIAL;\r\n        break;\r\n      case 2:\r\n        this._loadState = IndoorMapEntityInformationLoadStateType.COMPLETE;\r\n        break;\r\n    }\r\n  };\r\n}\r\n\r\nexport const indoorMapEntityInformation = factoryFor(IndoorMapEntityInformation);\r\n","import L from \"leaflet\";\r\nimport { BuildingHighlightSelectionType, BuildingDimensions, BuildingContour, BuildingInformation } from \"../../public/buildings\";\r\n\r\nexport function EmscriptenBuildingsApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n    var _buildingsApi_SetBuildingHighlightChangedCallback = cwrap(\"buildingsApi_SetBuildingHighlightChangedCallback\", null, [\"number\", \"number\"]);\r\n    var _buildingsApi_CreateHighlightAtLocation = cwrap(\"buildingsApi_CreateHighlightAtLocation\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _buildingsApi_CreateHighlightAtScreenPoint = cwrap(\"buildingsApi_CreateHighlightAtScreenPoint\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _buildingsApi_DestroyHighlight = cwrap(\"buildingsApi_DestroyHighlight\", null, [\"number\", \"number\"]);\r\n    var _buildingsApi_SetHighlightColor = cwrap(\"buildingsApi_SetHighlightColor\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _buildingsApi_TryGetBuildingInformationBufferSizes = cwrap(\"buildingsApi_TryGetBuildingInformationBufferSizes\", \"number\", [\"number\", \"number\", \"number\", \"number\"]);\r\n    var _buildingsApi_TryGetBuildingInformation = cwrap(\"buildingsApi_TryGetBuildingInformation\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _buildingsApi_TryFindIntersectionWithBuilding = cwrap(\"buildingsApi_TryFindIntersectionWithBuilding\", \"number\", [\"number\", \"number\", \"number\"]);\r\n\r\n    this.registerBuildingInformationReceivedCallback = (callback) => {\r\n        _buildingsApi_SetBuildingHighlightChangedCallback(_emscriptenApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.createBuildingHighlight = (buildingHighlight) => {\r\n        var buildingHighlightId = 0;\r\n        var options = buildingHighlight.getOptions();\r\n        var color = buildingHighlight.getColor();\r\n\r\n        var shouldCreateView = options.getIsInformationOnly() ? 0 : 1;\r\n\r\n        if (options.getSelectionMode() === BuildingHighlightSelectionType.SELECT_AT_LOCATION) {\r\n            var latLng = options.getSelectionLocation();\r\n            buildingHighlightId = _buildingsApi_CreateHighlightAtLocation(\r\n                _emscriptenApiPointer,\r\n                latLng.lat,\r\n                latLng.lng,\r\n                color.x / 255,\r\n                color.y / 255,\r\n                color.z / 255,\r\n                color.w / 255,\r\n                shouldCreateView\r\n            );\r\n        }\r\n        else {\r\n            var point = options.getSelectionScreenPoint();\r\n            buildingHighlightId = _buildingsApi_CreateHighlightAtScreenPoint(\r\n                _emscriptenApiPointer,\r\n                point.x,\r\n                point.y,\r\n                color.x / 255,\r\n                color.y / 255,\r\n                color.z / 255,\r\n                color.w / 255,\r\n                shouldCreateView\r\n            );\r\n        }\r\n\r\n        return buildingHighlightId;\r\n    };\r\n\r\n\r\n    this.destroyBuildingHighlight = (buildingHighlightId) => {\r\n        _buildingsApi_DestroyHighlight(_emscriptenApiPointer, buildingHighlightId);\r\n    };\r\n\r\n    this.setHighlightColor = (buildingHighlightId, color) => {\r\n        _buildingsApi_SetHighlightColor(_emscriptenApiPointer, buildingHighlightId, color.x / 255, color.y / 255, color.z / 255, color.w / 255);\r\n    };\r\n\r\n    this.tryGetBuildingInformation = (buildingHighlightId) => {\r\n        var buildingIdSizeBuf = _emscriptenMemory.createInt32Buffer(1);\r\n        var contourPointsSizeBuf = _emscriptenMemory.createInt32Buffer(1);\r\n        var buildingContoursSizeBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n        var success = _buildingsApi_TryGetBuildingInformationBufferSizes(_emscriptenApiPointer, buildingHighlightId, buildingIdSizeBuf.ptr, contourPointsSizeBuf.ptr, buildingContoursSizeBuf.ptr);\r\n\r\n        var buildingIdSize = _emscriptenMemory.consumeBufferToArray(buildingIdSizeBuf)[0];\r\n        var contourPointsSize = _emscriptenMemory.consumeBufferToArray(contourPointsSizeBuf)[0];\r\n        var buildingContoursSize = _emscriptenMemory.consumeBufferToArray(buildingContoursSizeBuf)[0];\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var buildingIdBuf = _emscriptenMemory.createInt8Buffer(buildingIdSize);\r\n        var baseAltitudeBuf = _emscriptenMemory.createDoubleBuffer(1);\r\n        var topAltitudeBuf = _emscriptenMemory.createDoubleBuffer(1);\r\n        var centroidBuf = _emscriptenMemory.createBufferFromArray([0.0, 0.0], _emscriptenMemory.createDoubleBuffer);\r\n\r\n        // building contours fetched as struct of arrays\r\n        var contourPointsLatLngDoublesBuf = _emscriptenMemory.createDoubleBuffer(contourPointsSize * 2);\r\n        var contourPointCountsBuf = _emscriptenMemory.createInt32Buffer(buildingContoursSize);\r\n        var contourBottomAltitudeBuf = _emscriptenMemory.createDoubleBuffer(buildingContoursSize);\r\n        var contourTopAltitudeBuf = _emscriptenMemory.createDoubleBuffer(buildingContoursSize);\r\n\r\n\r\n        success = _buildingsApi_TryGetBuildingInformation(\r\n            _emscriptenApiPointer,\r\n            buildingHighlightId,\r\n            buildingIdBuf.ptr,\r\n            buildingIdSize,\r\n            baseAltitudeBuf.ptr,\r\n            topAltitudeBuf.ptr,\r\n            centroidBuf.ptr,\r\n            contourPointsLatLngDoublesBuf.ptr,\r\n            contourPointsLatLngDoublesBuf.element_count,\r\n            contourPointCountsBuf.ptr,\r\n            contourPointCountsBuf.element_count,\r\n            contourBottomAltitudeBuf.ptr,\r\n            contourBottomAltitudeBuf.element_count,\r\n            contourTopAltitudeBuf.ptr,\r\n            contourTopAltitudeBuf.element_count\r\n        );\r\n\r\n        var buildingId = _emscriptenMemory.consumeUtf8BufferToString(buildingIdBuf);\r\n        var baseAltitude = _emscriptenMemory.consumeBufferToArray(baseAltitudeBuf);\r\n        var topAltitude = _emscriptenMemory.consumeBufferToArray(topAltitudeBuf);\r\n        var centroid = L.latLng(_emscriptenMemory.consumeBufferToArray(centroidBuf));\r\n\r\n        var buildingDimensions = new BuildingDimensions(baseAltitude, topAltitude, centroid);\r\n\r\n        var contourPointsLatLngDoubles = _emscriptenMemory.consumeBufferToArray(contourPointsLatLngDoublesBuf);\r\n        var contourPointCounts = _emscriptenMemory.consumeBufferToArray(contourPointCountsBuf);\r\n        var contourBottomAltitudes = _emscriptenMemory.consumeBufferToArray(contourBottomAltitudeBuf);\r\n        var contourTopAltitudes = _emscriptenMemory.consumeBufferToArray(contourTopAltitudeBuf);\r\n\r\n        var buildingContours = [];\r\n        var pointBufferIndex = 0;\r\n        for (var contourIndex = 0; contourIndex < contourPointCountsBuf.element_count; ++contourIndex) {\r\n            var pointCount = contourPointCounts[contourIndex];\r\n            var points = [];\r\n            for (var i = 0; i < pointCount; ++i) {\r\n                var lat = contourPointsLatLngDoubles[pointBufferIndex++];\r\n                var lng = contourPointsLatLngDoubles[pointBufferIndex++];\r\n                points.push(L.latLng(lat, lng));\r\n            }\r\n            var contour = new BuildingContour(\r\n                contourBottomAltitudes[contourIndex],\r\n                contourTopAltitudes[contourIndex],\r\n                points);\r\n            buildingContours.push(contour);\r\n        }\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        return new BuildingInformation(buildingId, buildingDimensions, buildingContours);\r\n    };\r\n\r\n    this.findIntersectionWithBuilding = (ray) => {\r\n        var rayElements = [ray.origin.x, ray.origin.y, ray.origin.z, ray.direction.x, ray.direction.y, ray.direction.z];\r\n\r\n        var rayBuffer = _emscriptenMemory.createBufferFromArray(rayElements, _emscriptenMemory.createDoubleBuffer);\r\n\r\n        var intersectionLatLngAltBuffer = _emscriptenMemory.createDoubleBuffer(3);\r\n\r\n        var didIntersect = _buildingsApi_TryFindIntersectionWithBuilding(_emscriptenApiPointer, rayBuffer.ptr, intersectionLatLngAltBuffer.ptr);\r\n\r\n        _emscriptenMemory.freeBuffer(rayBuffer);\r\n\r\n        var resultArray = _emscriptenMemory.consumeBufferToArray(intersectionLatLngAltBuffer);\r\n\r\n        return {\r\n            found: didIntersect,\r\n            point: L.latLng(resultArray)\r\n        };\r\n    };\r\n}\r\n\r\nexport default EmscriptenBuildingsApi;\r\n","import { Vector3 } from \"../../public/space\";\r\nimport { colorToRgba32 } from \"./emscripten_interop_utils.js\";\r\n\r\nexport function EmscriptenRenderingApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _renderingApi_SetMapCollapsed = cwrap(\"renderingApi_SetMapCollapsed\", null, [\"number\", \"number\"]);\r\n    var _renderingApi_SetClearColor = cwrap(\"renderingApi_SetClearColor\", null, [\"number\", \"number\"]);\r\n    var _renderingApi_GetCameraRelativePosition = cwrap(\"renderingApi_GetCameraRelativePosition\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _renderingApi_GetCameraProjectionMatrix = cwrap(\"renderingApi_GetCameraProjectionMatrix\", null, [\"number\", \"number\", \"number\"]);\r\n    var _renderingApi_GetCameraOrientationMatrix = cwrap(\"renderingApi_GetCameraOrientationMatrix\", null, [\"number\", \"number\", \"number\"]);\r\n    var _renderingApi_GetLightingData = cwrap(\"renderingApi_GetLightingData\", null, [\"number\", \"number\", \"number\"]);\r\n    var _renderingApi_GetNorthFacingOrientationMatrix = cwrap(\"renderingApi_GetNorthFacingOrientationMatrix\", null, [\"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n\r\n    this.setMapCollapsed = (isMapCollapsed) => {\r\n        _renderingApi_SetMapCollapsed(_emscriptenApiPointer, isMapCollapsed ? 1 : 0);\r\n    };\r\n\r\n    this.setClearColor = (clearColor) => {\r\n        var clearColorRGBA32 = colorToRgba32(clearColor);\r\n        _renderingApi_SetClearColor(_emscriptenApiPointer, clearColorRGBA32);\r\n    };\r\n\r\n    this.getCameraRelativePosition = (latLng) => {\r\n        var renderPosition = new Array(3);\r\n        _emscriptenMemory.passDoubles(renderPosition, (resultArray, arraySize) => {\r\n            _renderingApi_GetCameraRelativePosition(_emscriptenApiPointer, latLng.lat, latLng.lng, latLng.alt || 0.0, arraySize, resultArray);\r\n            renderPosition = _emscriptenMemory.readDoubles(resultArray, arraySize);\r\n        });\r\n        return new Vector3(renderPosition);\r\n    };\r\n\r\n    this.getNorthFacingOrientationMatrix = (latLng) => {\r\n        var orientation = new Array(16);\r\n        _emscriptenMemory.passDoubles(orientation, (resultArray, arraySize) => {\r\n            _renderingApi_GetNorthFacingOrientationMatrix(_emscriptenApiPointer, latLng.lat, latLng.lng, arraySize, resultArray);\r\n            orientation = _emscriptenMemory.readDoubles(resultArray, arraySize);\r\n        });\r\n        return orientation;\r\n    };\r\n\r\n    this.getCameraProjectionMatrix = () => {\r\n        var projection = new Array(16);\r\n        _emscriptenMemory.passDoubles(projection, (resultArray, arraySize) => {\r\n            _renderingApi_GetCameraProjectionMatrix(_emscriptenApiPointer, arraySize, resultArray);\r\n            projection = _emscriptenMemory.readDoubles(resultArray, arraySize);\r\n        });\r\n        return projection;\r\n    };\r\n\r\n    this.getCameraOrientationMatrix = () => {\r\n        var orientation = new Array(16);\r\n        _emscriptenMemory.passDoubles(orientation, (resultArray, arraySize) => {\r\n            _renderingApi_GetCameraOrientationMatrix(_emscriptenApiPointer, arraySize, resultArray);\r\n            orientation = _emscriptenMemory.readDoubles(resultArray, arraySize);\r\n        });\r\n        return orientation;\r\n    };\r\n\r\n    this.getLightingData = () => {\r\n        var lightingData = new Array(21);\r\n        _emscriptenMemory.passDoubles(lightingData, (resultArray, arraySize) => {\r\n            _renderingApi_GetLightingData(_emscriptenApiPointer, arraySize, resultArray);\r\n            lightingData = _emscriptenMemory.readDoubles(resultArray, arraySize);\r\n        });\r\n\r\n        var lighting = {\r\n            key: {\r\n                direction: new Vector3(lightingData[0], lightingData[1], lightingData[2]),\r\n                color: new Vector3(lightingData[9], lightingData[10], lightingData[11])\r\n            },\r\n            back: {\r\n                direction: new Vector3(lightingData[3], lightingData[4], lightingData[5]),\r\n                color: new Vector3(lightingData[12], lightingData[13], lightingData[14])\r\n            },\r\n            fill: {\r\n                direction: new Vector3(lightingData[6], lightingData[7], lightingData[8]),\r\n                color: new Vector3(lightingData[15], lightingData[16], lightingData[17])\r\n            },\r\n            ambient: {\r\n                color: new Vector3(lightingData[18], lightingData[19], lightingData[20])\r\n            }\r\n        };\r\n        return lighting;\r\n    };\r\n}\r\n\r\nexport default EmscriptenRenderingApi;\r\n","import L from \"leaflet\";\r\nexport function EmscriptenLayerPointMappingApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n    \r\n    var _createPointMapping = null;\r\n    var _createPointMappingWithFloorIndex = null;\r\n    var _removePointMapping = null;\r\n    var _getPointsOnMapForLayer = null;\r\n\r\n    this._createLatLngsNumberArray = function(latLngs) {\r\n        var latLngsNumberArray = new Array(latLngs.length * 2);\r\n\r\n        for(var i = 0; i < latLngs.length; i++) {\r\n            var latLng = latLngs[i];\r\n\r\n            var destBaseIndex = i * 2;\r\n            latLngsNumberArray[destBaseIndex] = latLng.lat;\r\n            latLngsNumberArray[destBaseIndex + 1] = latLng.lng;\r\n        }\r\n\r\n        return latLngsNumberArray;\r\n    };\r\n\r\n    this.createPointMapping = (layerId, elevation, elevationModeInt, indoorMapId, indoorMapFloorId, latLngs) => {\r\n        _createPointMapping = _createPointMapping || cwrap(\"createLayerMapping\", null, [\"number\", \"number\", \"number\", \"number\", \"string\", \"number\", \"number\", \"number\", \"number\"]);\r\n              \r\n        var latLngsNumberArray = this._createLatLngsNumberArray(latLngs);\r\n        \r\n        _emscriptenMemory.passDoubles(latLngsNumberArray, (resultArray, arraySize) => {\r\n            _createPointMapping(\r\n                _emscriptenApiPointer, layerId, elevation, elevationModeInt, indoorMapId, indoorMapId.length, indoorMapFloorId, resultArray, arraySize);\r\n        });\r\n    };\r\n\r\n    this.createPointMappingWithFloorIndex = (layerId, elevation, elevationModeInt, indoorMapId, indoorMapFloorIndex, latLngs) => {\r\n        _createPointMappingWithFloorIndex = _createPointMappingWithFloorIndex || \r\n            cwrap(\"createLayerMappingWithFloorIndex\", null, [\"number\", \"number\", \"number\", \"number\", \"string\", \"number\", \"number\", \"number\", \"number\"]);\r\n              \r\n        var latLngsNumberArray = this._createLatLngsNumberArray(latLngs);\r\n        \r\n        _emscriptenMemory.passDoubles(latLngsNumberArray, (resultArray, arraySize) => {\r\n            _createPointMappingWithFloorIndex(\r\n                _emscriptenApiPointer, layerId, elevation, elevationModeInt, indoorMapId, indoorMapId.length, indoorMapFloorIndex, resultArray, arraySize);\r\n        });        \r\n    };\r\n\r\n    this.removePointMapping = (layerId) => {\r\n        _removePointMapping = _removePointMapping || cwrap(\"removeLayerMapping\", null, [\"number\", \"number\"]);\r\n\r\n        _removePointMapping(_emscriptenApiPointer, layerId);\r\n    };\r\n\r\n    this.getLatLngsForLayer = (layerId, latLngCount) => {\r\n        _getPointsOnMapForLayer = _getPointsOnMapForLayer || cwrap(\"getPointsOnMapForLayer\", \"number\", [\"number\", \"number\", \"number\"]);\r\n        var resultLatLngAltDoubles = new Array(latLngCount * 3);\r\n\r\n        _emscriptenMemory.passDoubles(resultLatLngAltDoubles, (resultArray, arraySize) => {\r\n            var expectedArrayLength = _getPointsOnMapForLayer(_emscriptenApiPointer, layerId, resultArray);\r\n\r\n            if (resultLatLngAltDoubles.length !== expectedArrayLength) {\r\n                throw new Error(\"_getPointsOnMapForLayer : unexpected array length. Expected '\" + expectedArrayLength + \"' but was '\" + resultLatLngAltDoubles.length + \"'.\");\r\n            }\r\n\r\n            resultLatLngAltDoubles = _emscriptenMemory.readDoubles(resultArray, expectedArrayLength);\r\n        });\r\n\r\n        var resultLatLngAlts = new Array(latLngCount);\r\n        var resultIndex = 0;\r\n\r\n        for(var i = 0; i < resultLatLngAltDoubles.length; i += 3) {\r\n            var lat = resultLatLngAltDoubles[i];\r\n            var lng = resultLatLngAltDoubles[i + 1];\r\n            var alt = resultLatLngAltDoubles[i + 2];\r\n            \r\n            resultLatLngAlts[resultIndex++] = L.latLng(lat, lng, alt);\r\n        }\r\n\r\n        return resultLatLngAlts;\r\n    };\r\n}\r\n\r\nexport default EmscriptenLayerPointMappingApi;\r\n","import { factoryFor } from \"../private/factoryFor\";\r\nimport elevationMode, { ElevationMode } from \"../types/elevationMode\";\r\nimport type { MapId, MapFloorId } from \"./map\";\r\n\r\nexport class IndoorMapEntitySetProp {\r\n  private _indoorMapId: MapId;\r\n  private _floorId: MapFloorId;\r\n  private _name: string;\r\n  private _geometryId: string;\r\n  private _location: L.LatLng;\r\n  private _elevation: number;\r\n  private _elevationMode: elevationMode;\r\n  private _headingDegrees: number;\r\n\r\n  constructor(\r\n    indoorMapId: MapId,\r\n    floorId: MapFloorId,\r\n    name: string,\r\n    geometryId: string,\r\n    location: L.LatLng,\r\n    elevation: number,\r\n    elevationMode: ElevationMode,\r\n    headingDegrees: number\r\n  ) {\r\n    this._indoorMapId = indoorMapId;\r\n    this._floorId = floorId;\r\n    this._name = name;\r\n    this._geometryId = geometryId;\r\n    this._location = location;\r\n    this._elevation = elevation;\r\n    this._elevationMode = elevationMode;\r\n    this._headingDegrees = headingDegrees;\r\n  }\r\n\r\n  getIndoorMapId(): MapId {\r\n    return this._indoorMapId;\r\n  }\r\n\r\n  getIndoorMapFloorId(): MapFloorId {\r\n    return this._floorId;\r\n  }\r\n\r\n  getName(): string {\r\n    return this._name;\r\n  }\r\n\r\n  getGeometryId(): string {\r\n    return this._geometryId;\r\n  }\r\n\r\n  getLocation(): L.LatLng {\r\n    return this._location;\r\n  }\r\n\r\n  getElevation(): number {\r\n    return this._elevation;\r\n  }\r\n\r\n  getElevationMode(): elevationMode {\r\n    return this._elevationMode;\r\n  }\r\n\r\n  getHeadingDegrees(): number {\r\n    return this._headingDegrees;\r\n  }\r\n}\r\n\r\nexport const indoorMapEntitySetProp = factoryFor(IndoorMapEntitySetProp);\r\n","import L from \"leaflet\";\r\nimport { getElevationModeInt, ElevationModeType } from \"../elevation_mode\";\r\nimport { IndoorMapEntitySetProp } from \"../../public/entity_set_prop\";\r\n\r\nexport function EmscriptenPropsApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _propsApi_createProp = null;\r\n    var _propsApi_createProps = null;\r\n    var _propsApi_destroyProp = null;\r\n    var _propsApi_destroyProps = null;\r\n    var _propsApi_propExists = null;\r\n    var _propsApi_setLocation = null;\r\n    var _propsApi_setElevation = null;\r\n    var _propsApi_setElevationMode = null;\r\n    var _propsApi_setGeometryId = null;\r\n    var _propsApi_setHeadingDegrees = null;\r\n    var _propsApi_setAutomaticIndoorMapPopulationEnabled = null;\r\n    var _propsApi_isAutomaticIndoorMapPopulationEnabled = null;\r\n    var _propsApi_getIndoorMapPropCount = null;\r\n    var _propsApi_tryGetIndoorMapPropDataBufferSizes = null;\r\n    var _propsApi_tryGetIndoorMapPropData = null;\r\n    var _propsApi_setIndoorMapPopulationServiceUrl = null;\r\n    var _propsApi_setIndoorMapEntitySetPropsLoadedCallback = null;\r\n    var _propsApi_setIndoorMapPopulationRequestCompletedCallback = null;\r\n\r\n    var _indoorMapEntitySetPropsLoadedCallback = null;\r\n\r\n    this.onInitialized = () => {\r\n        this.registerIndoorMapEntitySetPropsLoadedHandler(indoorMapEntitySetPropsLoadedHandler);\r\n    };\r\n\r\n    this.createProp = (indoorMapId, floorId, name, latitude, longitude, elevation, elevationModeString, headingDegrees, geometryId) => {\r\n        _propsApi_createProp = _propsApi_createProp || cwrap(\"propsApi_createProp\", \"number\", [\"number\", \"string\", \"number\", \"string\", \"number\", \"number\", \"number\", \"number\", \"number\", \"string\"]);\r\n        var elevationModeInt = getElevationModeInt(elevationModeString);\r\n        var propId = _propsApi_createProp(_emscriptenApiPointer, indoorMapId, floorId, name, latitude, longitude, elevation, elevationModeInt, headingDegrees, geometryId);\r\n        return propId;\r\n    };\r\n\r\n    this.createProps = (indoorMapIdArray, floorIdArray, nameArray, latitudeArray, longitudeArray, elevationArray, elevationModeArray, headingDegreesArray, geometryIdArray) => {\r\n        var propCount = indoorMapIdArray.length;\r\n\r\n        if (floorIdArray.length !== propCount ||\r\n            nameArray.length !== propCount ||\r\n            latitudeArray.length !== propCount ||\r\n            longitudeArray.length !== propCount ||\r\n            elevationArray.length !== propCount ||\r\n            elevationModeArray.length !== propCount ||\r\n            headingDegreesArray.length !== propCount ||\r\n            geometryIdArray.length !== propCount) {\r\n            throw new Error(\"Unequal array element counts in call to createProps.\");\r\n        }\r\n\r\n        _propsApi_createProps = _propsApi_createProps || cwrap(\"propsApi_createProps\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n        var out_propIdsBuffer = _emscriptenMemory.createInt32Buffer(propCount);\r\n\r\n        var elevationModeIntArray = [];\r\n        elevationModeArray.forEach(function (elevationModeString) { elevationModeIntArray.push(getElevationModeInt(elevationModeString)); });\r\n\r\n        var floorIdBuffer = _emscriptenMemory.createBufferFromArray(floorIdArray, _emscriptenMemory.createInt32Buffer);\r\n        var latitudeBuffer = _emscriptenMemory.createBufferFromArray(latitudeArray, _emscriptenMemory.createDoubleBuffer);\r\n        var longitudeBuffer = _emscriptenMemory.createBufferFromArray(longitudeArray, _emscriptenMemory.createDoubleBuffer);\r\n        var elevationBuffer = _emscriptenMemory.createBufferFromArray(elevationArray, _emscriptenMemory.createDoubleBuffer);\r\n        var elevationModeBuffer = _emscriptenMemory.createBufferFromArray(elevationModeIntArray, _emscriptenMemory.createInt32Buffer);\r\n        var headingDegreesBuffer = _emscriptenMemory.createBufferFromArray(headingDegreesArray, _emscriptenMemory.createDoubleBuffer);\r\n\r\n        _emscriptenMemory.passStrings(indoorMapIdArray, (indoorMapIdArrayPtr, indoorMapIdArraySize) => {\r\n            _emscriptenMemory.passStrings(nameArray, (nameArrayPtr, nameArraySize) => {\r\n                _emscriptenMemory.passStrings(geometryIdArray, (geometryIdArrayPtr, geometryIdArraySize) => {\r\n                    _propsApi_createProps(\r\n                        _emscriptenApiPointer,\r\n                        propCount,\r\n                        indoorMapIdArrayPtr,\r\n                        floorIdBuffer.ptr,\r\n                        nameArrayPtr,\r\n                        latitudeBuffer.ptr,\r\n                        longitudeBuffer.ptr,\r\n                        elevationBuffer.ptr,\r\n                        elevationModeBuffer.ptr,\r\n                        headingDegreesBuffer.ptr,\r\n                        geometryIdArrayPtr,\r\n                        out_propIdsBuffer.ptr\r\n                    );\r\n                });\r\n            });\r\n        });\r\n\r\n        _emscriptenMemory.freeBuffer(headingDegreesBuffer);\r\n        _emscriptenMemory.freeBuffer(elevationModeBuffer);\r\n        _emscriptenMemory.freeBuffer(elevationBuffer);\r\n        _emscriptenMemory.freeBuffer(latitudeBuffer);\r\n        _emscriptenMemory.freeBuffer(longitudeBuffer);\r\n        _emscriptenMemory.freeBuffer(floorIdBuffer);\r\n\r\n        return _emscriptenMemory.consumeBufferToArray(out_propIdsBuffer);\r\n    };\r\n\r\n    this.destroyProp = (propId) => {\r\n        _propsApi_destroyProp = _propsApi_destroyProp || cwrap(\"propsApi_destroyProp\", null, [\"number\", \"number\"]);\r\n        _propsApi_destroyProp(_emscriptenApiPointer, propId);\r\n    };\r\n\r\n    this.destroyProps = (propIdArray) => {\r\n        _propsApi_destroyProps = _propsApi_destroyProps || cwrap(\"propsApi_destroyProps\", null, [\"number\", \"number\", \"number\"]);\r\n\r\n        _emscriptenMemory.passInt32s(propIdArray, (propIdArrayPtr, propIdArraySize) => {\r\n            _propsApi_destroyProps(_emscriptenApiPointer, propIdArrayPtr, propIdArraySize);\r\n        });\r\n    };\r\n\r\n    this.propExists = (propId) => {\r\n        _propsApi_propExists = _propsApi_propExists || cwrap(\"propsApi_propExists\", \"number\", [\"number\", \"number\"]);\r\n        return _propsApi_propExists(_emscriptenApiPointer, propId);\r\n    };\r\n\r\n    this.setLocation = (propId, latitudeDegrees, longitudeDegrees) => {\r\n        _propsApi_setLocation = _propsApi_setLocation || cwrap(\"propsApi_setLocation\", null, [\"number\", \"number\", \"number\", \"number\"]);\r\n        _propsApi_setLocation(_emscriptenApiPointer, propId, latitudeDegrees, longitudeDegrees);\r\n    };\r\n\r\n    this.setElevation = (propId, elevation) => {\r\n        _propsApi_setElevation = _propsApi_setElevation || cwrap(\"propsApi_setElevation\", null, [\"number\", \"number\", \"number\"]);\r\n        _propsApi_setElevation(_emscriptenApiPointer, propId, elevation);\r\n    };\r\n\r\n    this.setElevationMode = (propId, elevationModeString) => {\r\n        _propsApi_setElevationMode = _propsApi_setElevationMode || cwrap(\"propsApi_setElevationMode\", null, [\"number\", \"number\", \"number\"]);\r\n        var elevationModeInt = getElevationModeInt(elevationModeString);\r\n        _propsApi_setElevationMode(_emscriptenApiPointer, propId, elevationModeInt);\r\n    };\r\n\r\n    this.setGeometryId = (propId, geometryId) => {\r\n        _propsApi_setGeometryId = _propsApi_setGeometryId || cwrap(\"propsApi_setGeometryId\", null, [\"number\", \"number\", \"string\"]);\r\n        _propsApi_setGeometryId(_emscriptenApiPointer, propId, geometryId);\r\n    };\r\n\r\n    this.setHeadingDegrees = (propId, headingDegrees) => {\r\n        _propsApi_setHeadingDegrees = _propsApi_setHeadingDegrees || cwrap(\"propsApi_setHeadingDegrees\", null, [\"number\", \"number\", \"number\", \"number\"]);\r\n        _propsApi_setHeadingDegrees(_emscriptenApiPointer, propId, headingDegrees);\r\n    };\r\n\r\n    this.setAutomaticIndoorMapPopulationEnabled = (enabled) => {\r\n        _propsApi_setAutomaticIndoorMapPopulationEnabled = _propsApi_setAutomaticIndoorMapPopulationEnabled || cwrap(\"propsApi_setAutomaticIndoorMapPopulationEnabled\", null, [\"number\", \"number\"]);\r\n        _propsApi_setAutomaticIndoorMapPopulationEnabled(_emscriptenApiPointer, enabled);\r\n    };\r\n\r\n    this.isAutomaticIndoorMapPopulationEnabled = () => {\r\n        _propsApi_isAutomaticIndoorMapPopulationEnabled = _propsApi_isAutomaticIndoorMapPopulationEnabled || cwrap(\"propsApi_isAutomaticIndoorMapPopulationEnabled\", \"number\", [\"number\"]);\r\n        return _propsApi_isAutomaticIndoorMapPopulationEnabled(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.tryGetIndoorMapEntitySetProps = (indoorMapId, floorId) => {\r\n        _propsApi_getIndoorMapPropCount = _propsApi_getIndoorMapPropCount || cwrap(\"propsApi_getIndoorMapPropCount\", \"number\", [\"number\", \"string\", \"number\"]);\r\n        var propCount = _propsApi_getIndoorMapPropCount(_emscriptenApiPointer, indoorMapId, floorId);\r\n\r\n        var indoorMapPerPropNameSizesBuf = _emscriptenMemory.createInt32Buffer(propCount);\r\n        var indoorMapPerPropModelSizesBuf = _emscriptenMemory.createInt32Buffer(propCount);\r\n        var indoorMapPropBufferSizesBuf = _emscriptenMemory.createInt32Buffer(2);\r\n\r\n        _propsApi_tryGetIndoorMapPropDataBufferSizes = _propsApi_tryGetIndoorMapPropDataBufferSizes || cwrap(\"propsApi_tryGetIndoorMapPropDataBufferSizes\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n        var success = _propsApi_tryGetIndoorMapPropDataBufferSizes(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            floorId,\r\n            propCount,\r\n            indoorMapPerPropNameSizesBuf.ptr,\r\n            indoorMapPerPropModelSizesBuf.ptr,\r\n            indoorMapPropBufferSizesBuf.ptr);\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var indoorMapPerPropNameSizes = _emscriptenMemory.consumeBufferToArray(indoorMapPerPropNameSizesBuf);\r\n        var indoorMapPerPropModelSizes = _emscriptenMemory.consumeBufferToArray(indoorMapPerPropModelSizesBuf);\r\n        var indoorMapPropBufferSizes = _emscriptenMemory.consumeBufferToArray(indoorMapPropBufferSizesBuf);\r\n\r\n        var indoorMapPropNameTotalSize = indoorMapPropBufferSizes[0];\r\n        var indoorMapPropModelTotalSize = indoorMapPropBufferSizes[1];\r\n\r\n        var indoorMapPropStringNamesBuf = _emscriptenMemory.createInt8Buffer(indoorMapPropNameTotalSize);\r\n        var indoorMapPropStringModelsBuf = _emscriptenMemory.createInt8Buffer(indoorMapPropModelTotalSize);\r\n        var indoorMapPropLatLngBuf = _emscriptenMemory.createDoubleBuffer(propCount * 2);\r\n        var indoorMapPropHeightBuf = _emscriptenMemory.createDoubleBuffer(propCount);\r\n        var indoorMapPropOrientationBuf = _emscriptenMemory.createDoubleBuffer(propCount);\r\n\r\n        _propsApi_tryGetIndoorMapPropData = _propsApi_tryGetIndoorMapPropData || cwrap(\"propsApi_tryGetIndoorMapPropData\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n        success = _propsApi_tryGetIndoorMapPropData(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            floorId,\r\n            propCount,\r\n            indoorMapPropStringNamesBuf.ptr,\r\n            indoorMapPropStringModelsBuf.ptr,\r\n            indoorMapPropLatLngBuf.ptr,\r\n            indoorMapPropHeightBuf.ptr,\r\n            indoorMapPropOrientationBuf.ptr\r\n        );\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var indoorMapPropStringNames = _emscriptenMemory.consumeUtf8BufferToString(indoorMapPropStringNamesBuf);\r\n        var indoorMapPropStringModels = _emscriptenMemory.consumeUtf8BufferToString(indoorMapPropStringModelsBuf);\r\n        var indoorMapPropLatLngs = _emscriptenMemory.consumeBufferToArray(indoorMapPropLatLngBuf);\r\n        var indoorMapPropHeights = _emscriptenMemory.consumeBufferToArray(indoorMapPropHeightBuf);\r\n        var indoorMapPropOrientation = _emscriptenMemory.consumeBufferToArray(indoorMapPropOrientationBuf);\r\n\r\n        var indoorMapEntityPropList = [];\r\n\r\n        var nameBufferHead = 0;\r\n        var modelBufferHead = 0;\r\n        for (var i = 0; i < propCount; i++) {\r\n            var numCharsInName = indoorMapPerPropNameSizes[i];\r\n            var nameBufferEnd = nameBufferHead + numCharsInName;\r\n            var name = indoorMapPropStringNames.slice(nameBufferHead, nameBufferEnd);\r\n            nameBufferHead = nameBufferEnd;\r\n\r\n            var numCharsInModel = indoorMapPerPropModelSizes[i];\r\n            var modelBufferEnd = modelBufferHead + numCharsInModel;\r\n            var model = indoorMapPropStringModels.slice(modelBufferHead, modelBufferEnd);\r\n            modelBufferHead = modelBufferEnd;\r\n\r\n            var posLat = indoorMapPropLatLngs[2 * i];\r\n            var posLng = indoorMapPropLatLngs[2 * i + 1];\r\n            var position = L.latLng(posLat, posLng);\r\n\r\n            var height = indoorMapPropHeights[i];\r\n            var orientation = indoorMapPropOrientation[i];\r\n\r\n            var prop = new IndoorMapEntitySetProp(indoorMapId, floorId, name, model, position, height, ElevationModeType.HEIGHT_ABOVE_GROUND, orientation);\r\n            indoorMapEntityPropList.push(prop);\r\n        }\r\n\r\n        return indoorMapEntityPropList;\r\n    };\r\n\r\n    this.setIndoorMapPopulationServiceUrl = (serviceUrl) => {\r\n        _propsApi_setIndoorMapPopulationServiceUrl = _propsApi_setIndoorMapPopulationServiceUrl || cwrap(\"propsApi_setIndoorMapPopulationServiceUrl\", null, [\"number\", \"string\"]);\r\n        _propsApi_setIndoorMapPopulationServiceUrl(_emscriptenApiPointer, serviceUrl);\r\n    };\r\n\r\n    var indoorMapEntitySetPropsLoadedHandler = (indoorMapIdPtr, floorId) => {\r\n        if (_indoorMapEntitySetPropsLoadedCallback !== null) {\r\n            var indoorMapId = _emscriptenMemory.stringifyPointer(indoorMapIdPtr);\r\n            _indoorMapEntitySetPropsLoadedCallback(indoorMapId, floorId);\r\n        }\r\n    };\r\n\r\n    this.setIndoorMapEntitySetPropsLoadedCallback = (callback) => {\r\n        _indoorMapEntitySetPropsLoadedCallback = callback;\r\n    };\r\n\r\n    this.registerIndoorMapEntitySetPropsLoadedHandler = (callback) => {\r\n        _propsApi_setIndoorMapEntitySetPropsLoadedCallback = _propsApi_setIndoorMapEntitySetPropsLoadedCallback || cwrap(\"propsApi_setIndoorMapEntitySetPropsLoadedCallback\", null, [\"number\", \"number\"]);\r\n        _propsApi_setIndoorMapEntitySetPropsLoadedCallback(_emscriptenApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.setIndoorMapPopulationRequestCompletedCallback = (callback) => {\r\n        _propsApi_setIndoorMapPopulationRequestCompletedCallback = _propsApi_setIndoorMapPopulationRequestCompletedCallback || cwrap(\"propsApi_setIndoorMapPopulationRequestCompletedCallback\", null, [\"number\", \"number\", \"number\"]);\r\n        _propsApi_setIndoorMapPopulationRequestCompletedCallback(_emscriptenApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n}\r\n\r\nexport default EmscriptenPropsApi;\r\n","import { MapFloorId } from \"../map\";\r\nexport class IndoorMapEntity {\r\n  private _indoorMapEntityId: string;\r\n  private _indoorMapFloorId: number;\r\n  private _position: L.LatLng;\r\n  private _outline: L.LatLngTuple[][];\r\n\r\n  constructor(indoorMapEntityId: string, indoorMapFloorId: number, position: L.LatLng, outline: L.LatLngTuple[][]) {\r\n    this._indoorMapEntityId = indoorMapEntityId;\r\n    this._indoorMapFloorId = indoorMapFloorId;\r\n    this._position = position;\r\n    this._outline = outline;\r\n  }\r\n\r\n  getIndoorMapEntityId(): string {\r\n    return this._indoorMapEntityId;\r\n  }\r\n\r\n  getIndoorMapFloorId(): MapFloorId {\r\n    return this._indoorMapFloorId;\r\n  }\r\n\r\n  getPosition(): L.LatLng {\r\n    return this._position;\r\n  }\r\n\r\n  getOutline(): L.LatLngTuple[][] {\r\n    return this._outline;\r\n  }\r\n}\r\n","import L from \"leaflet\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport type Color from \"../types/color\";\r\nimport type ElevationMode from \"../types/elevationMode\";\r\nimport type { Map, MapFloorId, MapId } from \"./map\";\r\n\r\nconst RESOLUTION_PIXELS_MIN = 64.0;\r\nconst RESOLUTION_PIXELS_MAX = 2048;\r\n\r\nexport enum HeatmapOcclusionMapFeature {\r\n  GROUND = \"ground\",\r\n  BUILDINGS = \"buildings\",\r\n  TREES = \"trees\",\r\n  TRANSPORT = \"transport\",\r\n}\r\n\r\nexport type OcclusionMapFeature = \"ground\" | \"buildings\" | \"trees\" | \"transport\";\r\n\r\nexport type WeightedPoint = {\r\n  latLng?: L.LatLngExpression;\r\n  weight?: number;\r\n};\r\n\r\nexport type CustomPoint = {\r\n  [property: string]: L.LatLngExpression | number;\r\n};\r\n\r\nexport type PointData = [number, number] | [number, number, number] | WeightedPoint | CustomPoint;\r\n\r\nexport type DensityStop = {\r\n  stop: number;\r\n  radius: number;\r\n  gain: number;\r\n};\r\n\r\nexport type DensityStopArray = [number, number, number];\r\n\r\nexport type ColorStop = {\r\n  stop: number;\r\n  color: Color;\r\n};\r\n\r\nexport type ColorStopArray = [number, Color];\r\n\r\nexport type HeatmapOptions = {\r\n  densityStops?: DensityStop[];\r\n  densityBlend?: number;\r\n  interpolateDensityByZoom?: boolean;\r\n  zoomMin?: number;\r\n  zoomMax?: number;\r\n  weightMin?: number;\r\n  weightMax?: number;\r\n  colorGradient?: ColorStopArray | ColorStop[] | ColorStopArray[];\r\n  opacity?: number;\r\n  resolutionPixels?: number;\r\n  intensityBias?: number;\r\n  intensityScale?: number;\r\n  indoorMapId?: MapId;\r\n  indoorMapFloorId?: MapFloorId;\r\n  elevation?: number;\r\n  elevationMode?: ElevationMode;\r\n  occludedMapFeatures?: OcclusionMapFeature[];\r\n  occludedAlpha?: number;\r\n  occludedSaturation?: number;\r\n  occludedBrightness?: number;\r\n  polygonPoints?: L.LatLngTuple[];\r\n  dataCoordProperty?: string;\r\n  dataWeightProperty?: string;\r\n  textureBorderPercent?: number;\r\n  useApproximation?: boolean;\r\n};\r\n\r\ndeclare class HeatmapType extends L.Layer {\r\n  options: Required<HeatmapOptions>;\r\n  protected _map: Map;\r\n  protected _pointData: WeightedPoint[];\r\n  protected _changedFlags: {\r\n    data: boolean;\r\n    indoorMap: boolean;\r\n    elevation: boolean;\r\n    densityBlend: boolean;\r\n    interpolateDensityByZoom: boolean;\r\n    intensityBias: boolean;\r\n    intensityScale: boolean;\r\n    opacity: boolean;\r\n    colorGradient: boolean;\r\n    resolution: boolean;\r\n    densityStops: boolean;\r\n    useApproximation: boolean;\r\n    polygon: boolean;\r\n  };\r\n  constructor(pointData: PointData[], options?: HeatmapOptions);\r\n  getData(): WeightedPoint[];\r\n  getDensityStops(): DensityStop[];\r\n  getDensityBlend(): number;\r\n  getInterpolateDensityByZoom(): boolean;\r\n  getZoomMin(): number;\r\n  getZoomMax(): number;\r\n  getWeightMin(): number;\r\n  getWeightMax(): number;\r\n  getColorGradient(): ColorStop[];\r\n  getOpacity(): number;\r\n  getResolutionPixels(): number;\r\n  getIntensityBias(): number;\r\n  getIntensityScale(): number;\r\n  getIndoorMapId(): MapId;\r\n  getIndoorMapFloorId(): MapFloorId;\r\n  getElevation(): number;\r\n  getElevationMode(): ElevationMode;\r\n  getOccludedMapFeatures(): OcclusionMapFeature[];\r\n  getOccludedAlpha(): number;\r\n  getOccludedSaturation(): number;\r\n  getOccludedBrightness(): number;\r\n  getPolygonPoints(): L.LatLngTuple;\r\n  getTextureBorderPercent(): number;\r\n  getUseApproximation(): boolean;\r\n\r\n  setData(pointData: PointData[]): this;\r\n  setOptions(options: HeatmapOptions): this;\r\n  setDensityStops(densityStops: DensityStop[]): this;\r\n  setDensityBlend(densityBlend: number): this;\r\n  setInterpolateDensityByZoom(interpolateDensityByZoom: boolean): this;\r\n  setZoomMin(zoomMin: number): this;\r\n  setZoomMax(zoomMax: number): this;\r\n  setWeightMin(weightMin: number): this;\r\n  setWeightMax(weightMax: number): this;\r\n  setColorGradient(colorGradient: ColorStopArray | ColorStop[] | ColorStopArray[]): this;\r\n  setOpacity(opacity: number): this;\r\n  setResolution(resolutionPixels: number): this;\r\n  setIntensityBias(intensityBias: number): this;\r\n  setIntensityScale(intensityScale: number): this;\r\n  setIndoorMapWithFloorId(indoorMapId: MapId, indoorMapFloorId: MapFloorId): this;\r\n  setElevation(elevation: number): this;\r\n  setElevationMode(mode: ElevationMode): this;\r\n  setPolygonPoints(polygonPoints: L.LatLngTuple[] | L.LatLngTuple[][]): this;\r\n  setUseApproximation(useApproximation: boolean): this;\r\n\r\n  protected _getArrayDepth(array: unknown[] | unknown): number;\r\n  protected _loadLatLngAlts(coords: L.LatLngExpression[]): L.LatLngTuple[];\r\n  protected _loadPolygonRings(coordsArray: L.LatLngTuple[] | L.LatLngTuple[][]): L.LatLngTuple[];\r\n  protected _loadDensityParams(densityParams: DensityStop | DensityStopArray): DensityStop;\r\n  protected _loadDensityStops(\r\n    densityStopsArray: (DensityStop | DensityStopArray) | (DensityStop | DensityStopArray)[]\r\n  ): DensityStop[];\r\n  protected _loadPointData(pointData: PointData[]): WeightedPoint[];\r\n  protected _loadColorGradient(colorGradient: ColorStopArray | ColorStop[] | ColorStopArray[]): ColorStop[];\r\n  protected _loadColorStop(colorStop: ColorStop | ColorStopArray): ColorStop;\r\n}\r\n\r\nexport type Heatmap = HeatmapType;\r\n\r\nexport const Heatmap: typeof HeatmapType = (L.Layer ? L.Layer : L.Class).extend({\r\n  options: {\r\n    dataCoordProperty: \"latLng\",\r\n    dataWeightProperty: \"weight\",\r\n    elevation: 0.0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n    indoorMapId: \"\",\r\n    indoorMapFloorId: 0,\r\n    polygonPoints: [],\r\n\r\n    weightMin: 0.0,\r\n    weightMax: 1.0,\r\n    resolutionPixels: 512.0,\r\n    textureBorderPercent: 0.05,\r\n    useApproximation: true,\r\n\r\n    densityStops: [\r\n      { stop: 0.0, radius: 5.0, gain: 1.0 },\r\n      { stop: 1.0, radius: 15.0, gain: 1.0 },\r\n    ],\r\n    densityBlend: 0.0,\r\n    interpolateDensityByZoom: false,\r\n    zoomMin: 15.0,\r\n    zoomMax: 18.0,\r\n\r\n    // Default gradient suitable for sequential data, with transparency near zero, similar to\r\n    // http://colorbrewer2.org/#type=sequential&scheme=YlOrRd&n=5\r\n    colorGradient: [\r\n      { stop: 0.0, color: \"#ffffff00\" },\r\n      { stop: 0.2, color: \"#ffffb2ff\" },\r\n      { stop: 0.4, color: \"#fecc5cff\" },\r\n      { stop: 0.6, color: \"#fd8d3cff\" },\r\n      { stop: 0.8, color: \"#f03b20ff\" },\r\n      { stop: 1.0, color: \"#bd0026ff\" },\r\n    ],\r\n    opacity: 1.0,\r\n    intensityBias: 0.0,\r\n    intensityScale: 1.0,\r\n    occludedMapFeatures: [HeatmapOcclusionMapFeature.BUILDINGS, HeatmapOcclusionMapFeature.TREES],\r\n    occludedAlpha: 0.85,\r\n    occludedSaturation: 0.7,\r\n    occludedBrightness: 0.7,\r\n  } as HeatmapOptions,\r\n\r\n  _loadPointData: function (this: Heatmap, pointData: PointData[]) {\r\n    const weightedCoords: WeightedPoint[] = [];\r\n    const dataCoordProperty = this.options.dataCoordProperty;\r\n    const dataWeightProperty = this.options.dataWeightProperty;\r\n    pointData.forEach((pointDatum) => {\r\n      let weight = 1.0;\r\n      let latLng: L.LatLng;\r\n      if (dataCoordProperty in pointDatum) {\r\n        const _pointDatum = pointDatum as CustomPoint;\r\n        latLng = L.latLng(_pointDatum[dataCoordProperty] as L.LatLngExpression);\r\n\r\n        if (dataWeightProperty in pointDatum) {\r\n          weight = _pointDatum[dataWeightProperty] as number;\r\n        }\r\n      } else if (Array.isArray(pointDatum)) {\r\n        latLng = L.latLng(pointDatum[0], pointDatum[1]);\r\n        if (pointDatum.length > 2) {\r\n          weight = pointDatum[2] as number;\r\n        }\r\n      } else {\r\n        throw new Error(\"Expected {latLng, weight} or [<lat>, lng, weight] when parsing pointData.\");\r\n      }\r\n\r\n      weightedCoords.push({\r\n        latLng: latLng,\r\n        weight: weight,\r\n      });\r\n    });\r\n    return weightedCoords;\r\n  },\r\n\r\n  _getArrayDepth: function (this: Heatmap, array: unknown[]) {\r\n    let arrayDepth = 0;\r\n    let testElement: unknown[] | unknown = array;\r\n    do {\r\n      testElement = (testElement as unknown[])[0];\r\n      arrayDepth++;\r\n    } while (Array.isArray(testElement));\r\n    return arrayDepth;\r\n  },\r\n\r\n  _loadLatLngAlts: function (this: Heatmap, coords: L.LatLngExpression[]) {\r\n    return coords.map(L.latLng);\r\n  },\r\n\r\n  _loadPolygonRings: function (this: Heatmap, coordsArray: L.LatLngTuple[] | L.LatLngTuple[][]) {\r\n    let polygonRings: L.LatLngTuple[][] = [];\r\n    const arrayDepth = this._getArrayDepth(coordsArray);\r\n\r\n    if (arrayDepth === 2) {\r\n      coordsArray = coordsArray as L.LatLngTuple[];\r\n      polygonRings.push(this._loadLatLngAlts(coordsArray));\r\n    } else if (arrayDepth === 3) {\r\n      coordsArray = coordsArray as L.LatLngTuple[][];\r\n      coordsArray.forEach((holeCoords) => {\r\n        polygonRings.push(this._loadLatLngAlts(holeCoords));\r\n      }, this);\r\n    } else if (coordsArray.length === 0) {\r\n      polygonRings = [];\r\n    } else {\r\n      throw new Error(\"Incorrect array depth for heatmap options.polygonPoints.\");\r\n    }\r\n    return polygonRings;\r\n  },\r\n\r\n  _loadDensityParams: function (this: Heatmap, densityParams: DensityStop | DensityStopArray) {\r\n    let stop = 0.0;\r\n    let radius = 0.0;\r\n    let gain = 0.0;\r\n\r\n    if (Array.isArray(densityParams)) {\r\n      if (densityParams.length < 2) {\r\n        throw new Error(\"Expected array [<stop>, <radius>, <(optional) gain>] when parsing options.densityStops\");\r\n      }\r\n      stop = densityParams[0];\r\n      radius = densityParams[1];\r\n      gain = densityParams.length > 2 ? densityParams[2] : 1.0;\r\n    } else {\r\n      if (densityParams.stop === undefined || densityParams.radius === undefined) {\r\n        throw new Error(\r\n          \"Expected object {stop:<stop>, radius:<radius>, (optional) gain:<gain>} when parsing options.densityStops\"\r\n        );\r\n      }\r\n\r\n      stop = densityParams.stop;\r\n      radius = densityParams.radius;\r\n      gain = densityParams.gain || 1.0;\r\n    }\r\n\r\n    if (isNaN(stop)) {\r\n      throw new Error(\"Expected Number for heatmap density stop parameter: \" + String(stop));\r\n    }\r\n    if (isNaN(radius)) {\r\n      throw new Error(\"Expected Number for heatmap radius parameter: \" + String(radius));\r\n    }\r\n    if (isNaN(gain)) {\r\n      throw new Error(\"Expected Number for heatmap gain parameter: \" + String(gain));\r\n    }\r\n\r\n    return {\r\n      stop: stop,\r\n      radius: radius,\r\n      gain: gain,\r\n    };\r\n  },\r\n\r\n  _loadDensityStops: function (\r\n    this: Heatmap,\r\n    densityStopsArray: DensityStop | DensityStopArray | DensityStop[] | DensityStopArray[]\r\n  ): DensityStop[] {\r\n    const densityStops: DensityStop[] = [];\r\n    const arrayDepth = this._getArrayDepth(densityStopsArray);\r\n\r\n    if (arrayDepth === 1 && Array.isArray(densityStopsArray) && typeof densityStopsArray[0] === \"number\") {\r\n      densityStops.push(this._loadDensityParams(densityStopsArray as DensityStopArray));\r\n    } else if (arrayDepth <= 2) {\r\n      (densityStopsArray as DensityStop[]).forEach((densityStopsSet) => {\r\n        densityStops.push(this._loadDensityParams(densityStopsSet));\r\n      }, this);\r\n    } else {\r\n      throw new Error(\"Incorrect array depth for heatmap options.densityStops.\");\r\n    }\r\n    return densityStops;\r\n  },\r\n\r\n  _loadColorStop: function (this: Heatmap, colorStopParams: ColorStop | ColorStopArray): ColorStop {\r\n    let stop = 0.0;\r\n    let color: Color = \"#ffffffff\";\r\n\r\n    if (Array.isArray(colorStopParams)) {\r\n      if (colorStopParams.length < 2) {\r\n        throw new Error(\"Expected array [<stop>, <color>] when parsing options.colorGradient\");\r\n      }\r\n      stop = colorStopParams[0];\r\n      color = colorStopParams[1];\r\n    } else {\r\n      if (colorStopParams.stop === undefined || colorStopParams.color === undefined) {\r\n        throw new Error(\"Expected object {stop:<stop>, color:<color>} when parsing options.colorGradient\");\r\n      }\r\n\r\n      stop = colorStopParams.stop;\r\n      color = colorStopParams.color;\r\n    }\r\n\r\n    if (isNaN(stop)) {\r\n      throw new Error(\"Expected Number for color stop parameter: \" + String(stop));\r\n    }\r\n\r\n    return {\r\n      stop: stop,\r\n      color: color,\r\n    };\r\n  },\r\n\r\n  _loadColorGradient: function (\r\n    this: Heatmap,\r\n    gradientStopsArray: ColorStopArray | ColorStop[] | ColorStopArray[]\r\n  ): ColorStop[] {\r\n    const colorGradient: ColorStop[] = [];\r\n    const arrayDepth = this._getArrayDepth(gradientStopsArray);\r\n\r\n    if (arrayDepth === 1 && typeof gradientStopsArray[0] === \"number\") {\r\n      gradientStopsArray = gradientStopsArray as ColorStopArray;\r\n      colorGradient.push(this._loadColorStop(gradientStopsArray));\r\n    } else if (arrayDepth <= 2 && Array.isArray(gradientStopsArray)) {\r\n      gradientStopsArray = gradientStopsArray as ColorStop[] | ColorStopArray[];\r\n      gradientStopsArray.forEach((gradientStop: ColorStop | ColorStopArray) => {\r\n        colorGradient.push(this._loadColorStop(gradientStop));\r\n      }, this);\r\n    } else {\r\n      throw new Error(\"Incorrect array depth for heatmap options.colorGradient.\");\r\n    }\r\n    return colorGradient;\r\n  },\r\n\r\n  initialize: function (this: Heatmap, pointData: PointData[], options?: HeatmapOptions) {\r\n    this.setOptions(options || {});\r\n    this._pointData = this._loadPointData(pointData);\r\n  },\r\n\r\n  getData: function (this: Heatmap) {\r\n    return this._pointData;\r\n  },\r\n\r\n  setData: function (this: Heatmap, pointData: PointData[]) {\r\n    this._pointData = this._loadPointData(pointData);\r\n    this._changedFlags.data = true;\r\n    return this;\r\n  },\r\n\r\n  getPolygonPoints: function (this: Heatmap) {\r\n    return this.options.polygonPoints;\r\n  },\r\n\r\n  getIndoorMapId: function (this: Heatmap) {\r\n    return this.options.indoorMapId;\r\n  },\r\n\r\n  getIndoorMapFloorId: function (this: Heatmap) {\r\n    return this.options.indoorMapFloorId;\r\n  },\r\n\r\n  getElevation: function (this: Heatmap) {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  getElevationMode: function (this: Heatmap) {\r\n    return this.options.elevationMode;\r\n  },\r\n\r\n  getWeightMin: function (this: Heatmap) {\r\n    return this.options.weightMin;\r\n  },\r\n\r\n  getWeightMax: function (this: Heatmap) {\r\n    return this.options.weightMax;\r\n  },\r\n\r\n  getResolutionPixels: function (this: Heatmap) {\r\n    return this.options.resolutionPixels;\r\n  },\r\n\r\n  getTextureBorderPercent: function (this: Heatmap) {\r\n    return this.options.textureBorderPercent;\r\n  },\r\n\r\n  getUseApproximation: function (this: Heatmap) {\r\n    return this.options.useApproximation;\r\n  },\r\n\r\n  getDensityStops: function (this: Heatmap) {\r\n    return this.options.densityStops;\r\n  },\r\n\r\n  getDensityBlend: function (this: Heatmap) {\r\n    return this.options.densityBlend;\r\n  },\r\n\r\n  getInterpolateDensityByZoom: function (this: Heatmap) {\r\n    return this.options.interpolateDensityByZoom;\r\n  },\r\n\r\n  getZoomMin: function (this: Heatmap) {\r\n    return this.options.zoomMin;\r\n  },\r\n\r\n  getZoomMax: function (this: Heatmap) {\r\n    return this.options.zoomMax;\r\n  },\r\n\r\n  getColorGradient: function (this: Heatmap) {\r\n    return this.options.colorGradient;\r\n  },\r\n\r\n  getOpacity: function (this: Heatmap) {\r\n    return this.options.opacity;\r\n  },\r\n\r\n  getIntensityBias: function (this: Heatmap) {\r\n    return this.options.intensityBias;\r\n  },\r\n\r\n  getIntensityScale: function (this: Heatmap) {\r\n    return this.options.intensityScale;\r\n  },\r\n\r\n  getOccludedMapFeatures: function (this: Heatmap) {\r\n    return this.options.occludedMapFeatures;\r\n  },\r\n\r\n  getOccludedAlpha: function (this: Heatmap) {\r\n    return this.options.occludedAlpha;\r\n  },\r\n\r\n  getOccludedSaturation: function (this: Heatmap) {\r\n    return this.options.occludedSaturation;\r\n  },\r\n\r\n  getOccludedBrightness: function (this: Heatmap) {\r\n    return this.options.occludedBrightness;\r\n  },\r\n\r\n  ////\r\n\r\n  setIndoorMapWithFloorId: function (this: Heatmap, indoorMapId: MapId, indoorMapFloorId: MapFloorId) {\r\n    if (isNaN(indoorMapFloorId)) {\r\n      throw new Error(\"Heatmap indoorMapFloorId cannot be NaN\");\r\n    }\r\n    this.options.indoorMapId = indoorMapId || Heatmap.prototype.options.indoorMapId;\r\n    this.options.indoorMapFloorId = indoorMapFloorId;\r\n    this._changedFlags.indoorMap = true;\r\n    return this;\r\n  },\r\n\r\n  setElevation: function (this: Heatmap, elevation: number) {\r\n    if (isNaN(elevation)) {\r\n      throw new Error(\"Heatmap elevation cannot be NaN\");\r\n    }\r\n    this.options.elevation = elevation;\r\n    this._changedFlags.elevation = true;\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (this: Heatmap, mode: ElevationMode) {\r\n    if (!isValidElevationMode(mode)) {\r\n      throw new Error(\"Heatmap elevationMode must be valid\");\r\n    }\r\n    this.options.elevationMode = mode;\r\n    this._changedFlags.elevation = true;\r\n    return this;\r\n  },\r\n\r\n  setDensityBlend: function (this: Heatmap, densityBlend: number) {\r\n    if (isNaN(densityBlend)) {\r\n      throw new Error(\"Heatmap densityBlend cannot be NaN\");\r\n    }\r\n    this.options.densityBlend = Math.min(Math.max(densityBlend, 0.0), 1.0);\r\n    this._changedFlags.densityBlend = true;\r\n    return this;\r\n  },\r\n\r\n  setInterpolateDensityByZoom: function (this: Heatmap, interpolateDensityByZoom: boolean) {\r\n    this.options.interpolateDensityByZoom = interpolateDensityByZoom ? true : false;\r\n    this._changedFlags.interpolateDensityByZoom = true;\r\n    return this;\r\n  },\r\n\r\n  setZoomMin: function (this: Heatmap, zoomMin: number) {\r\n    if (isNaN(zoomMin)) {\r\n      throw new Error(\"Heatmap zoomMin cannot be NaN\");\r\n    }\r\n    this.options.zoomMin = Math.max(zoomMin, 0.0);\r\n    this._changedFlags.interpolateDensityByZoom = true;\r\n    return this;\r\n  },\r\n\r\n  setZoomMax: function (this: Heatmap, zoomMax: number) {\r\n    if (isNaN(zoomMax)) {\r\n      throw new Error(\"Heatmap zoomMax cannot be NaN\");\r\n    }\r\n    this.options.zoomMax = Math.max(zoomMax, 0.0);\r\n    this._changedFlags.interpolateDensityByZoom = true;\r\n    return this;\r\n  },\r\n\r\n  setIntensityBias: function (this: Heatmap, intensityBias: number) {\r\n    if (isNaN(intensityBias)) {\r\n      throw new Error(\"Heatmap intensityBias cannot be NaN\");\r\n    }\r\n    this.options.intensityBias = Math.min(Math.max(intensityBias, 0.0), 1.0);\r\n    this._changedFlags.intensityBias = true;\r\n    return this;\r\n  },\r\n\r\n  setIntensityScale: function (this: Heatmap, intensityScale: number) {\r\n    if (isNaN(intensityScale)) {\r\n      throw new Error(\"Heatmap intensityScale cannot be NaN\");\r\n    }\r\n    this.options.intensityScale = Math.max(intensityScale, 0.0);\r\n    this._changedFlags.intensityScale = true;\r\n    return this;\r\n  },\r\n\r\n  setOpacity: function (this: Heatmap, opacity: number) {\r\n    if (isNaN(opacity)) {\r\n      throw new Error(\"Heatmap opacity cannot be NaN\");\r\n    }\r\n    this.options.opacity = Math.min(Math.max(opacity, 0.0), 1.0);\r\n    this._changedFlags.opacity = true;\r\n    return this;\r\n  },\r\n\r\n  setColorGradient: function (this: Heatmap, colorGradient: ColorStopArray | ColorStop[] | ColorStopArray[]) {\r\n    this.options.colorGradient = this._loadColorGradient(colorGradient);\r\n    this._changedFlags.colorGradient = true;\r\n    return this;\r\n  },\r\n\r\n  setResolution: function (this: Heatmap, resolutionPixels: number) {\r\n    if (isNaN(resolutionPixels)) {\r\n      throw new Error(\"Heatmap resolutionPixels cannot be NaN\");\r\n    }\r\n    this.options.resolutionPixels = Math.max(Math.min(resolutionPixels, RESOLUTION_PIXELS_MAX), RESOLUTION_PIXELS_MIN);\r\n\r\n    this._changedFlags.resolution = true;\r\n    return this;\r\n  },\r\n\r\n  setDensityStops: function (\r\n    this: Heatmap,\r\n    densityStops: (DensityStop | DensityStopArray) | (DensityStop | DensityStopArray)[]\r\n  ) {\r\n    this.options.densityStops = this._loadDensityStops(densityStops);\r\n    this._changedFlags.densityStops = true;\r\n    return this;\r\n  },\r\n\r\n  setUseApproximation: function (this: Heatmap, useApproximation: boolean) {\r\n    this.options.useApproximation = useApproximation ? true : false;\r\n    this._changedFlags.useApproximation = true;\r\n    return this;\r\n  },\r\n\r\n  setWeightMin: function (this: Heatmap, weightMin: number) {\r\n    if (isNaN(weightMin)) {\r\n      throw new Error(\"Heatmap weightMin cannot be NaN\");\r\n    }\r\n    this.options.weightMin = weightMin;\r\n    this._changedFlags.data = true;\r\n    return this;\r\n  },\r\n\r\n  setWeightMax: function (this: Heatmap, weightMax: number) {\r\n    if (isNaN(weightMax)) {\r\n      throw new Error(\"Heatmap weightMax cannot be NaN\");\r\n    }\r\n    this.options.weightMax = weightMax;\r\n    this._changedFlags.data = true;\r\n    return this;\r\n  },\r\n\r\n  setPolygonPoints: function (this: Heatmap, polygonPoints: L.LatLngTuple[] | L.LatLngTuple[][]) {\r\n    this.options.polygonPoints = this._loadPolygonRings(polygonPoints);\r\n    this._changedFlags.polygon = true;\r\n    return this;\r\n  },\r\n\r\n  setOptions: function (this: Heatmap, options: HeatmapOptions) {\r\n    // merge options into this.options\r\n    L.setOptions(this, options);\r\n\r\n    // only call mutation method (which validates and sets dirty flag) if property exists in param\r\n    if (\"indoorMapId\" in options || \"indooindoorMapFloorIdMapId\" in options) {\r\n      this.setIndoorMapWithFloorId(this.options.indoorMapId, this.options.indoorMapFloorId);\r\n    }\r\n    if (\"elevation\" in options) {\r\n      this.setElevation(this.options.elevation);\r\n    }\r\n    if (\"elevationMode\" in options) {\r\n      this.setElevationMode(this.options.elevationMode);\r\n    }\r\n    if (\"densityBlend\" in options) {\r\n      this.setDensityBlend(this.options.densityBlend);\r\n    }\r\n    if (\"interpolateDensityByZoom\" in options) {\r\n      this.setInterpolateDensityByZoom(this.options.interpolateDensityByZoom);\r\n    }\r\n    if (\"zoomMin\" in options) {\r\n      this.setZoomMin(this.options.zoomMin);\r\n    }\r\n    if (\"zoomMax\" in options) {\r\n      this.setZoomMax(this.options.zoomMax);\r\n    }\r\n    if (\"intensityBias\" in options) {\r\n      this.setIntensityBias(this.options.intensityBias);\r\n    }\r\n    if (\"intensityScale\" in options) {\r\n      this.setIntensityScale(this.options.intensityScale);\r\n    }\r\n    if (\"opacity\" in options) {\r\n      this.setOpacity(this.options.opacity);\r\n    }\r\n    if (\"colorGradient\" in options) {\r\n      this.setColorGradient(this.options.colorGradient);\r\n    }\r\n    if (\"resolutionPixels\" in options) {\r\n      this.setResolution(this.options.resolutionPixels);\r\n    }\r\n    if (\"densityStops\" in options) {\r\n      this.setDensityStops(this.options.densityStops);\r\n    }\r\n    if (\"useApproximation\" in options) {\r\n      this.setUseApproximation(this.options.useApproximation);\r\n    }\r\n    if (\"weightMin\" in options) {\r\n      this.setWeightMin(this.options.weightMin);\r\n    }\r\n    if (\"weightMax\" in options) {\r\n      this.setWeightMax(this.options.weightMax);\r\n    }\r\n    if (\"polygonPoints\" in options) {\r\n      this.setPolygonPoints(this.options.polygonPoints);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  _update: function (this: Heatmap) {},\r\n\r\n  beforeAdd: function (this: Heatmap) {\r\n    // don't call base, avoid assigning this._renderer\r\n  },\r\n\r\n  onAdd: function (this: Heatmap) {\r\n    this._map.heatmaps.addHeatmap(this);\r\n  },\r\n\r\n  onRemove: function (this: Heatmap) {\r\n    this._map.heatmaps.removeHeatmap(this);\r\n  },\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  redraw: function (this: Heatmap) {},\r\n\r\n  _changedFlags: {\r\n    indoorMap: false,\r\n    elevation: false,\r\n    densityBlend: false,\r\n    interpolateDensityByZoom: false,\r\n    intensityBias: false,\r\n    intensityScale: false,\r\n    opacity: false,\r\n    colorGradient: false,\r\n    occludedStyle: false,\r\n    resolution: false,\r\n    densityStops: false,\r\n    useApproximation: false,\r\n    data: false,\r\n    polygon: false,\r\n  },\r\n\r\n  _anyChanged: function (this: Heatmap) {\r\n    return Object.values(this._changedFlags).some(Boolean);\r\n  },\r\n\r\n  _getChangedFlags: function (this: Heatmap) {\r\n    return this._changedFlags;\r\n  },\r\n\r\n  _clearChangedFlags: function (this: Heatmap) {\r\n    type Key = keyof typeof this._changedFlags;\r\n    (Object.keys(this._changedFlags) as Key[]).forEach((key) => {\r\n      this._changedFlags[key] = false;\r\n    }, this);\r\n  },\r\n});\r\n\r\nexport const heatmap = factoryFor(Heatmap);\r\n","import L from \"leaflet\";\r\nimport { IndoorMapEntity } from \"../../public/indoorMapEntities\";\r\n\r\nexport function EmscriptenIndoorMapEntityInformationApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _indoorEntityInformationApi_IndoorMapEntityInformationChangedCallback = cwrap(\"indoorEntityInformationApi_IndoorMapEntityInformationChangedCallback\", null, [\"number\", \"number\"]);\r\n    var _indoorEntityInformationApi_CreateIndoorMapEntityInformation = cwrap(\"indoorMapEntityInformation_CreateIndoorMapEntityInformation\", \"number\", [\"number\",\"string\"]);\r\n    var _indoorEntityInformationApi_DestroyIndoorMapEntityInformation = cwrap(\"indoorMapEntityInformation_DestroyIndoorMapEntityInformation\", null, [\"number\",\"number\"]);\r\n    var _indoorEntityInformationApi_TryGetIndoorMapEntityCountBuffer = cwrap(\"indoorEntityInformationApi_TryGetIndoorMapEntityCountBuffer\", \"number\", [\"number\",\"number\",\"number\"]);\r\n    var _indoorEntityInformationApi_TryGetIndoorMapEntityInformationLoadState = cwrap(\"indoorEntityInformationApi_TryGetIndoorMapEntityInformationLoadState\", \"number\", [\"number\",\"number\", \"number\"]);\r\n    \r\n    var _indoorEntityInformationApi_TryGetIndoorMapEntityBuffersSize = cwrap(\"indoorEntityInformationApi_TryGetIndoorMapEntityBuffersSize\", \"number\",  [\"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _indoorEntityInformationApi_TryGetIndoorMapEntityModels = cwrap(\"indoorEntityInformationApi_TryGetIndoorMapEntityModels\", \"number\" , [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n    this.registerIndoorMapEntityInformationChangedCallback = (callback) => {\r\n        _indoorEntityInformationApi_IndoorMapEntityInformationChangedCallback(_emscriptenApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.createIndoorMapEntityInformation = (indoorEntityInformation) => {\r\n        var indoorEntityInformationId = 0;\r\n\r\n        var indoorMapId = indoorEntityInformation.getIndoorMapId();\r\n\r\n        indoorEntityInformationId = _indoorEntityInformationApi_CreateIndoorMapEntityInformation(\r\n            _emscriptenApiPointer,\r\n            indoorMapId);\r\n\r\n        return indoorEntityInformationId;\r\n    };\r\n\r\n    this.destroyIndoorMapEntityInformation = (IndoorMapEntityInformationId) => {\r\n        _indoorEntityInformationApi_DestroyIndoorMapEntityInformation(_emscriptenApiPointer, IndoorMapEntityInformationId);\r\n    };\r\n\r\n    this.tryGetIndoorMapEntityInformation = (IndoorMapEntityInformationId) => {\r\n\r\n        //Get Current Load State\r\n        var loadStateBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n        var success = _indoorEntityInformationApi_TryGetIndoorMapEntityInformationLoadState(\r\n            _emscriptenApiPointer,\r\n            IndoorMapEntityInformationId,\r\n            loadStateBuf.ptr\r\n        );\r\n\r\n        var indoorMapEntityInformationLoadState = _emscriptenMemory.consumeBufferToArray(loadStateBuf);\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        //Get Count of IndoorMapEntities\r\n        var indoorMapEntitiesCountBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n        success = _indoorEntityInformationApi_TryGetIndoorMapEntityCountBuffer(\r\n            _emscriptenApiPointer,\r\n            IndoorMapEntityInformationId,\r\n            indoorMapEntitiesCountBuf.ptr\r\n        );\r\n\r\n        var indoorMapEntityCount = _emscriptenMemory.consumeBufferToArray(indoorMapEntitiesCountBuf)[0];\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var indoorMapEntityBufferSizesBuf = _emscriptenMemory.createInt32Buffer(3);\r\n        var indoorMapEntityIdsSizesBuf = _emscriptenMemory.createInt32Buffer(indoorMapEntityCount);\r\n        \r\n        success = _indoorEntityInformationApi_TryGetIndoorMapEntityBuffersSize(\r\n            _emscriptenApiPointer,\r\n            IndoorMapEntityInformationId,\r\n            indoorMapEntityCount,\r\n            indoorMapEntityIdsSizesBuf.ptr,\r\n            indoorMapEntityBufferSizesBuf.ptr);\r\n            \r\n        var indoorMapEntityBufferSize = _emscriptenMemory.consumeBufferToArray(indoorMapEntityBufferSizesBuf);\r\n        var indoorMapEntityStringIdSizes = _emscriptenMemory.consumeBufferToArray(indoorMapEntityIdsSizesBuf);\r\n        \r\n        var indoorMapEntityIdsTotalSize = indoorMapEntityBufferSize[0];\r\n        var latLngsPerContourSize = indoorMapEntityBufferSize[1];\r\n        var latLngsSize = indoorMapEntityBufferSize[2];\r\n        \r\n        if (!success) {\r\n            return null;\r\n        }\r\n        \r\n        var indoorMapEntityStringIdsBuf = _emscriptenMemory.createInt8Buffer(indoorMapEntityIdsTotalSize);\r\n        \r\n        var indoorMapFloorIdBuf = _emscriptenMemory.createInt32Buffer(indoorMapEntityCount);\r\n        var positionLatLngBuf= _emscriptenMemory.createDoubleBuffer(indoorMapEntityCount * 2);\r\n\r\n        var contoursPerPolygonBuf = _emscriptenMemory.createInt32Buffer(indoorMapEntityCount);\r\n        var latLngsPerContourBuf = _emscriptenMemory.createInt32Buffer(latLngsPerContourSize);\r\n        var latLngsBuf = _emscriptenMemory.createDoubleBuffer(latLngsSize);\r\n        \r\n        success = _indoorEntityInformationApi_TryGetIndoorMapEntityModels(\r\n            _emscriptenApiPointer,\r\n            IndoorMapEntityInformationId,\r\n            indoorMapEntityCount,\r\n            indoorMapEntityStringIdsBuf.ptr,\r\n            indoorMapEntityIdsTotalSize,\r\n            indoorMapFloorIdBuf.ptr,\r\n            positionLatLngBuf.ptr,\r\n            contoursPerPolygonBuf.ptr,\r\n            latLngsPerContourBuf.ptr,\r\n            latLngsPerContourSize,\r\n            latLngsBuf.ptr,\r\n            latLngsSize\r\n        );\r\n            \r\n        var indoorMapEntityStringIds = _emscriptenMemory.consumeUtf8BufferToString(indoorMapEntityStringIdsBuf);\r\n        var indoorMapEntityFloorIds = _emscriptenMemory.consumeBufferToArray(indoorMapFloorIdBuf);\r\n        var positionLatLng = _emscriptenMemory.consumeBufferToArray(positionLatLngBuf);\r\n        var contoursPerPolygon = _emscriptenMemory.consumeBufferToArray(contoursPerPolygonBuf);\r\n        var latLngsPerContour = _emscriptenMemory.consumeBufferToArray(latLngsPerContourBuf);\r\n        var latLngsDegrees = _emscriptenMemory.consumeBufferToArray(latLngsBuf);\r\n        \r\n        if (!success)\r\n        {\r\n            return null;\r\n        }\r\n        \r\n        var indoorMapEntitiesList = [];\r\n\r\n        var idBufferHead = 0;\r\n        var latLngsPerContourHead = 0;\r\n        var latLngsDegreesHead = 0;\r\n        for (var i = 0; i < indoorMapEntityCount; i++) {\r\n            var numCharsInId = indoorMapEntityStringIdSizes[i];\r\n            var idBufferEnd = idBufferHead + numCharsInId;\r\n            var indoorMapEntityId = indoorMapEntityStringIds.slice(idBufferHead, idBufferEnd);\r\n            idBufferHead = idBufferEnd;\r\n\r\n            var indoorMapEntityFloorId = indoorMapEntityFloorIds[i];\r\n\r\n            var posLat = positionLatLng[2*i];\r\n            var posLng = positionLatLng[2*i + 1];\r\n            var position = L.latLng(posLat, posLng);\r\n\r\n            var contourCount = contoursPerPolygon[i];\r\n            var polygonPoints = [];\r\n\r\n            var  latLngsPerContourEndIndex = latLngsPerContourHead + contourCount;\r\n            for (var latLngsPerContourIndex = latLngsPerContourHead; latLngsPerContourIndex < latLngsPerContourEndIndex;  latLngsPerContourIndex++)\r\n            {\r\n                var contourPoints = [];\r\n                \r\n                var latLngsDegreesCount = latLngsPerContour[latLngsPerContourIndex];\r\n                var latLngsDegreesEndIndex = latLngsDegreesHead + latLngsDegreesCount;\r\n\r\n                for(var pointIndex = latLngsDegreesHead; pointIndex < latLngsDegreesEndIndex; pointIndex++)\r\n                {\r\n                    var lat = latLngsDegrees[(pointIndex * 2)];\r\n                    var lng = latLngsDegrees[(pointIndex * 2) + 1];\r\n                    contourPoints.push(L.latLng(lat, lng));\r\n\r\n                    latLngsDegreesHead++;\r\n                }                \r\n                polygonPoints.push(contourPoints);\r\n\r\n                latLngsPerContourHead++;\r\n            }\r\n\r\n            var entity = new IndoorMapEntity(indoorMapEntityId, indoorMapEntityFloorId, position, polygonPoints);\r\n            indoorMapEntitiesList.push(entity);\r\n        }\r\n\r\n        var output = {\r\n            LoadState: indoorMapEntityInformationLoadState[0],\r\n            IndoorMapEntities: indoorMapEntitiesList\r\n        };\r\n\r\n        return output;\r\n    };\r\n}\r\n\r\nexport default EmscriptenIndoorMapEntityInformationApi;","import type IndoorMapFloorOutlinePolygonRing from \"./indoor_map_floor_outline_polygon_ring\";\r\n\r\nexport class IndoorMapFloorOutlinePolygon {\r\n  private _outerRing: IndoorMapFloorOutlinePolygonRing;\r\n  private _innerRings: IndoorMapFloorOutlinePolygonRing[];\r\n\r\n  constructor(outerRing: IndoorMapFloorOutlinePolygonRing, innerRings: IndoorMapFloorOutlinePolygonRing[]) {\r\n    this._outerRing = outerRing;\r\n    this._innerRings = innerRings;\r\n  }\r\n\r\n  getOuterRing(): IndoorMapFloorOutlinePolygonRing {\r\n    return this._outerRing;\r\n  }\r\n  getInnerRings(): IndoorMapFloorOutlinePolygonRing[] {\r\n    return this._innerRings;\r\n  }\r\n}\r\n\r\nexport default IndoorMapFloorOutlinePolygon;\r\n","export class IndoorMapFloorOutlinePolygonRing {\r\n  private _latLngPoints: L.LatLng[];\r\n\r\n  constructor(latLngPoints: L.LatLng[]) {\r\n    this._latLngPoints = latLngPoints;\r\n  }\r\n\r\n  getLatLngPoints(): L.LatLng[] {\r\n    return this._latLngPoints;\r\n  }\r\n}\r\n\r\nexport default IndoorMapFloorOutlinePolygonRing;\r\n","import L from \"leaflet\";\r\nimport IndoorMapFloorOutlinePolygon from \"../../public/indoorMapFloorOutlines/indoor_map_floor_outline_polygon\";\r\nimport IndoorMapFloorOutlinePolygonRing from \"../../public/indoorMapFloorOutlines/indoor_map_floor_outline_polygon_ring\";\r\n\r\nexport function EmscriptenIndoorMapFloorOutlineInformationApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _indoorMapFloorOutlineInformationApi_IndoorMapFloorOutlineInformationLoadedCallback = cwrap(\"indoorMapFloorOutlineInformationApi_IndoorMapFloorOutlineInformationLoadedCallback\", null, [\"number\", \"number\"]);\r\n    var _indoorMapFloorOutlineInformationApi_CreateIndoorMapFloorOutlineInformation = cwrap(\"indoorMapFloorOutlineInformationApi_CreateIndoorMapFloorOutlineInformation\", \"number\", [\"number\",\"string\", \"number\"]);\r\n    var _indoorMapFloorOutlineInformationApi_DestroyIndoorMapFloorOutlineInformation = cwrap(\"indoorMapFloorOutlineInformationApi_DestroyIndoorMapFloorOutlineInformation\", null, [\"number\",\"number\"]);\r\n    var _indoorMapFloorOutlineInformationApi_GetIndoorMapFloorOutlineInformationLoaded = cwrap(\"indoorMapFloorOutlineInformationApi_GetIndoorMapFloorOutlineInformationLoaded\", \"number\", [\"number\",\"number\"]);\r\n    var _indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlineBufferSize = cwrap(\"indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlineBufferSize\", \"number\", [\"number\",\"number\",\"number\"]);\r\n    var _indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygonBufferSizes = cwrap(\"indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygonBufferSizes\", \"number\", [\"number\",\"number\",\"number\",\"number\",\"number\",\"number\"]);\r\n    var _indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygon = cwrap(\"indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygon\", \"number\", [\"number\",\"number\",\"number\",\"number\",\"number\",\"number\",\"number\",\"number\"]);\r\n\r\n    this.registerIndoorMapFloorOutlineInformationLoadedCallback = (callback) => {\r\n        _indoorMapFloorOutlineInformationApi_IndoorMapFloorOutlineInformationLoadedCallback(_emscriptenApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.createIndoorMapFloorOutlineInformation = (indoorMapFloorOutlineInformation) => {\r\n        var indoorMapId = indoorMapFloorOutlineInformation.getIndoorMapId();\r\n        var indoorMapFloorId = indoorMapFloorOutlineInformation.getIndoorMapFloorId();\r\n\r\n        var indoorMapFloorOutlineInformationId = _indoorMapFloorOutlineInformationApi_CreateIndoorMapFloorOutlineInformation(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapFloorId);\r\n\r\n        return indoorMapFloorOutlineInformationId;\r\n    };\r\n\r\n    this.destroyIndoorMapFloorOutlineInformation = (indoorMapFloorOutlineInformationId) => {\r\n        _indoorMapFloorOutlineInformationApi_DestroyIndoorMapFloorOutlineInformation(_emscriptenApiPointer, indoorMapFloorOutlineInformationId);\r\n    };\r\n\r\n    this.getIndoorMapFloorOutlineInformationLoaded = (indoorMapFloorOutlineInformationId) => _indoorMapFloorOutlineInformationApi_GetIndoorMapFloorOutlineInformationLoaded(_emscriptenApiPointer, indoorMapFloorOutlineInformationId);\r\n\r\n    this.tryGetIndoorMapFloorOutlineInformation = (indoorMapFloorOutlineInformationId) => {\r\n        //Get Count of IndoorMapFloorOutlines\r\n        var indoorMapFloorOutlinesCountBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n        var success = _indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlineBufferSize(\r\n            _emscriptenApiPointer,\r\n            indoorMapFloorOutlineInformationId,\r\n            indoorMapFloorOutlinesCountBuf.ptr\r\n        );\r\n\r\n        var indoorMapFloorOutlinesCount = _emscriptenMemory.consumeBufferToArray(indoorMapFloorOutlinesCountBuf)[0];\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var outlinePolygons = [];\r\n        var i;\r\n        for (i = 0; i < indoorMapFloorOutlinesCount; i++) {\r\n            //Get Counts for each outline polygon\r\n            var outerRingPointCountBuf = _emscriptenMemory.createInt32Buffer(1);\r\n            var innerRingsCountBuf = _emscriptenMemory.createInt32Buffer(1);\r\n            var innerRingsTotalPointCountBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n            success = _indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygonBufferSizes(\r\n                _emscriptenApiPointer,\r\n                indoorMapFloorOutlineInformationId,\r\n                i,\r\n                outerRingPointCountBuf.ptr,\r\n                innerRingsCountBuf.ptr,\r\n                innerRingsTotalPointCountBuf.ptr\r\n            );\r\n\r\n            var outerRingPointCount = _emscriptenMemory.consumeBufferToArray(outerRingPointCountBuf)[0];\r\n            var innerRingsCount = _emscriptenMemory.consumeBufferToArray(innerRingsCountBuf)[0];\r\n            var innerRingsTotalPointCount = _emscriptenMemory.consumeBufferToArray(innerRingsTotalPointCountBuf)[0];\r\n\r\n            if (!success) {\r\n                return null;\r\n            }\r\n\r\n            var outerRingPointsLatLngDoublesBuf = _emscriptenMemory.createDoubleBuffer(outerRingPointCount * 2);\r\n            var innerRingsPointCountBuf = _emscriptenMemory.createInt32Buffer(innerRingsCount);\r\n            var innerRingPointsLatLngDoublesBuf = _emscriptenMemory.createDoubleBuffer(innerRingsTotalPointCount * 2);\r\n\r\n            success = _indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygon(\r\n                _emscriptenApiPointer,\r\n                indoorMapFloorOutlineInformationId,\r\n                i,\r\n                outerRingPointsLatLngDoublesBuf.ptr,\r\n                outerRingPointsLatLngDoublesBuf.element_count,\r\n                innerRingsPointCountBuf.ptr,\r\n                innerRingsPointCountBuf.element_count,\r\n                innerRingPointsLatLngDoublesBuf.ptr,\r\n                innerRingPointsLatLngDoublesBuf.element_count\r\n            );\r\n\r\n            var outerRingPointsLatLngDoubles = _emscriptenMemory.consumeBufferToArray(outerRingPointsLatLngDoublesBuf);\r\n            var innerRingsPointCount = _emscriptenMemory.consumeBufferToArray(innerRingsPointCountBuf);\r\n            var innerRingPointsLatLngDoubles = _emscriptenMemory.consumeBufferToArray(innerRingPointsLatLngDoublesBuf);\r\n\r\n            var outerRing = _getOutlinePolygonRing(outerRingPointsLatLngDoubles, 0, outerRingPointCount);\r\n\r\n            var innerRingBufferIndex = 0;\r\n            var innerRings = [];\r\n\r\n            for (var j = 0; j < innerRingsCount; j++) {\r\n                var pointCount = innerRingsPointCount[j];\r\n                var innerRing = _getOutlinePolygonRing(innerRingPointsLatLngDoubles, innerRingBufferIndex, pointCount);\r\n                innerRingBufferIndex = innerRingBufferIndex + (pointCount * 2);\r\n                innerRings.push(innerRing);\r\n            }\r\n\r\n            if (!success) {\r\n                return null;\r\n            }\r\n\r\n            var outlinePolygon = new IndoorMapFloorOutlinePolygon(outerRing, innerRings);\r\n            outlinePolygons.push(outlinePolygon);\r\n        }\r\n\r\n        return outlinePolygons;\r\n    };\r\n\r\n    var _getOutlinePolygonRing = (doublesLatLngArray, startIndex, pointCount) => {\r\n        var pointIndex = startIndex;\r\n        var ringPoints = [];\r\n\r\n        for (var i = 0; i < pointCount; ++i) {\r\n            var lat = doublesLatLngArray[pointIndex++];\r\n            var lng = doublesLatLngArray[pointIndex++];\r\n            ringPoints.push(L.latLng(lat, lng));\r\n        }\r\n\r\n        return new IndoorMapFloorOutlinePolygonRing(ringPoints);\r\n    };\r\n}\r\n\r\nexport default EmscriptenIndoorMapFloorOutlineInformationApi;\r\n","import { getElevationModeInt } from \"../elevation_mode\";\r\nimport { colorToRgba32 } from \"./emscripten_interop_utils.js\";\r\n\r\nexport function EmscriptenPolylineApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _polylineApi_createPolyline = cwrap(\"polylineApi_createPolyline\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _polylineApi_destroyPolyline = cwrap(\"polylineApi_destroyPolyline\", null, [\"number\", \"number\"]);\r\n    var _polylineApi_setIndoorMap = cwrap(\"polylineApi_setIndoorMap\", null, [\"number\", \"number\", \"string\", \"number\", \"number\"]);\r\n    var _polylineApi_setElevation = cwrap(\"polylineApi_setElevation\", null, [\"number\", \"number\", \"number\"]);\r\n    var _polylineApi_setStyleAttributes = cwrap(\"polylineApi_setStyleAttributes\", null, [\"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n    this.createPolyline = (polyline) => {\r\n        var coords = [];\r\n        var perPointElevations = [];\r\n        var anyAltitudes = false;\r\n        polyline.getLatLngs().forEach((latLng) => {\r\n            coords.push(latLng.lat);\r\n            coords.push(latLng.lng);\r\n            var altOrDefault = 0.0;\r\n            if (latLng.alt !== undefined) {\r\n                anyAltitudes = true;\r\n                altOrDefault = latLng.alt;\r\n            }\r\n            perPointElevations.push(altOrDefault);\r\n        });\r\n\r\n        if (!anyAltitudes) {\r\n            perPointElevations = [];\r\n        }\r\n\r\n        var coordsBuf = _emscriptenMemory.createBufferFromArray(coords, _emscriptenMemory.createDoubleBuffer);\r\n        var perPointElevationsBuf = _emscriptenMemory.createBufferFromArray(perPointElevations, _emscriptenMemory.createDoubleBuffer);\r\n\r\n        var indoorMapId = polyline.getIndoorMapId();\r\n        var indoorMapFloorId = polyline.getIndoorMapFloorId();\r\n        var elevation = polyline.getElevation();\r\n        var elevationModeInt = getElevationModeInt(polyline.getElevationMode());\r\n        var width = polyline.getWidth();\r\n        var colorRGBA32 = colorToRgba32(polyline.getColor());\r\n        var miterLimit = polyline.getMiterLimit();\r\n\r\n        var polylineId = _polylineApi_createPolyline(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            indoorMapFloorId,\r\n            elevation,\r\n            elevationModeInt,\r\n            coordsBuf.ptr,\r\n            coordsBuf.element_count,\r\n            perPointElevationsBuf.ptr,\r\n            perPointElevationsBuf.element_count,\r\n            width,\r\n            colorRGBA32,\r\n            miterLimit\r\n        );\r\n\r\n        _emscriptenMemory.freeBuffer(coordsBuf);\r\n        _emscriptenMemory.freeBuffer(perPointElevationsBuf);\r\n\r\n\r\n        return polylineId;\r\n    };\r\n\r\n    this.destroyPolyline = (polylineId) => {\r\n        _polylineApi_destroyPolyline(_emscriptenApiPointer, polylineId);\r\n    };\r\n\r\n    this.updateNativeState = (polylineId, polyline) => {\r\n        if (!polyline._needsNativeUpdate) {\r\n            return;\r\n        }\r\n        polyline._needsNativeUpdate = false;\r\n\r\n        var indoorMapId = polyline.getIndoorMapId();\r\n        var elevationModeInt = getElevationModeInt(polyline.getElevationMode());\r\n        var colorRGBA32 = colorToRgba32(polyline.getColor());\r\n\r\n        _polylineApi_setIndoorMap(\r\n            _emscriptenApiPointer,\r\n            polylineId,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            polyline.getIndoorMapFloorId()\r\n        );\r\n\r\n        _polylineApi_setElevation(\r\n            _emscriptenApiPointer,\r\n            polylineId,\r\n            polyline.getElevation(),\r\n            elevationModeInt\r\n        );\r\n\r\n        _polylineApi_setStyleAttributes(\r\n            _emscriptenApiPointer,\r\n            polylineId,\r\n            polyline.getWidth(),\r\n            colorRGBA32,\r\n            polyline.getMiterLimit()\r\n        );\r\n    };\r\n}\r\n\r\nexport default EmscriptenPolylineApi;\r\n","export function EmscriptenBlueSphereApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n\r\n    var _blueSphereApi_setEnabled = cwrap(\"blueSphereApi_setEnabled\", null, [\"number\", \"number\"]);\r\n    var _blueSphereApi_setCoordinate = cwrap(\"blueSphereApi_setCoordinate\", null, [\"number\", \"number\", \"number\"]);\r\n    var _blueSphereApi_setElevation = cwrap(\"blueSphereApi_setElevation\", null, [\"number\", \"number\"]);\r\n    var _blueSphereApi_setIndoorMap = cwrap(\"blueSphereApi_setIndoorMap\", null, [\"number\", \"string\", \"number\", \"number\"]);\r\n    var _blueSphereApi_setHeadingDegrees = cwrap(\"blueSphereApi_setHeadingDegrees\", null, [\"number\", \"number\"]);\r\n    var _blueSphereApi_showOrientation = cwrap(\"blueSphereApi_showOrientation\", null, [\"number\", \"number\"]);\r\n\r\n    this.updateNativeState = (blueSphereModule) => {\r\n        var location = blueSphereModule.getLocation();\r\n        var indoorMapId = blueSphereModule.getIndoorMapId();\r\n\r\n        if (!location) {\r\n            _blueSphereApi_setEnabled(\r\n                _emscriptenApiPointer,\r\n                false\r\n            );\r\n            return;\r\n        }\r\n\r\n        _blueSphereApi_setEnabled(\r\n            _emscriptenApiPointer,\r\n            blueSphereModule.isEnabled()\r\n        );\r\n\r\n        _blueSphereApi_setCoordinate(\r\n            _emscriptenApiPointer,\r\n            location.lat,\r\n            location.lng\r\n        );\r\n\r\n        _blueSphereApi_setElevation(\r\n            _emscriptenApiPointer,\r\n            blueSphereModule.getElevation()\r\n        );\r\n\r\n        _blueSphereApi_setIndoorMap(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            blueSphereModule.getIndoorMapFloorId()\r\n        );\r\n\r\n        _blueSphereApi_setHeadingDegrees(\r\n            _emscriptenApiPointer,\r\n            blueSphereModule.getHeadingDegrees()\r\n        );\r\n\r\n        _blueSphereApi_showOrientation(\r\n            _emscriptenApiPointer,\r\n            blueSphereModule.isOrientationVisible()\r\n        );\r\n\r\n    };\r\n}\r\n\r\nexport default EmscriptenBlueSphereApi;\r\n","export function EmscriptenMapRuntimeApi(eegeoApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _eegeoApiPointer = eegeoApiPointer;\r\n    var _pauseWebgl = cwrap(\"webglPause\", null, [\"number\"]);\r\n    var _resumeWebgl = cwrap(\"webglResume\", null, [\"number\"]);\r\n    var _removeWebgl = cwrap(\"webglRemove\", null, [\"number\"]);\r\n\r\n    this.onPause = () => {\r\n        _pauseWebgl(_eegeoApiPointer);\r\n    };\r\n\r\n    this.onResume = () => {\r\n        _resumeWebgl(_eegeoApiPointer);\r\n    };\r\n\r\n    this.onRemove = () => {\r\n        _removeWebgl(_eegeoApiPointer);\r\n    };\r\n\r\n}\r\n\r\nexport default EmscriptenMapRuntimeApi;\r\n","export function EmscriptenVersionApi(emscriptenApiPointer, cwrap, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n    \r\n    var _versionApi_GetPlatformVersionStringSize = cwrap(\"versionApi_GetPlatformVersionStringSize\", \"number\", [\"number\"]);\r\n    var _versionApi_TryGetPlatformVersionString = cwrap(\"versionApi_TryGetPlatformVersionString\", \"number\", [\"number\", \"number\", \"number\"]);\r\n\r\n    var _versionApi_GetPlatformHashStringSize = cwrap(\"versionApi_GetPlatformHashStringSize\", \"number\", [\"number\"]);\r\n    var _versionApi_TryGetPlatformHashString = cwrap(\"versionApi_TryGetPlatformHashString\", \"number\", [\"number\", \"number\", \"number\"]);\r\n\r\n    var _tryGetNativeVersionString = (nativeGetBufferSizeFunc, nativeGetStringFunc) => {\r\n        var bufferSize = nativeGetBufferSizeFunc(_emscriptenApiPointer);\r\n        var stringBuffer = _emscriptenMemory.createInt8Buffer(bufferSize);\r\n        var success = nativeGetStringFunc(\r\n            _emscriptenApiPointer,\r\n            stringBuffer.ptr,\r\n            bufferSize\r\n        );\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var stringValue = _emscriptenMemory.consumeUtf8BufferToString(stringBuffer);\r\n        return stringValue;\r\n    };\r\n\r\n    this.getPlatformVersion = () => _tryGetNativeVersionString(\r\n        _versionApi_GetPlatformVersionStringSize,\r\n        _versionApi_TryGetPlatformVersionString\r\n    );\r\n\r\n    this.getPlatformVersionHash = () => _tryGetNativeVersionString(\r\n        _versionApi_GetPlatformHashStringSize,\r\n        _versionApi_TryGetPlatformHashString\r\n    );\r\n}\r\n\r\nexport default EmscriptenVersionApi;\r\n","import { getElevationModeInt } from \"../elevation_mode\";\r\nimport { HeatmapOcclusionMapFeature } from \"../../public/heatmap\";\r\nimport { colorToRgba32 } from \"./emscripten_interop_utils\";\r\n\r\nexport function EmscriptenHeatmapApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _heatmapApi_createHeatmap = cwrap(\"heatmapApi_createHeatmap\", \"number\", [\r\n        \"number\", \"string\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\",\r\n        \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\",\r\n        \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\",\r\n        \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"\r\n    ]);\r\n    var _heatmapApi_destroyHeatmap = cwrap(\"heatmapApi_destroyHeatmap\", null, [\"number\", \"number\"]);\r\n    var _heatmapApi_setIndoorMap = cwrap(\"heatmapApi_setIndoorMap\", null, [\"number\", \"number\", \"string\", \"number\", \"number\"]);\r\n    var _heatmapApi_setElevation = cwrap(\"heatmapApi_setElevation\", null, [\"number\", \"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setDensityBlend = cwrap(\"heatmapApi_setDensityBlend\", null, [\"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setInterpolateDensityByZoom = cwrap(\"heatmapApi_setInterpolateDensityByZoom\", null, [\"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setIntensityBias = cwrap(\"heatmapApi_setIntensityBias\", null, [\"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setIntensityScale = cwrap(\"heatmapApi_setIntensityScale\", null, [\"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setOpacity = cwrap(\"heatmapApi_setOpacity\", null, [\"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setColorGradient = cwrap(\"heatmapApi_setColorGradient\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setResolution = cwrap(\"heatmapApi_setResolution\", null, [\"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setHeatmapDensities = cwrap(\"heatmapApi_setHeatmapDensities\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_useApproximation = cwrap(\"heatmapApi_useApproximation\", null, [\"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setData = cwrap(\"heatmapApi_setData\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n    const occludedMapFeaturesToInt = (occludedMapFeatures) => {\r\n        var occludedMapFeaturesInt = 0;\r\n\r\n        occludedMapFeatures.forEach(function (occlusionFeature) {\r\n            if (occlusionFeature === HeatmapOcclusionMapFeature.GROUND) {\r\n                occludedMapFeaturesInt = occludedMapFeaturesInt | 0x1;\r\n            }\r\n            else if (occlusionFeature === HeatmapOcclusionMapFeature.BUILDINGS) {\r\n                occludedMapFeaturesInt = occludedMapFeaturesInt | 0x2;\r\n            }\r\n            else if (occlusionFeature === HeatmapOcclusionMapFeature.TREES) {\r\n                occludedMapFeaturesInt = occludedMapFeaturesInt | 0x4;\r\n            }\r\n            else if (occlusionFeature === HeatmapOcclusionMapFeature.TRANSPORT) {\r\n                occludedMapFeaturesInt = occludedMapFeaturesInt | 0x8;\r\n            }\r\n        });\r\n\r\n        return occludedMapFeaturesInt;\r\n    };\r\n\r\n    const _buildFlatData = (pointData) => {\r\n        var dataFlat = [];\r\n        pointData.forEach((pointDatum) => {\r\n            dataFlat.push(pointDatum.latLng.lat);\r\n            dataFlat.push(pointDatum.latLng.lng);\r\n            var altOrDefault = 0.0;\r\n            if (pointDatum.latLng.alt !== undefined) {\r\n                altOrDefault = pointDatum.latLng.alt;\r\n            }\r\n            dataFlat.push(altOrDefault);\r\n            dataFlat.push(pointDatum.weight);\r\n        });\r\n\r\n        return dataFlat;\r\n    };\r\n\r\n    this.createHeatmap = (heatmap) => {\r\n        // polygon\r\n        var polygonCoords = [];\r\n        var polygonRingVertexCounts = [];\r\n\r\n        heatmap.getPolygonPoints().forEach((ring) => {\r\n            polygonRingVertexCounts.push(ring.length);\r\n            ring.forEach((point) => {\r\n                polygonCoords.push(point.lat);\r\n                polygonCoords.push(point.lng);\r\n                polygonCoords.push(point.alt ? point.alt : 0.0);\r\n            });\r\n            });\r\n\r\n        if (polygonCoords.length === 0) {\r\n            polygonRingVertexCounts.push(0);\r\n        }\r\n\r\n        var polygonVertexCoordsBuffer = _emscriptenMemory.createBufferFromArray(polygonCoords, _emscriptenMemory.createDoubleBuffer);\r\n        var polygonRingVertexCountsBuffer = _emscriptenMemory.createBufferFromArray(polygonRingVertexCounts, _emscriptenMemory.createInt32Buffer);\r\n\r\n        var indoorMapId = heatmap.getIndoorMapId();\r\n        var indoorMapFloorId = heatmap.getIndoorMapFloorId();\r\n        var elevation = heatmap.getElevation();\r\n        var elevationModeInt = getElevationModeInt(heatmap.getElevationMode());\r\n\r\n        // data\r\n        var dataFlat = _buildFlatData(heatmap.getData());\r\n        var pointDataBuf = _emscriptenMemory.createBufferFromArray(dataFlat, _emscriptenMemory.createDoubleBuffer);\r\n\r\n        var heatmapDensityStops = [];\r\n        var heatmapRadii = [];\r\n        var heatmapGains = [];\r\n        heatmap.getDensityStops().forEach((density) => {\r\n            heatmapDensityStops.push(density.stop);\r\n            heatmapRadii.push(density.radius);\r\n            heatmapGains.push(density.gain);\r\n        });\r\n\r\n        var gradientStops = [];\r\n        var gradientColors = [];\r\n        heatmap.getColorGradient().forEach((gradient) => {\r\n            gradientStops.push(gradient.stop);\r\n            gradientColors.push(colorToRgba32(gradient.color));\r\n        });\r\n\r\n        // heatmap_todo investigate supporting ES6 for Float32Array / typed arrays\r\n        var heatmapDensityStopsBuffer = _emscriptenMemory.createBufferFromArray(heatmapDensityStops, _emscriptenMemory.createDoubleBuffer);\r\n        var heatmapRadiiBuffer = _emscriptenMemory.createBufferFromArray(heatmapRadii, _emscriptenMemory.createDoubleBuffer);\r\n        var heatmapGainsBuffer = _emscriptenMemory.createBufferFromArray(heatmapGains, _emscriptenMemory.createDoubleBuffer);\r\n        var gradientStopsBuffer = _emscriptenMemory.createBufferFromArray(gradientStops, _emscriptenMemory.createDoubleBuffer);\r\n        var gradientColorsBuffer = _emscriptenMemory.createBufferFromArray(gradientColors, _emscriptenMemory.createInt32Buffer);\r\n        var occludedMapFeaturesInt = occludedMapFeaturesToInt(heatmap.getOccludedMapFeatures());\r\n\r\n        var heatmapId = _heatmapApi_createHeatmap(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            indoorMapFloorId,\r\n            elevation,\r\n            elevationModeInt,\r\n            polygonVertexCoordsBuffer.ptr,\r\n            polygonVertexCoordsBuffer.element_count,\r\n            polygonRingVertexCountsBuffer.ptr,\r\n            polygonRingVertexCountsBuffer.element_count,\r\n            pointDataBuf.ptr,\r\n            pointDataBuf.element_count,\r\n            heatmap.getWeightMin(),\r\n            heatmap.getWeightMax(),\r\n            heatmap.getResolutionPixels(),\r\n            heatmap.getTextureBorderPercent(),\r\n            heatmap.getUseApproximation() ? 1 : 0,\r\n            heatmapDensityStopsBuffer.ptr,\r\n            heatmapDensityStopsBuffer.element_count,\r\n            heatmapRadiiBuffer.ptr,\r\n            heatmapRadiiBuffer.element_count,\r\n            heatmapGainsBuffer.ptr,\r\n            heatmapGainsBuffer.element_count,\r\n            gradientStopsBuffer.ptr,\r\n            gradientStopsBuffer.element_count,\r\n            gradientColorsBuffer.ptr,\r\n            gradientColorsBuffer.element_count,\r\n            heatmap.getDensityBlend(),\r\n            heatmap.getInterpolateDensityByZoom(),\r\n            heatmap.getZoomMin(),\r\n            heatmap.getZoomMax(),\r\n            heatmap.getOpacity(),\r\n            heatmap.getIntensityBias(),\r\n            heatmap.getIntensityScale(),\r\n            occludedMapFeaturesInt,\r\n            heatmap.getOccludedAlpha(),\r\n            heatmap.getOccludedSaturation(),\r\n            heatmap.getOccludedBrightness()\r\n        );\r\n\r\n        _emscriptenMemory.freeBuffer(polygonVertexCoordsBuffer);\r\n        _emscriptenMemory.freeBuffer(polygonRingVertexCountsBuffer);\r\n        _emscriptenMemory.freeBuffer(pointDataBuf);\r\n        _emscriptenMemory.freeBuffer(heatmapDensityStopsBuffer);\r\n        _emscriptenMemory.freeBuffer(heatmapRadiiBuffer);\r\n        _emscriptenMemory.freeBuffer(heatmapGainsBuffer);\r\n        _emscriptenMemory.freeBuffer(gradientStopsBuffer);\r\n        _emscriptenMemory.freeBuffer(gradientColorsBuffer);\r\n\r\n        return heatmapId;\r\n    };\r\n\r\n    this.destroyHeatmap = (heatmapId) => {\r\n        _heatmapApi_destroyHeatmap(_emscriptenApiPointer, heatmapId);\r\n    };\r\n\r\n    this.updateNativeState = (heatmapId, heatmap) => {\r\n        if (!heatmap._anyChanged()) {\r\n            return;\r\n        }\r\n        var changedFlags = heatmap._getChangedFlags();\r\n\r\n        if (changedFlags.indoorMap) {\r\n            var indoorMapId = heatmap.getIndoorMapId();\r\n            _heatmapApi_setIndoorMap(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                indoorMapId,\r\n                indoorMapId.length,\r\n                heatmap.getIndoorMapFloorId()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.elevation) {\r\n            var elevationModeInt = getElevationModeInt(heatmap.getElevationMode());\r\n            _heatmapApi_setElevation(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getElevation(),\r\n                elevationModeInt\r\n            );\r\n        }\r\n\r\n        if (changedFlags.densityBlend) {\r\n            _heatmapApi_setDensityBlend(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getDensityBlend()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.densityBlend) {\r\n            _heatmapApi_setInterpolateDensityByZoom(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getInterpolateDensityByZoom(),\r\n                heatmap.getZoomMin(),\r\n                heatmap.getZoomMax()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.intensityBias) {\r\n            _heatmapApi_setIntensityBias(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getIntensityBias()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.intensityScale) {\r\n            _heatmapApi_setIntensityScale(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getIntensityScale()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.opacity) {\r\n            _heatmapApi_setOpacity(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getOpacity()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.colorGradient) {\r\n            var gradientStops = [];\r\n            var gradientColors = [];\r\n            heatmap.getColorGradient().forEach((gradient) => {\r\n                gradientStops.push(gradient.stop);\r\n                gradientColors.push(colorToRgba32(gradient.color));\r\n            });\r\n\r\n            var gradientStopsBuffer = _emscriptenMemory.createBufferFromArray(gradientStops, _emscriptenMemory.createDoubleBuffer);\r\n            var gradientColorsBuffer = _emscriptenMemory.createBufferFromArray(gradientColors, _emscriptenMemory.createInt32Buffer);\r\n\r\n            _heatmapApi_setColorGradient(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                gradientStopsBuffer.ptr,\r\n                gradientStopsBuffer.element_count,\r\n                gradientColorsBuffer.ptr,\r\n                gradientColorsBuffer.element_count\r\n            );\r\n\r\n            _emscriptenMemory.freeBuffer(gradientStopsBuffer);\r\n            _emscriptenMemory.freeBuffer(gradientColorsBuffer);\r\n        }\r\n\r\n        if (changedFlags.resolution) {\r\n            _heatmapApi_setResolution(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getResolutionPixels()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.densityStops) {\r\n            var heatmapDensityStops = [];\r\n            var heatmapRadii = [];\r\n            var heatmapGains = [];\r\n            heatmap.getDensityStops().forEach((density) => {\r\n                heatmapDensityStops.push(density.stop);\r\n                heatmapRadii.push(density.radius);\r\n                heatmapGains.push(density.gain);\r\n            });\r\n\r\n            var heatmapDensityStopsBuffer = _emscriptenMemory.createBufferFromArray(heatmapDensityStops, _emscriptenMemory.createDoubleBuffer);\r\n            var heatmapRadiiBuffer = _emscriptenMemory.createBufferFromArray(heatmapRadii, _emscriptenMemory.createDoubleBuffer);\r\n            var heatmapGainsBuffer = _emscriptenMemory.createBufferFromArray(heatmapGains, _emscriptenMemory.createDoubleBuffer);\r\n\r\n            _heatmapApi_setHeatmapDensities(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmapDensityStopsBuffer.ptr,\r\n                heatmapDensityStopsBuffer.element_count,\r\n                heatmapRadiiBuffer.ptr,\r\n                heatmapRadiiBuffer.element_count,\r\n                heatmapGainsBuffer.ptr,\r\n                heatmapGainsBuffer.element_count\r\n            );\r\n\r\n            _emscriptenMemory.freeBuffer(heatmapDensityStopsBuffer);\r\n            _emscriptenMemory.freeBuffer(heatmapRadiiBuffer);\r\n            _emscriptenMemory.freeBuffer(heatmapGainsBuffer);\r\n        }\r\n\r\n        if (changedFlags.useApproximation) {\r\n            _heatmapApi_useApproximation(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getUseApproximation() ? 1 : 0\r\n            );\r\n        }\r\n\r\n        if (changedFlags.data) {\r\n\r\n            var dataFlat = _buildFlatData(heatmap.getData());\r\n            var pointDataBuf = _emscriptenMemory.createBufferFromArray(dataFlat, _emscriptenMemory.createDoubleBuffer);\r\n\r\n            _heatmapApi_setData(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                pointDataBuf.ptr,\r\n                pointDataBuf.element_count,\r\n                heatmap.getWeightMin(),\r\n                heatmap.getWeightMax()\r\n            );\r\n\r\n            _emscriptenMemory.freeBuffer(pointDataBuf);\r\n        }\r\n\r\n\r\n        heatmap._clearChangedFlags();\r\n    };\r\n}\r\n\r\nexport default EmscriptenHeatmapApi;\r\n","export function EmscriptenFrameRateApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n\r\n    var _frameRateApi_SetTargetVSyncInterval = cwrap(\"frameRateApi_SetTargetVSyncInterval\", null, [\"number\", \"number\"]);\r\n    var _frameRateApi_SetThrottledTargetFrameInterval = cwrap(\"frameRateApi_SetThrottledTargetFrameInterval\", null, [\"number\", \"number\"]);\r\n    var _frameRateApi_SetIdleSecondsBeforeThrottle = cwrap(\"frameRateApi_SetIdleSecondsBeforeThrottle\", null, [\"number\", \"number\"]);\r\n    var _frameRateApi_SetThrottleWhenIdleEnabled = cwrap(\"frameRateApi_SetThrottleWhenIdleEnabled\", null, [\"number\", \"number\"]);\r\n    var _frameRateApi_CancelThrottle = cwrap(\"frameRateApi_CancelThrottle\", null, [\"number\"]);\r\n\r\n    this.setTargetVSyncInterval = (targetVSyncInterval) => {\r\n        _frameRateApi_SetTargetVSyncInterval(_emscriptenApiPointer, targetVSyncInterval);\r\n    };\r\n\r\n    this.setThrottledTargetFrameInterval = (throttledTargetFrameIntervalMS) => {\r\n        _frameRateApi_SetThrottledTargetFrameInterval(_emscriptenApiPointer, throttledTargetFrameIntervalMS);\r\n    };\r\n\r\n    this.setIdleSecondsBeforeThrottle = (idleSecondsBeforeThrottle) => {\r\n        _frameRateApi_SetIdleSecondsBeforeThrottle(_emscriptenApiPointer, idleSecondsBeforeThrottle);\r\n    };\r\n\r\n    this.setThrottleWhenIdleEnabled = (enabled) => {\r\n        _frameRateApi_SetThrottleWhenIdleEnabled(_emscriptenApiPointer, enabled ? 1 : 0);\r\n    };\r\n\r\n    this.cancelThrottle = () => {\r\n        _frameRateApi_CancelThrottle(_emscriptenApiPointer);\r\n    };\r\n}\r\n\r\nexport default EmscriptenFrameRateApi;\r\n","import EmscriptenMemory from \"./emscripten_memory\";\r\nimport EmscriptenGeofenceApi from \"./emscripten_geofence_api.js\";\r\nimport EmscriptenIndoorsApi from \"./emscripten_indoors_api.js\";\r\nimport EmscriptenPrecacheApi from \"./emscripten_precache_api.js\";\r\nimport EmscriptenSpacesApi from \"./emscripten_spaces_api.js\";\r\nimport EmscriptenThemesApi from \"./emscripten_themes_api.js\";\r\nimport EmscriptenCameraApi from \"./emscripten_camera_api.js\";\r\nimport EmscriptenExpandFloorsApi from \"./emscripten_expand_floors_api.js\";\r\nimport EmscriptenIndoorEntityApi from \"./emscripten_indoor_entity_api.js\";\r\nimport EmscriptenBuildingsApi from \"./emscripten_buildings_api.js\";\r\nimport EmscriptenRenderingApi from \"./emscripten_rendering_api.js\";\r\nimport EmscriptenLayerPointMappingApi from \"./emscripten_layer_point_mapping_api.js\";\r\nimport EmscriptenPropsApi from \"./emscripten_props_api.js\";\r\nimport EmscriptenIndoorMapEntityInformationApi from \"./emscripten_indoor_map_entity_information_api.js\";\r\nimport EmscriptenIndoorMapFloorOutlineInformationApi from \"./emscripten_indoor_map_floor_outline_information_api.js\";\r\nimport EmscriptenPolylineApi from \"./emscripten_polyline_api.js\";\r\nimport EmscriptenBlueSphereApi from \"./emscripten_blue_sphere_api.js\";\r\nimport EmscriptenMapRuntimeApi from \"./emscripten_map_runtime_api.js\";\r\nimport EmscriptenVersionApi from \"./emscripten_version_api.js\";\r\nimport EmscriptenHeatmapApi from \"./emscripten_heatmap_api.js\";\r\nimport EmscriptenFrameRateApi from \"./emscripten_frame_rate_api.js\";\r\n\r\nexport function EmscriptenApi(emscriptenModule) {\r\n\r\n    var _emscriptenModule = emscriptenModule;\r\n    var _ready = false;\r\n    var _eegeoApiPointer = null;\r\n    var _emscriptenApiPointer = null;\r\n\r\n    this.geofenceApi = null;\r\n    this.indoorsApi = null;\r\n    this.precacheApi = null;\r\n    this.spacesApi = null;\r\n    this.themesApi = null;\r\n    this.cameraApi = null;\r\n    this.expandFloorsApi = null;\r\n    this.indoorEntityApi = null;\r\n    this.renderingApi = null;\r\n    this.buildingsApi = null;\r\n    this.layerPointMappingApi = null;\r\n    this.propsApi = null;\r\n    this.indoorMapEntityInformationApi = null;\r\n    this.indoorMapFloorOutlineInformationApi = null;\r\n    this.polylineApi = null;\r\n    this.blueSphereApi = null;\r\n    this.mapRuntimeApi = null;\r\n    this.versionApi = null;\r\n    this.heatmapApi = null;\r\n    this.frameRateApi = null;\r\n\r\n    this.onInitialized = (eegeoApiPointer, emscriptenApiPointer, onUpdateCallback, onDrawCallback, onInitialStreamingCompletedCallback) => {\r\n        _eegeoApiPointer = eegeoApiPointer;\r\n        _emscriptenApiPointer = emscriptenApiPointer;\r\n\r\n        var cwrap = _emscriptenModule.cwrap;\r\n\r\n        var emscriptenMemory = new EmscriptenMemory(_emscriptenModule);\r\n\r\n        // legacy - eegeo api usage via eegeo api pointer\r\n        this.geofenceApi = new EmscriptenGeofenceApi(_eegeoApiPointer, cwrap, _emscriptenModule);\r\n        this.spacesApi = new EmscriptenSpacesApi(_eegeoApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.themesApi = new EmscriptenThemesApi(_eegeoApiPointer, cwrap, _emscriptenModule);\r\n        this.expandFloorsApi = new EmscriptenExpandFloorsApi(_eegeoApiPointer, cwrap, _emscriptenModule);\r\n\r\n        // emscripten-specific api usage via emscripten api pointer\r\n        // New apis should follow this pattern\r\n        this.layerPointMappingApi = new EmscriptenLayerPointMappingApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.buildingsApi = new EmscriptenBuildingsApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.indoorsApi = new EmscriptenIndoorsApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.cameraApi = new EmscriptenCameraApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.indoorEntityApi = new EmscriptenIndoorEntityApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.precacheApi = new EmscriptenPrecacheApi(_emscriptenApiPointer, cwrap, _emscriptenModule);\r\n        this.indoorMapEntityInformationApi = new EmscriptenIndoorMapEntityInformationApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.indoorMapFloorOutlineInformationApi = new EmscriptenIndoorMapFloorOutlineInformationApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.polylineApi = new EmscriptenPolylineApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.blueSphereApi = new EmscriptenBlueSphereApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.mapRuntimeApi = new EmscriptenMapRuntimeApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.versionApi = new EmscriptenVersionApi(_emscriptenApiPointer, cwrap, emscriptenMemory);\r\n        this.heatmapApi = new EmscriptenHeatmapApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.renderingApi = new EmscriptenRenderingApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.frameRateApi = new EmscriptenFrameRateApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.propsApi = new EmscriptenPropsApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n\r\n        var _setTopLevelCallbacks = _emscriptenModule.cwrap(\"setTopLevelCallbacks\", null, [\"number\", \"number\", \"number\", \"number\"]);\r\n        _setTopLevelCallbacks(\r\n            _eegeoApiPointer,\r\n            _emscriptenModule.addFunction(onUpdateCallback),\r\n            _emscriptenModule.addFunction(onDrawCallback),\r\n            _emscriptenModule.addFunction(onInitialStreamingCompletedCallback)\r\n        );\r\n        _ready = true;\r\n    };\r\n\r\n    this.ready = () => _ready;\r\n}\r\n\r\nexport default EmscriptenApi;\r\n","import EegeoMapController from \"../private/eegeo_map_controller\";\nimport EmscriptenApi from \"../private/emscripten_api/emscripten_api\";\nimport { Module } from \"../types/module\";\nimport type { Map, MapOptions } from \"./map\";\nimport \"../types/window\"; // defines the overrides for the window global\n\n/*\n * This is a collection of related functions extracted from the `wrld.js` (now .ts) file.\n * It relies on unscoped variables to store various states, maybe this could be converted to a class/object instead?\n */\n\nconst _eeGeoWebGLVersion = \"public/v2117\";\nconst _baseUrl = `https://cdn-webgl.wrld3d.com/eegeojs/${_eeGeoWebGLVersion}/`;\nconst _appName = \"eeGeoWebGL.jgz\";\n\nconst _mapObjects: EegeoMapController[] = [];\nlet _emscriptenStartedLoading = false;\nlet _emscriptenFinishedLoading = false;\nlet _mapsWaitingInitialization: Module[] = [];\n\nconst onEmscriptenLoaded = () => {\n  _emscriptenFinishedLoading = true;\n  _mapsWaitingInitialization.forEach((module) => {\n    window.createWrldModule(module);\n  });\n  _mapsWaitingInitialization = [];\n};\n\nconst createEmscriptenModule = () => {\n  if (!_emscriptenStartedLoading) {\n    const script = document.createElement(\"script\");\n    script.src = `${_baseUrl}${_appName}`;\n    script.onload = onEmscriptenLoaded;\n    document.body.appendChild(script);\n    _emscriptenStartedLoading = true;\n  }\n\n  const Module: Module = {} as Module;\n  Module.locateFile = (url) => {\n    const absUrl = `${_baseUrl}${url}`;\n    return absUrl;\n  };\n  Module.onExit = (exitCode) => {\n    if (exitCode === 1) {\n      let message = \"Error: wrld.js failed to initialize\";\n      if (!Module.ctx) {\n        message = \"Error: WebGL unavailable in this browser\";\n      }\n      _mapObjects.forEach((map) => {\n        map.onError(message);\n      });\n    }\n  };\n  return Module;\n};\n\nconst initializeMap = (module: Module) => {\n  if (!_emscriptenFinishedLoading) {\n    _mapsWaitingInitialization.push(module);\n  }\n  else {\n    window.createWrldModule(module);\n  }\n};\n\nconst findMapContainerElement = (elementOrId: string | HTMLElement): HTMLElement => {\n  if (elementOrId instanceof HTMLElement) {\n    return elementOrId;\n  }\n\n  if (typeof elementOrId === \"string\") {\n    const element = document.getElementById(elementOrId);\n    if (element) return element;\n  }\n\n  const idError = (elementOrId === null) ? \"\" : (` with id \"${elementOrId}\"`);\n  throw \"No map container found\" + idError;\n};\n\nexport const map = (domElement: HTMLElement | string, apiKey: string, options?: MapOptions): Map => {\n  const wrldModule = createEmscriptenModule();\n\n  domElement = findMapContainerElement(domElement);\n\n  const browserDocument = document;\n  const browserWindow = window;\n  const mapId = _mapObjects.length;\n  const mapApiObject = new EmscriptenApi(wrldModule);\n  const mapOptions = options || {};\n  const onMapRemove = () => { delete _mapObjects[mapId]; };\n  const map = new EegeoMapController(mapId, mapApiObject, domElement, apiKey, browserWindow, browserDocument, wrldModule, mapOptions, onMapRemove);\n  _mapObjects.push(map);\n\n  initializeMap(wrldModule);\n\n  return map.leafletMap;\n};\n\nexport const getMapById = (mapId: number): EegeoMapController => _mapObjects[mapId];\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\nimport { ElevationMode } from \"../types/elevationMode\";\r\nimport { WrldOptions } from \"../types/wrldOptions\";\r\n\r\nexport type CircleOptions = L.CircleMarkerOptions & WrldOptions;\r\n\r\nexport declare class CircleType extends L.Circle {\r\n  options: CircleOptions;\r\n  constructor(latLng: L.LatLngExpression, options?: CircleOptions);\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n  getElevationMode(): ElevationMode;\r\n  setElevationMode(elevationMode: ElevationMode): this;\r\n}\r\n\r\nexport type Circle = CircleType;\r\n\r\nexport const Circle: typeof CircleType = L.Circle.extend({\r\n  options: {\r\n    elevation: 0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n  },\r\n\r\n  _project: function () {\r\n    // Circles are defined as a single LatLng, and consequently won't scale correctly when indoor maps are expanded\r\n    // (other prims like polygons 'just work', as all LatLngs are transformed on the C++ side).\r\n    // To fix this, we'd need to adjust the calculations below to take into account a scale transform, or similar\r\n    // (this is not currently exposed in the api).\r\n    const latLng = this._map.latLngsForLayer(this)[0];\r\n    const lat = latLng.lat;\r\n    const lng = latLng.lng;\r\n    const alt = latLng.alt || 0.0;\r\n\r\n    const map = this._map,\r\n      degToRad = Math.PI / 180,\r\n      earthRadius = 6378100;\r\n\r\n    const latR = this._mRadius / earthRadius / degToRad;\r\n    const a = Math.sin(lat * degToRad);\r\n    const b = Math.cos(lat * degToRad);\r\n    let lngR = Math.acos((Math.cos(latR * degToRad) - a * a) / (b * b)) / degToRad;\r\n\r\n    if (isNaN(lngR) || lngR === 0) {\r\n      lngR = latR / Math.cos(lat * degToRad);\r\n    }\r\n\r\n    const heading = map.getCameraHeadingDegrees() * degToRad;\r\n    const forwardLatLng = [lat + latR * Math.cos(heading), lng + lngR * Math.sin(heading), alt];\r\n    const rightLatLng = [lat - latR * Math.sin(heading), lng + lngR * Math.cos(heading), alt];\r\n    this._point = map.latLngToLayerPoint([lat, lng, alt]);\r\n    this._radius = isNaN(lngR)\r\n      ? 0\r\n      : Math.max(Math.round(this._point.distanceTo(map.latLngToLayerPoint(rightLatLng))), 1);\r\n    this._radiusY = Math.max(Math.round(this._point.distanceTo(map.latLngToLayerPoint(forwardLatLng))), 1);\r\n\r\n    this._updateBounds();\r\n  },\r\n\r\n  getElevation: function () {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  setElevation: function (elevation: number) {\r\n    this.options.elevation = elevation;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (mode: ElevationMode) {\r\n    if (isValidElevationMode(mode)) {\r\n      this.options.elevationMode = mode;\r\n\r\n      if (this._map !== null) {\r\n        this._map._createPointMapping(this);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  getElevationMode: function () {\r\n    return this.options.elevationMode;\r\n  },\r\n});\r\n\r\nexport const circle = factoryFor(Circle);\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\nimport { WrldOptions } from \"../types/wrldOptions\";\r\nimport { ElevationMode } from \"../types/elevationMode\";\r\nimport Map from \"./map\";\r\n\r\nexport type PolygonOptions = L.PolylineOptions & WrldOptions;\r\n\r\ndeclare class PolygonType extends L.Polygon {\r\n  options: PolygonOptions;\r\n  protected _map: Map;\r\n  constructor(\r\n    latlngs: L.LatLngExpression[] | L.LatLngExpression[][] | L.LatLngExpression[][][],\r\n    options?: PolygonOptions\r\n  );\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n  getElevationMode(): ElevationMode;\r\n  setElevationMode(elevationMode: ElevationMode): this;\r\n  protected _setLatLngs(latlngs: L.LatLng[]): this;\r\n}\r\n\r\nexport type Polygon = PolygonType;\r\n\r\nexport const Polygon: typeof PolygonType = L.Polygon.extend({\r\n  options: {\r\n    elevation: 0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n  },\r\n\r\n  _projectLatlngs: function (this: Polygon, latlngs: L.LatLng[], result: undefined, projectedBounds: L.LatLngBounds[]) {\r\n    if (!this._map._projectLatlngs(this, latlngs, result, projectedBounds)) {\r\n      // @ts-ignore we don't have a type definition for this\r\n      L.Polygon.prototype._projectLatlngs.call(this, latlngs, result, projectedBounds);\r\n    }\r\n  },\r\n\r\n  /** Replaces all the points in the polygon with the given array of geographical points. **/\r\n  setLatLngs: function (this: Polygon, latlngs: L.LatLng[]) {\r\n    this._setLatLngs(latlngs);\r\n\r\n    if (this._map) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this.redraw();\r\n  },\r\n\r\n  _convertLatLngs: function (this: Polygon, latlngs: L.LatLng[]) {\r\n    // @ts-ignore we don't have a type definition for this\r\n    const result = L.Polygon.prototype._convertLatLngs.call(this, latlngs);\r\n\r\n    if (this._map) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return result;\r\n  },\r\n\r\n  getElevation: function (this: Polygon) {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  setElevation: function (this: Polygon, elevation: number) {\r\n    this.options.elevation = elevation;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (this: Polygon, mode: ElevationMode) {\r\n    if (isValidElevationMode(mode)) {\r\n      this.options.elevationMode = mode;\r\n\r\n      if (this._map !== null) {\r\n        this._map._createPointMapping(this);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  getElevationMode: function () {\r\n    return this.options.elevationMode;\r\n  },\r\n});\r\n\r\nexport const polygon = factoryFor(Polygon);\r\n","import { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\nimport L from \"leaflet\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport { WrldOptions } from \"../types/wrldOptions\";\r\nimport { ElevationMode } from \"../types/elevationMode\";\r\nimport Map from \"./map\";\r\n\r\nexport type PolylineOptions = L.PolylineOptions & WrldOptions;\r\n\r\ndeclare class PolylineType extends L.Polyline {\r\n  options: PolylineOptions;\r\n  protected _map: Map;\r\n  constructor(\r\n    latlngs: L.LatLngExpression[] | L.LatLngExpression[][] | L.LatLngExpression[][][],\r\n    options?: PolylineOptions\r\n  );\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n  getElevationMode(): ElevationMode;\r\n  setElevationMode(elevationMode: ElevationMode): this;\r\n}\r\n\r\nexport type Polyline = PolylineType;\r\n\r\nexport const Polyline: typeof PolylineType = L.Polyline.extend({\r\n  options: {\r\n    elevation: 0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n  },\r\n\r\n  _projectLatlngs: function (this: Polyline, latlngs: L.LatLng[], result: unknown, projectedBounds: L.LatLngBounds[]) {\r\n    if (!this._map._projectLatlngs(this, latlngs, result, projectedBounds)) {\r\n      // @ts-ignore we don't have a type definition for this\r\n      L.Polyline.prototype._projectLatlngs.call(this, latlngs, result, projectedBounds);\r\n    }\r\n  },\r\n\r\n  /** Replaces all the points in the polyline with the given array of geographical points. */\r\n  setLatLngs: function (\r\n    this: Polyline,\r\n    latlngs: L.LatLngExpression[] | L.LatLngExpression[][] | L.LatLngExpression[][][]\r\n  ) {\r\n    const redraw = L.Polyline.prototype.setLatLngs.call(this, latlngs);\r\n\r\n    if (this._map) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return redraw;\r\n  },\r\n\r\n  addLatLng: function (this: Polyline, latlng: L.LatLngExpression | L.LatLngExpression[], latlngs?: L.LatLng[]) {\r\n    const redraw = L.Polyline.prototype.addLatLng.call(this, latlng, latlngs);\r\n\r\n    if (this._map) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return redraw;\r\n  },\r\n\r\n  getElevation: function (this: Polyline) {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  setElevation: function (this: Polyline, elevation: number) {\r\n    this.options.elevation = elevation;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (this: Polyline, mode: ElevationMode) {\r\n    if (isValidElevationMode(mode)) {\r\n      this.options.elevationMode = mode;\r\n\r\n      if (this._map !== null) {\r\n        this._map._createPointMapping(this);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  getElevationMode: function (this: Polyline) {\r\n    return this.options.elevationMode;\r\n  },\r\n});\r\n\r\nexport const polyline = factoryFor(Polyline);\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\n\r\nimport { WrldOptions } from \"../types/wrldOptions\";\r\nimport { ElevationMode } from \"../types/elevationMode\";\r\nimport Map from \"./map\";\r\n\r\nexport type RectangleOptions = L.PolylineOptions & WrldOptions;\r\n\r\ndeclare class RectangleType extends L.Rectangle {\r\n  options: RectangleOptions;\r\n  protected _map: Map;\r\n  constructor(latLngBounds: L.LatLngBoundsExpression, options?: RectangleOptions);\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n  getElevationMode(): ElevationMode;\r\n  setElevationMode(elevationMode: ElevationMode): this;\r\n}\r\n\r\nexport type Rectangle = RectangleType;\r\n\r\nexport const Rectangle: typeof RectangleType = L.Rectangle.extend({\r\n  options: {\r\n    elevation: 0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n  },\r\n\r\n  _projectLatlngs: function (\r\n    this: Rectangle,\r\n    latlngs: L.LatLng[],\r\n    result: undefined,\r\n    projectedBounds: L.LatLngBounds[]\r\n  ) {\r\n    if (!this._map._projectLatlngs(this, latlngs, result, projectedBounds)) {\r\n      // @ts-ignore we don't have a type definition for this\r\n      L.Rectangle.prototype._projectLatlngs.call(this, latlngs, result, projectedBounds);\r\n    }\r\n  },\r\n\r\n  // @method setLatLngs(latlngs: LatLng[]): this\r\n  // Replaces all the points in the polyline with the given array of geographical points.\r\n  setLatLngs: function (\r\n    this: Rectangle,\r\n    latlngs: L.LatLngExpression[] | L.LatLngExpression[][] | L.LatLngExpression[][][]\r\n  ) {\r\n    const redraw = L.Rectangle.prototype.setLatLngs.call(this, latlngs);\r\n\r\n    if (this._map) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return redraw;\r\n  },\r\n\r\n  getElevation: function (this: Rectangle) {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  setElevation: function (this: Rectangle, elevation: number) {\r\n    this.options.elevation = elevation;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (this: Rectangle, mode: ElevationMode) {\r\n    if (isValidElevationMode(mode)) {\r\n      this.options.elevationMode = mode;\r\n\r\n      if (this._map !== null) {\r\n        this._map._createPointMapping(this);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  getElevationMode: function (this: Rectangle) {\r\n    return this.options.elevationMode;\r\n  },\r\n});\r\n\r\nexport const rectangle = factoryFor(Rectangle);\r\n","import L from \"leaflet\";\r\n\r\nimport { ElevationMode } from \"../types/elevationMode\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\nimport { Map, MapId, MapFloorId } from \"../wrld.js\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\n\r\nexport type PropOptions = {\r\n  elevation?: number;\r\n  elevationMode?: ElevationMode;\r\n  indoorMapId?: MapId;\r\n  indoorMapFloorId?: MapFloorId;\r\n  headingDegrees?: number;\r\n};\r\n\r\ntype Location = Parameters<typeof L.latLng>[0];\r\n\r\nexport class Prop {\r\n  private _map: null | Map;\r\n  private _name: string;\r\n  private _geometryId: string;\r\n  private __geometryIdNeedsChanged: boolean;\r\n  private _location: L.LatLng;\r\n  private __locationNeedsChanged: boolean;\r\n  private _indoorMapId: MapId;\r\n  private _indoorMapFloorId: MapFloorId;\r\n  private _headingDegrees: number;\r\n  private __headingDegreesNeedsChanged: boolean;\r\n  private _elevation: number;\r\n  private __elevationNeedsChanged: boolean;\r\n  private _elevationMode: ElevationMode;\r\n  private __elevationModeNeedsChanged: boolean;\r\n\r\n  constructor(name: string, geometryId: string, location: Location, config: PropOptions = {}) {\r\n    this._map = null;\r\n    this._name = name;\r\n    this._geometryId = geometryId;\r\n    this.__geometryIdNeedsChanged = false;\r\n    this._location = L.latLng(location);\r\n    this.__locationNeedsChanged = false;\r\n    this._indoorMapId = config[\"indoorMapId\"] || \"\";\r\n    this._indoorMapFloorId = config[\"indoorMapFloorId\"] || 0;\r\n    this._headingDegrees = config[\"headingDegrees\"] || 0.0;\r\n    this.__headingDegreesNeedsChanged = false;\r\n    this._elevation = config[\"elevation\"] || 0.0;\r\n    this.__elevationNeedsChanged = false;\r\n    this._elevationMode = config[\"elevationMode\"] || ElevationModeType.HEIGHT_ABOVE_GROUND;\r\n    this.__elevationModeNeedsChanged = false;\r\n  }\r\n\r\n  getLocation = (): L.LatLng => this._location;\r\n\r\n  setLocation = (location: Location): this => {\r\n    this._location = L.latLng(location);\r\n    this.__locationNeedsChanged = true;\r\n    return this;\r\n  };\r\n\r\n  getIndoorMapId = (): MapId => this._indoorMapId;\r\n\r\n  getIndoorMapFloorId = (): MapFloorId => this._indoorMapFloorId;\r\n\r\n  getHeadingDegrees = (): number => this._headingDegrees;\r\n\r\n  setHeadingDegrees = (headingDegrees: number): this => {\r\n    this._headingDegrees = headingDegrees;\r\n    this.__headingDegreesNeedsChanged = true;\r\n    return this;\r\n  };\r\n\r\n  getElevation = (): number => this._elevation;\r\n\r\n  setElevation = (elevation: number): this => {\r\n    this._elevation = elevation;\r\n    this.__elevationNeedsChanged = true;\r\n    return this;\r\n  };\r\n\r\n  getElevationMode = (): ElevationMode => this._elevationMode;\r\n\r\n  setElevationMode = (elevationModeString: ElevationModeType): this => {\r\n    if (isValidElevationMode(elevationModeString)) {\r\n      this._elevationMode = elevationModeString;\r\n      this.__elevationModeNeedsChanged = true;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  getGeometryId = (): string => this._geometryId;\r\n\r\n  setGeometryId = (geometryId: string): this => {\r\n    this._geometryId = geometryId;\r\n    this.__geometryIdNeedsChanged = true;\r\n    return this;\r\n  };\r\n\r\n  getName = (): string => this._name;\r\n\r\n  addTo = (map: Map): this => {\r\n    if (this._map !== null) {\r\n      this.remove();\r\n    }\r\n    this._map = map;\r\n    map.props.addProp(this);\r\n    return this;\r\n  };\r\n\r\n  remove = (): this => {\r\n    if (this._map !== null) {\r\n      this._map.props.removeProp(this);\r\n      this._map = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /** @internal */\r\n  _geometryIdNeedsChanged = (): boolean => this.__geometryIdNeedsChanged;\r\n\r\n  /** @internal */\r\n  _onGeometryIdChanged = (): void => {\r\n    this.__geometryIdNeedsChanged = false;\r\n  };\r\n\r\n  /** @internal */\r\n  _locationNeedsChanged = (): boolean => this.__locationNeedsChanged;\r\n\r\n  /** @internal */\r\n  _onLocationChanged = (): void => {\r\n    this.__locationNeedsChanged = false;\r\n  };\r\n\r\n  /** @internal */\r\n  _headingDegreesNeedsChanged = (): boolean => this.__headingDegreesNeedsChanged;\r\n\r\n  /** @internal */\r\n  _onHeadingDegreesChanged = (): void => {\r\n    this.__headingDegreesNeedsChanged = false;\r\n  };\r\n\r\n  /** @internal */\r\n  _elevationNeedsChanged = (): boolean => this.__elevationNeedsChanged;\r\n\r\n  /** @internal */\r\n  _onElevationChanged = (): void => {\r\n    this.__elevationNeedsChanged = false;\r\n  };\r\n\r\n  /** @internal */\r\n  _elevationModeNeedsChanged = (): boolean => this.__elevationModeNeedsChanged;\r\n\r\n  /** @internal */\r\n  _onElevationModeChanged = (): void => {\r\n    this.__elevationModeNeedsChanged = false;\r\n  };\r\n}\r\n\r\nexport const prop = factoryFor(Prop);\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../../private/factoryFor\";\r\nimport { Color } from \"../../types/color\";\r\nimport { ElevationMode } from \"../../types/elevationMode\";\r\nimport { Map, MapId, MapFloorId } from \"./../map\";\r\n\r\nexport type PolygonOptions = L.PolylineOptions & {\r\n  color?: Color;\r\n  elevation?: number;\r\n  elevationMode?: ElevationMode;\r\n  indoorMapId?: MapId;\r\n  indoorMapFloorId?: MapFloorId;\r\n};\r\n\r\nexport class Polygon {\r\n  private _map: Map | null;\r\n  private _outerRing: L.LatLng[];\r\n  private _holes: L.LatLng[][];\r\n  private _config: PolygonOptions;\r\n  private _color: Color;\r\n  private __colorNeedsChanged: boolean;\r\n\r\n  constructor(latLngs: L.LatLngTuple[] | L.LatLngTuple[][], config?: PolygonOptions) {\r\n    this._map = null;\r\n    this._outerRing = [];\r\n    this._holes = [];\r\n    this._config = config || {};\r\n\r\n    let arrayDepth = 0;\r\n    let testElement: L.LatLngTuple[][] | L.LatLngTuple[] | L.LatLngTuple | number = latLngs;\r\n\r\n    do {\r\n      testElement = testElement[0];\r\n      arrayDepth++;\r\n    } while (Array.isArray(testElement));\r\n\r\n    if (arrayDepth === 2) {\r\n      this._outerRing = loadLatLngs(latLngs as L.LatLngTuple[]);\r\n    } else if (arrayDepth === 3) {\r\n      this._outerRing = loadLatLngs(latLngs[0] as L.LatLngTuple[]);\r\n      const holeLatLngs = latLngs.splice(1) as L.LatLngTuple[][];\r\n      holeLatLngs.forEach((holeLatLng) => {\r\n        this._holes.push(loadLatLngs(holeLatLng));\r\n      });\r\n    } else {\r\n      throw new Error(\"Incorrect array input format.\");\r\n    }\r\n\r\n    this._color = this._config[\"color\"] || [0, 0, 255, 128];\r\n    this.__colorNeedsChanged = true;\r\n  }\r\n\r\n  getColor = (): Color => this._color;\r\n\r\n  setColor = (color: Color): this => {\r\n    this._color = color;\r\n    this.__colorNeedsChanged = true;\r\n    return this;\r\n  };\r\n\r\n  addHole = (points: Parameters<typeof loadLatLngs>[0]): this => {\r\n    this._holes.push(loadLatLngs(points));\r\n    return this;\r\n  };\r\n\r\n  getHoles = (): L.LatLng[][] => this._holes;\r\n\r\n  getPoints = (): L.LatLng[] => this._outerRing;\r\n\r\n  addTo = (map: Map): this => {\r\n    if (this._map !== null) {\r\n      this.remove();\r\n    }\r\n    this._map = map;\r\n    map._polygonModule.addPolygon(this);\r\n    return this;\r\n  };\r\n\r\n  remove = (): this => {\r\n    if (this._map !== null) {\r\n      this._map._polygonModule.removePolygon(this);\r\n      this._map = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /** @internal */\r\n  _getConfig = (): PolygonOptions => this._config;\r\n\r\n  /** @internal */\r\n  _colorNeedsChanged = (): boolean => this.__colorNeedsChanged;\r\n\r\n  /** @internal */\r\n  _onColorChanged = (): void => {\r\n    this.__colorNeedsChanged = false;\r\n  };\r\n}\r\n\r\nconst loadLatLngs = (coords: Parameters<typeof L.latLng>[0][]): L.LatLng[] => {\r\n  const points: L.LatLng[] = [];\r\n  coords.forEach(function (coord) {\r\n    points.push(L.latLng(coord));\r\n  });\r\n  return points;\r\n};\r\n\r\nexport const polygon = factoryFor(Polygon);\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../../private/factoryFor\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../../private/elevation_mode\";\r\nimport { Color } from \"../../types/color\";\r\nimport { ElevationMode } from \"../../types/elevationMode\";\r\nimport { MapId, MapFloorId } from \"../map\";\r\nimport { WrldOptions } from \"../../types/wrldOptions\";\r\n\r\nexport type PolylineOptions = WrldOptions & {\r\n  color?: Color;\r\n  weight?: number;\r\n  miterLimit?: number;\r\n};\r\n\r\nexport declare class PolylineType extends L.Polyline {\r\n  constructor(latlngs: L.LatLngExpression[], options?: PolylineOptions);\r\n  getPoints(): L.LatLng[];\r\n  getIndoorMapId(): MapId;\r\n  getIndoorMapFloorId(): MapFloorId;\r\n  setIndoorMapWithFloorId(indoorMapId: MapId, indoorMapFloorId: MapFloorId): this;\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n  getElevationMode(): ElevationMode;\r\n  setElevationMode(elevationMode: ElevationMode): this;\r\n  getWidth(): number;\r\n  getColor(): Color;\r\n  getMiterLimit(): number;\r\n  setOptions(options: PolylineOptions): this;\r\n  setStyle(options: PolylineOptions): this;\r\n}\r\n\r\nexport type Polyline = PolylineType;\r\n\r\nexport const Polyline: typeof PolylineType = L.Polyline.extend({\r\n  initialize: function (latLngs: L.LatLngExpression[], options?: PolylineOptions) {\r\n    L.Polyline.prototype.initialize.call(this, latLngs, options || {});\r\n  },\r\n\r\n  options: {\r\n    elevation: 0.0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n    indoorMapId: \"\",\r\n    indoorMapFloorId: 0,\r\n    weight: 3.0,\r\n    miterLimit: 10.0,\r\n  },\r\n\r\n  getPoints: function () {\r\n    return this.getLatLngs();\r\n  },\r\n\r\n  getIndoorMapId: function () {\r\n    return this.options.indoorMapId;\r\n  },\r\n\r\n  getIndoorMapFloorId: function () {\r\n    return this.options.indoorMapFloorId;\r\n  },\r\n\r\n  getElevation: function () {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  getElevationMode: function () {\r\n    return this.options.elevationMode;\r\n  },\r\n\r\n  getWidth: function () {\r\n    return this.options.weight;\r\n  },\r\n\r\n  getColor: function () {\r\n    return this.options.color;\r\n  },\r\n\r\n  getMiterLimit: function () {\r\n    return this.options.miterLimit;\r\n  },\r\n\r\n  setIndoorMapWithFloorId: function (indoorMapId: MapId, indoorMapFloorId: MapFloorId) {\r\n    this.options.indoorMapId = indoorMapId;\r\n    this.options.indoorMapFloorId = indoorMapFloorId;\r\n    this._needsNativeUpdate = true;\r\n    return this;\r\n  },\r\n\r\n  setElevation: function (elevation: ElevationMode) {\r\n    this.options.elevation = elevation;\r\n    this._needsNativeUpdate = true;\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (mode: ElevationMode) {\r\n    if (isValidElevationMode(mode)) {\r\n      this.options.elevationMode = mode;\r\n    }\r\n    this._needsNativeUpdate = true;\r\n    return this;\r\n  },\r\n\r\n  setOptions: function (options: PolylineOptions) {\r\n    return this.setStyle(options);\r\n  },\r\n\r\n  setStyle: function (style: L.PathOptions) {\r\n    L.Polyline.prototype.setStyle.call(this, style);\r\n    this._needsNativeUpdate = true;\r\n    return this;\r\n  },\r\n\r\n  // dirty flag, for polyline_module use\r\n  _needsNativeUpdate: false,\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  _update: function () {},\r\n\r\n  beforeAdd: function () {\r\n    // don't call base, avoid assigning this._renderer\r\n  },\r\n\r\n  onAdd: function () {\r\n    this._map._polylineModule.addPolyline(this);\r\n  },\r\n\r\n  onRemove: function () {\r\n    this._map._polylineModule.removePolyline(this);\r\n  },\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  redraw: function () {},\r\n});\r\n\r\nexport const polyline = factoryFor(Polyline);\r\n","import type IndoorMapFloorOutlinePolygon from \"./indoor_map_floor_outline_polygon\";\r\nimport type { Map, MapId, MapFloorId } from \"../map\";\r\nimport { factoryFor } from \"../../private/factoryFor\";\r\n\r\nexport class IndoorMapFloorOutlineInformation {\r\n  private _nativeId: string | null;\r\n  private _map: Map | null;\r\n  private _indoorMapId: MapId;\r\n  private _indoorMapFloorId: number;\r\n  private _outlinePolygons: IndoorMapFloorOutlinePolygon[];\r\n  private _isLoaded: boolean;\r\n\r\n  constructor(indoorMapId: MapId, indoorMapFloorId: MapFloorId) {\r\n    this._nativeId = null;\r\n    this._map = null;\r\n    this._indoorMapId = indoorMapId;\r\n    this._indoorMapFloorId = indoorMapFloorId;\r\n    this._outlinePolygons = [];\r\n    this._isLoaded = false;\r\n  }\r\n\r\n  getIndoorMapId(): MapId {\r\n    return this._indoorMapId;\r\n  }\r\n\r\n  getIndoorMapFloorId(): MapFloorId {\r\n    return this._indoorMapFloorId;\r\n  }\r\n\r\n  getIndoorMapFloorOutlinePolygons(): IndoorMapFloorOutlinePolygon[] {\r\n    return this._outlinePolygons;\r\n  }\r\n\r\n  getIsLoaded(): boolean {\r\n    return this._isLoaded;\r\n  }\r\n\r\n  getId(): string | null {\r\n    return this._nativeId;\r\n  }\r\n\r\n  addTo(map: Map): this {\r\n    if (this._map !== null) {\r\n      this.remove();\r\n    }\r\n    this._map = map;\r\n    this._map.indoorMapFloorOutlines._getImpl().addIndoorMapFloorOutlineInformation(this);\r\n    return this;\r\n  }\r\n\r\n  remove = (): this => {\r\n    if (this._map !== null) {\r\n      this._map.indoorMapFloorOutlines._getImpl().removeIndoorMapFloorOutlineInformation(this);\r\n      this._map = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /** @internal */\r\n  _setNativeHandle = (nativeId: string): void => {\r\n    this._nativeId = nativeId;\r\n  };\r\n\r\n  /** @internal */\r\n  _setData = (data: IndoorMapFloorOutlinePolygon[]): void => {\r\n    this._outlinePolygons = data;\r\n    this._isLoaded = true;\r\n  };\r\n}\r\n\r\nexport const indoorMapFloorOutlineInformation = factoryFor(IndoorMapFloorOutlineInformation);\r\n","import * as Wrld from \"./wrld\";\r\n\r\n// @ts-ignore For compatibility with eeGeoWebGL we need L.Wrld present\r\nwindow.L.Wrld = Wrld;\r\n\r\n// The default image path is broken when using Browserify - it searches the script tags on the page\r\nWrld.Icon.Default.imagePath = \"https://unpkg.com/leaflet@1.0.1/dist/images/\";\r\n\r\nexport default Wrld;\r\n"],"names":["Array","prototype","findIndex","predicate","this","TypeError","list","Object","length","thisArg","arguments","i","call","find","value","_getOptionsPropertyOrNull","layer","propertyName","options","getIndoorMapId","indoorMapId","getIndoorMapFloorId","getIndoorMapFloorIndex","indoorMapFloorIndex","_copyOption","sourceOptions","destOptions","sourcePropertyName","destPropertyName","factoryFor","cla$$","Popup","L","extend","elevation","closeWhenMovedOffscreen","_onScreen","getElevation","setElevation","getCloseWhenMovedOffscreen","setCloseWhenMovedOffscreen","_updateContent","_content","node","_contentNode","content","_source","contentNeedsUpdate","outerHTML","innerHTML","hasChildNodes","removeChild","firstChild","appendChild","fire","update","_map","_container","style","visibility","_updateLayout","_updatePosition","_adjustPan","_checkOutOfBounds","_close","latLngs","latLngsForLayer","pos","latLngToLayerPoint","offset","point","anchor","_getAnchor","x","Math","round","y","_zoomAnimated","DomUtil","setPosition","add","bottom","_containerBottom","left","_containerLeft","_containerWidth","bottom_style","left_style","getStyle","rect","getBoundingClientRect","rectHeight","top","rectWidth","right","mapRect","popup","Vector3","constructor","z","args","vector","isArray","toPoint","Vector4","w","_altitudes","_lerp","a","b","c","_altitudeToZoom","altitude","comparisonFunc","zoom","zoomLevelDistance","zoomlevel","nearestZoomBelow","floor","nearestZoomAbove","ceil","distance","smallestAltitude","zoomAbove","d","max","_nearestZoomAbove","_nearestZoomBelow","undefinedPoint","undefinedLatLng","latLng","convertLatLngToVector","lat","PI","lng","cos","sin","Renderer","include","_updateTransform","Map","initialize","browserWindow","id","onRemoveCallback","cameraModule","precacheModule","themesModule","indoorsModule","polygonModule","polylineModule","layerPointMappingModule","routingModule","renderingModule","buildingsModule","propModule","indoorMapEntityInformationModule","indoorMapFloorOutlineInformationModule","blueSphereModule","mapRuntimeModule","versionModule","heatmapModule","frameRateModule","_browserWindow","_onRemoveCallback","_cameraModule","_precacheModule","_polygonModule","_polylineModule","_layerPointMappingModule","_frameRateModule","themes","indoors","routes","rendering","buildings","props","indoorMapEntities","indoorMapFloorOutlines","blueSphere","heatmaps","_mapRuntimeModule","_layersOnMap","_spacesApi","_ready","_viewInitialized","dragging","disable","touchZoom","doubleClickZoom","scrollWheelZoom","boxZoom","keyboard","attributionControl","setPrefix","addAttribution","_initEvents","remove","surface","DomEvent","_targets","stamp","onOff","_handleDOMEvent","trackResize","_onResize","Browser","any3d","transform3DLimit","_onMoveEnd","e","type","preventDefault","element","target","className","indexOf","stopPropagation","parentNode","addLayer","_createPointMapping","removeLayer","_removePointMapping","_removeAllLayers","keys","forEach","undefined","onInitialized","emscriptenApi","spacesApi","panes","getPanes","mapPane","zIndex","pointerEvents","overlayPane","onInitialStreamingCompleted","worldToScreen","layerPointToLatLng","screenToWorldPoint","latLngToContainerPoint","containerPointToLatLng","containerPointToLayerPoint","layerPointToContainerPoint","createPointMapping","removePointMapping","_projectLatlngs","latlngs","result","projectedBounds","projectLatlngs","_updateZoom","_zoom","getZoom","setView","center","reset","_limitZoom","_limitCenter","maxBounds","pan","animate","allowInterruption","_options","location","zoomIn","delta","config","getCenter","getCurrentZoomLevel","durationSeconds","getMaxZoom","once","zoomOut","getMinZoom","setZoomAround","setViewVerticallyLocked","isVerticallyLocked","setVerticallyLocked","fitBounds","bounds","setViewToBounds","fitWorld","setZoom","panTo","panInsideBounds","panBy","pause","Pause","resume","Resume","getBounds","topLeft","Point","topRight","getContainer","clientWidth","bottomLeft","clientHeight","BottomRight","latLngBounds","locate","stopLocate","Remove","openPopup","_popup","setLatLng","setContent","_onUpdate","_onDraw","_updateLayerVisibility","eachLayer","redraw","getAltitudeAtLatLng","getMortonKeyAtLatLng","getMortonKeyCenter","mortonKey","getMortonKeyCorners","insetMeters","getCameraDistanceToInterest","getDistanceToInterest","getCameraPitchDegrees","getPitchDegrees","setCameraTiltDegrees","tilt","setTiltDegrees","getCameraTiltDegrees","getTiltDegrees","getCameraHeadingDegrees","getHeadingDegrees","setCameraHeadingDegrees","heading","setHeadingDegrees","getMaximumPrecacheRadius","precache","radius","completionCallback","precacheWithDetailedResult","precacheResult","succeeded","setMapCollapsed","isMapCollapsed","setDrawClearColor","clearColor","setClearColor","setTargetVSyncInterval","targetVSyncInterval","setThrottledTargetFrameInterval","throttledTargetFrameIntervalMilliseconds","setIdleSecondsBeforeThrottle","idleSecondsBeforeThrottle","setThrottleWhenIdleEnabled","throttleWhenIdleEnabled","cancelFrameRateThrottle","cancelThrottle","isHardwareAccelerationAvailable","canvas","document","createElement","hardwareAccelerationEnforcer","failIfMajorPerformanceCaveat","webglContext","getContext","WebGLRenderingContext","_getAngleFromCameraToHorizon","earthRadius","acos","_isLatLngBehindEarth","latlng","cameraVector","maxAngle","latlngVector","layerIds","getLatLng","isValid","getCenterOfLayer","FeatureGroup","latLngBehindEarth","hasLayer","indoorMapDisplayFilter","_isVisibleForCurrentMapState","currentMapStateIsOutdoors","isIndoors","layerIsOutdoors","hasIndoorMap","displayOption","activeIndoorMapId","activeIndoorMapFloorId","activeIndoorMapFloorIndex","getLayerDisplayOption","matchesCurrentFloor","matchesIndoorMap","getActiveIndoorMap","getFloor","getFloorZOrder","getFloorIndex","_rawPanBy","HTMLMapContainer","browserDocument","parentElement","canvasId","canvasWidth","canvasHeight","backgroundColor","containerId","mapId","_browserDocument","_createDOMElement","tagName","attributes","attributeName","setAttribute","styleProperty","mapContainer","class","position","width","height","padding","margin","overflow","cursor","css","head","onmousedown","button","onwheel","_createMapContainer","loadingSpinnerIcon","_createLoadingSpinner","overlay","background","_createLeafletOverlay","indoorMapWatermark","draggable","display","transition","_createIndoorMapWatermark","oncontextmenu","toString","_createCanvas","loadingSpinner","LoadingSpinner","startSpinning","stopSpinning","onError","message","messageText","color","textContent","_createErrorMessage","onRemove","domElement","_domElement","_spinning","spin","timestamp","requestAnimationFrame","setPositionSmooth","el","disable3D","TRANSFORM","ElevationModeType","isValidElevationMode","elevationMode","HEIGHT_ABOVE_GROUND","HEIGHT_ABOVE_SEA_LEVEL","getElevationModeInt","elevationModeString","elevationModeInt","toLowerCase","Marker","on","_onDragStart","_onDrag","_onDragEnd","_elevationBeforeDrag","_isDragging","_latOffsetForDrag","_lngOffsetForDrag","setElevationMode","mode","getElevationMode","setIndoorMapWithFloorId","indoorMapFloorId","setIndoorMapWithFloorIndex","setOutdoor","baseReturnValue","_icon","screenPos","_setPos","setPosFunc","gecko","_shadow","_zIndex","zIndexOffset","_resetZIndex","bindPopup","flatPos","getPosition","flatLatLng","realLatLng","LatLng","marker","IndoorEntranceMarkerUpdater","map","_indoorsModule","_entranceMarkers","_layerGroup","layerGroup","_entranceIcon","icon","iconUrl","iconRetinaUrl","iconSize","iconAnchor","_createEntranceMarker","entrance","_marker","title","getIndoorMapName","enter","_showEntranceMarkers","event","addTo","removeAllEntranceMarkers","clearLayers","_eventType","MapMoveEvents","leafletMap","_onEvent","setEventCallbacks","cameraApi","setEventCallback","eventKey","MapModule","onUpdate","_dt","onDraw","season","time","weather","ThemesModule","super","_emscriptenApi","_season","_time","_weather","_shouldChangeTheme","_shouldChangeState","_updateTheme","themesApi","setTheme","setState","_tryMatchBuiltIn","caseInsensitiveMatchWithCollection","key","values","keyUpper","toUpperCase","item","localeCompare","_onThemesStreamingCompleted","themeInfo","setSeason","getSeason","setTime","getTime","setWeather","getWeather","setEnvironmentThemesManifest","environmentThemesManifest","setThemeManifest","Season","Summer","Time","Day","Weather","Clear","registerStreamingCompletedCallback","IndoorMap","indoorMapName","indoorMapSourceVendor","floorCount","floors","searchTags","exitFunc","_indoorMapId","_indoorMapName","_indoorMapSourceVendor","_floorCount","_floors","_searchTags","exit","getIndoorMapSourceVendor","getFloorCount","getFloors","getSearchTags","IndoorMapEntrance","_latLng","IndoorMapFloor","floorId","floorIndex","floorName","floorShortName","_floorId","_floorIndex","_floorName","_floorShortName","getFloorId","_getFloorId","getFloorName","getFloorShortName","IndoorWatermarkController","showWrldWatermark","_indoorWatermarkElement","_elementId","_showWrldWatermark","_eegeoVenderKey","_buildUrlForVendor","vendorKey","vendorKeyLower","vendor","vendorImageUrl","Image","src","showWatermarkForVendor","imageUrl","getElementById","hideWatermark","IndoorsModule","mapController","indoorId","headingDegrees","_mapController","_activeIndoorMap","_entrances","_pendingEnterTransition","_transitioningToIndoorMap","_indoorWatermarkController","_startingIndoorId","_startingFloorIndex","_center","_headingDegrees","_backgroundColor","_createIndoorMapObject","indoorsApi","getActiveIndoorMapId","mapName","getActiveIndoorMapName","sourceVendor","getActiveIndoorMapSourceVendor","getActiveIndoorMapFloorCount","_createFloorsArray","_createSearchTagsArray","floorNumber","getFloorNumber","push","userData","JSON","parse","getActiveIndoorMapUserData","search_menu_items","items","name","search_tag","icon_key","_executeIndoorMapEnteredCallbacks","indoorMap","_executeIndoorMapEnterFailedCallbacks","_executeIndoorMapExitedCallbacks","_executeIndoorMapFloorChangedCallbacks","_executeIndoorMapEntranceAddedCallbacks","indoorMapLatLng","_executeIndoorMapEntranceRemovedCallbacks","_executeIndoorMapLoadedCallbacks","_executeIndoorMapUnloadedCallbacks","_executeEntityClickedCallbacks","ids","idArray","split","_onCollapseStart","_onCollapse","_onCollapseEnd","_onExpandStart","_onExpand","_onExpandEnd","_enterIndoorMap","enterIndoorMap","_transitionToIndoorMap","orientation","_setIndoorTransitionCompleteEventListener","setNotificationCallbacks","indoorEntityApi","registerIndoorEntityPickedCallback","expandFloorsApi","setCollapseStartCallback","setCollapseCallback","setCollapseEndCallback","setExpandStartCallback","setExpandCallback","setExpandEndCallback","setBackgroundColor","setFloor","Number","ready","exitIndoorMap","index","getSelectedFloorIndex","setSelectedFloorIndex","moveUp","numberOfFloors","thisFloor","moveDown","assign","getFloorInterpolation","getFloorParam","getFloorHeightAboveSeaLevel","tryGetReadableName","tryGetFloorReadableName","tryGetFloorShortName","setFloorInterpolation","floorParam","setFloorParam","setFloorFromInterpolation","interpolationParam","t","expand","expandIndoorMap","collapse","collapseIndoorMap","setEntityHighlights","highlightColor","highlightBorderThickness","_indoorMapIdOrDefault","_borderThicknessOrDefault","setHighlights","clearEntityHighlights","clearHighlights","borderThickness","hideLabelsForEntity","entityName","hideLabelsForEntities","entityNames","showLabelsForEntity","showLabelsForEntities","showAllLabels","IndoorsPrototype","Mixin","Events","IdToObjectMap","_objects","insertObject","object","removeObjectById","idForObject","getObjectById","forEachItem","func","PreCacheOperationResult","_succeeded","getSucceeded","PrecacheOperation","operation","_operation","cancel","InternalPrecacheOperation","centre","_centre","_radius","_completionCallback","_cancelled","_executeCompletionCallback","success","getCentre","getRadius","isCancelled","notifyComplete","notifyCancelled","PrecacheModule","_operations","_pendingOperations","_beginPrecacheOperation","operationId","precacheApi","beginPrecacheOperation","_onPrecacheOperationCompleted","_onPrecacheOperationCancelled","callbackFunction","parameterValidationError","Error","_validatePrecacheParameters","internalOperation","registerCallbacks","dt","cancelledOperations","cancelPrecacheOperation","CameraModule","startLatLng","initialZoom","viewVerticallyLocked","_pendingSetViewData","_pendingSetViewToBoundsData","_isVerticallyLocked","_setView","_setViewToBounds","_setVerticallyLocked","getZoomLevel","parseFloat","getInterestLatLong","pitch","tiltDegrees","_setTiltDegrees","_setHeadingDegrees","PolygonsModule","_polygonIdToPolygons","_pendingPolygons","_createAndAdd","polygon","polygonId","geofenceApi","createGeofence","getPoints","getHoles","_getConfig","addPolygon","removePolygon","removeGeofence","splice","_colorNeedsChanged","setGeofenceColor","getColor","_onColorChanged","PolylineModule","_polylineIdToPolyline","_pendingPolylines","polyline","polylineId","polylineApi","createPolyline","addPolyline","removePolyline","destroyPolyline","updateNativeState","RoutingModule","apiKey","_apiKey","_parseMetadataTag","metadata","tag","decoratedTag","occurrence","postTag","slice","nextBracketIndex","substring","_parseRouteSteps","routeSteps","parsedSteps","level","routeStep","latLongPoints","parseInt","stepGeometry","j","lonlat","points","_parseRoutes","routingJson","results","routeIndex","legs","legIndex","getRoute","viaPoints","onLoadHandler","onErrorHandler","transportMode","url","_urlRoot","pointIndex","join","request","XMLHttpRequest","open","onload","routeLoadHandler","routeLoadErrorHandler","routeJson","responseText","multiroute","_routeParseHandler","abort","_cancelRequest","send","RenderingModule","_isMapCollapsed","_clearColor","renderingApi","getCameraRelativePosition","getNorthFacingOrientationMatrix","getCameraProjectionMatrix","getCameraOrientationMatrix","getLightingData","BuildingsModuleImpl","_nativeIdToBuildingHighlights","_callbackInvokedBeforeAssignement","_pendingBuildingHighlights","_notifyBuildingInformationReceivedCallback","buildingHighlight","nativeId","buildingsApi","createBuildingHighlight","_setNativeHandle","_notifyBuildingInformationReceived","addBuildingHighlight","removeBuildingHighlight","getId","destroyBuildingHighlight","notifyBuildingHighlightChanged","setHighlightColor","findIntersectionWithBuilding","ray","findBuildingAtScreenPoint","screenPoint","screenPointToRay","findBuildingAtLatLng","latLongToVerticallyDownRay","registerBuildingInformationReceivedCallback","_executeBuildingInformationReceivedCallback","isReady","setBuildingInformationReceivedCallback","callback","buildingHighlightId","buildingInformation","tryGetBuildingInformation","_setBuildingInformation","BuildingsModule","_buildingsModuleImpl","_this","_buildingInformationReceivedHandler","_getImpl","BuildingsModulePrototype","PropModule","_pendingProps","_props","_hasPendingEnableDisable","_pendingEnableDisable","_pendingServiceUrl","_hasPendingServiceUrl","_createAndAddArray","propArray","indoorMapIds","indoorMapFloorIds","names","latitudes","longitudes","elevations","elevationModes","headings","geometryIds","propIndex","prop","getName","getLocation","getGeometryId","propIds","propsApi","createProps","_executeIndoorMapEntitySetPropsLoadedCallbacks","_executeIndoorMapPopulationRequestCompletedCallbacks","httpStatusCode","addProp","propId","createProp","addProps","concat","removeProp","destroyProp","removeProps","destroyProps","setAutomaticIndoorMapPopulationEnabled","setIndoorMapPopulationServiceUrl","setIndoorMapEntitySetPropsLoadedCallback","setIndoorMapPopulationRequestCompletedCallback","_locationNeedsChanged","setLocation","_onLocationChanged","_headingDegreesNeedsChanged","_onHeadingDegreesChanged","_elevationNeedsChanged","_onElevationChanged","_elevationModeNeedsChanged","_onElevationModeChanged","_geometryIdNeedsChanged","setGeometryId","_onGeometryIdChanged","enabled","isAutomaticIndoorMapPopulationEnabled","serviceUrl","getIndoorMapEntitySetProps","tryGetIndoorMapEntitySetProps","PropPrototype","IndoorMapEntityInformationModuleImpl","_nativeIdToIndoorMapEntityInformation","_pendingIndoorEntityInformation","_notifyIndoorMapEntityInformationChangedCallback","indoorMapEntityInformation","indoorMapEntityInformationApi","createIndoorMapEntityInformation","_notifyIndoorMapEntityInformationChanged","addIndoorMapEntityInformation","removeIndoorMapEntityInformation","getNativeId","destroyIndoorMapEntityInformation","registerIndoorMapEntityInformationChangedCallback","_executeIndoorMapEntityInformationChangedCallback","setIndoorMapEntityInformationChangedCallback","indoorMapEntityInformationId","data","tryGetIndoorMapEntityInformation","_setData","IndoorMapEntityInformationModule","_indoorMapEntityInformationModuleImpl","_IndoorMapEntityInformationChangedHandler","IndoorMapEntityInformationModulePrototype","IndoorMapFloorOutlineInformationModuleImpl","_nativeIdToIndoorMapFloorOutlineInformation","_pendingIndoorMapFloorOutlineInformation","_notifyIndoorMapFloorOutlineInformationLoadedCallback","indoorMapFloorOutlineInformation","indoorMapFloorOutlineInformationApi","createIndoorMapFloorOutlineInformation","_fetchIndoorMapFloorOutlineInformation","addIndoorMapFloorOutlineInformation","removeIndoorMapFloorOutlineInformation","destroyIndoorMapFloorOutlineInformation","registerIndoorMapFloorOutlineInformationLoadedCallback","_executeIndoorMapFloorOutlineInformationLoadedCallback","setIndoorMapFloorOutlineInformationLoadedCallback","indoorMapFloorOutlineInformationId","getIndoorMapFloorOutlineInformationLoaded","tryGetIndoorMapFloorOutlineInformation","IndoorMapFloorOutlineInformationModule","_indoorMapFloorOutlineInformationModuleImpl","_IndoorMapFloorOutlineInformationLoadedHandler","IndoorMapFloorOutlineInformationModulePrototype","BlueSphereModule","_location","_isEnabled","_indoorMapFloorId","_elevation","_stateChanged","_showOrientation","isEnabled","setEnabled","setIndoorMap","isOrientationVisible","showOrientation","isVisible","blueSphereApi","MapRuntimeModule","mapRuntimeApi","onPause","onResume","_undefinedPoint","LayerPointMappingModule","_layerToLatLngsMapping","_pendingMappings","_createPendingLayers","_flatten","arr","reduce","flat","toFlatten","_getLayerId","_useWrldSdkPointMappingForLayer","getLatLngs","sourceLatLngArray","latLngsFlatArray","api","layerPointMappingApi","createPointMappingWithFloorIndex","indoorOptionsValid","getLatLngsForLayer","layerId","_updateMappings","_getDefaultLatLngsFromLayer","associatedFlatLatlngArray","_projectLatlngsRecursive","_latLngToLayerPoint","originalLatlngs","currentFlatIndex","ring","len","VersionModule","getVersion","versionApi","getPlatformVersion","getVersionHash","getPlatformVersionHash","HeatmapModule","_heatmapIdToHeatmap","_pendingHeatmaps","heatmap","heatmapId","heatmapApi","createHeatmap","addHeatmap","removeHeatmap","destroyHeatmap","FrameRateModule","_targetVSyncInterval","_throttledTargetFrameIntervalMilliseconds","_idleSecondsBeforeThrottle","_throttleWhenIdleEnabled","frameRateApi","removeFileExtension","fileName","extensionToRemove","extensionPosition","lastIndexOf","EegeoMapController","module","onMapRemoveCallback","_defaultOptions","indoorsEnabled","displayEntranceMarkers","coverageTreeManifest","zoomControl","zoomAnimation","minZoom","maxZoom","zoomSnap","showIndoorWrldWatermark","trafficEnabled","trafficDisableWhenEnteringIndoorMaps","indoorLabelsAlwaysHidden","frameRateThrottleWhenIdleEnabled","idleSecondsBeforeFrameRateThrottle","drawClearColor","indoorMapBackgroundColor","indoorSelectionTimeoutDuration","_mapId","_themesModule","PolygonModule","_routingModule","_renderingModule","_buildingsModule","_propModule","_indoorMapEntityInformationModule","_indoorMapFloorOutlineInformationModule","_blueSphereModule","_versionModule","_heatmapModule","_onMapRemoveCallback","_canvasId","_canvasWidth","_canvasHeight","_containerId","_mapContainer","_canvas","_Module","indoorsEnabledArg","EegeoLeafletMap","_indoorEntranceMarkerUpdater","gl","ctx","K","getExtension","loseContext","_mapMoveEvents","_modules","_resizeCanvas","eegeoApiPointer","emscriptenApiPointer","cwrap","_onInitialStreamingCompleted","errorMessage","deltaSeconds","newWidth","newHeight","EmscriptenMemory","emscriptenModule","_emscriptenModule","readDoubles","pointer","count","getValue","passDoubles","double_array","_malloc","setValue","_free","passString","string","utf8Length","lengthBytesUTF8","stringToUTF8","passStrings","string_array","strs","str","passInt32s","int32_array","stringifyPointer","ptr","UTF8ToString","createInt8Buffer","bufferLen","element_count","element_type","element_size_bytes","createInt32Buffer","elementCount","createDoubleBuffer","createBufferFromArray","number_array","createXBufferFunc","buffer","consumeBufferToArray","freeBuffer","createUtf8BufferFromString","consumeUtf8BufferToString","vec4ToRgba32","v","colorToRgba32","hex","replace","repeat","rgb","hexToRgba32","r","g","String","isNaN","colorArrayToVector4","colorObjectToVector4","EmscriptenGeofenceApi","_eegeoApiPointer","_removeGeofence","_setGeofenceColor","_createGeofenceFromRawCoords","_getElevationIsAboveSeaLevelFromConfig","offsetFromSeaLevel","_getAltitudeOffsetFromConfig","altitudeOffset","outerPoints","holes","coords","ringVertexCounts","coordsPointer","ringVertexCountsPointer","k","elevationModeAboveSeaLevel","colorVec4","rgba","colorToVec4","EmscriptenIndoorsApi","emscriptenMemory","_emscriptenApiPointer","_emscriptenMemory","_indoorsApi_RegisterIndoorMapCallbacks","_indoorsApi_EnterIndoorMap","_indoorsApi_ExitIndoorMap","_indoorsApi_HasActiveIndoorMap","_indoorsApi_GetActiveIndoorMapId","_indoorsApi_GetActiveIndoorMapName","_indoorsApi_GetActiveIndoorMapSourceVendor","_indoorsApi_GetActiveIndoorMapFloorCount","_indoorsApi_GetActiveIndoorMapUserData","_indoorsApi_GetSelectedFloorIndex","_indoorsApi_SetSelectedFloorIndex","_indoorsApi_GetFloorName","_indoorsApi_GetFloorShortName","_indoorsApi_GetFloorNumber","_indoorsApi_GetFloorHeightAboveSeaLevel","_indoorsApi_TryGetReadableNameBufferSize","_indoorsApi_TryGetReadableName","_indoorsApi_TryGetFloorReadableNameBufferSize","_indoorsApi_TryGetFloorReadableName","_indoorsApi_TryGetFloorShortNameBufferSize","_indoorsApi_TryGetFloorShortName","_indoorsApi_SetBackgroundColor","_indoorsApi_HideLabelsForEntities","_indoorsApi_ShowLabelsForEntities","_indoorsApi_ShowAllLabels","_onIndoorMapEntered","_onIndoorMapEnterFailed","_onIndoorMapExited","_onIndoorMapFloorChanged","_onIndoorMapEntryMarkerAdded","_onIndoorMapEntryMarkerRemoved","_onIndoorMapLoaded","_onIndoorMapUnloaded","_indoorMapEnteredHandler","_indoorMapEntryFailedHandler","_indoorMapExitedHandler","_indoorMapFloorChangedHandler","_executeEntryMarkerCallback","indoorMapIdPtr","indoorMapNamePtr","indoorMapLatLngPtr","latLngArray","_indoorMapEntryMarkerAddedHandler","_indoorMapEntryMarkerRemovedHandler","_indoorMapLoadedHandler","_indoorMapUnloadedHandler","addFunction","indoorMapEnteredCallback","indoorMapEnterFailedCallback","indoorMapExitedCallback","indoorMapFloorChangedCallback","indoorMapEntryMarkerAddedCallback","indoorMapEntryMarkerRemovedCallback","indoorMapLoadedCallback","indoorMapUnloadedCallback","hasActiveIndoorMap","bufferSizeBuf","bufferSize","stringBuffer","_tryGetNativeIndoorMapFloorString","nativeGetBufferSizeFunc","nativeGetStringFunc","colorRGBA32","resultStrings","stringArraySize","EmscriptenPrecacheApi","_cancelPrecacheOperation","_setPrecacheCallbacks","_cancelCallback","_completeCallback","completeCallback","cancelCallback","removeFunction","latlong","EmscriptenSpacesApi","_worldToScreenWrap","_screenToTerrainPointWrap","_screenToIndoorPointWrap","_getAltitudeAtLatLngWrap","_getUpdatedAltitudeAtLatLngWrap","_getMortonKeyAtLatLngWrap","_getMortonKeyCenterWrap","_getMortonKeyCornersWrap","_spacesApi_ScreenPointToRay","_spacesApi_LatLongToVerticallyDownRay","_screenToLatLng","screenX","screenY","raycastFunc","latLngAltArray","foundWorldPoint","resultArray","arraySize","long","alt","_worldToScreen","screenToTerrainPoint","screenToIndoorPoint","getUpdatedAltitudeAtLatLng","previousHeight","previousLevel","altitudeUpdated","_getUpdatedAltitudeAtLatLng","resultRayBuffer","origin","direction","resultString","_getMortonKeyAtLatLng","latLngCenterArray","_getMortonKeyCenter","latLngCornersArray","_getMortonKeyCorners","EmscriptenThemesApi","_setTheme","_setState","_setThemeManifest","_setCallback","themeName","stateName","transitionTime","themeManifest","EmscriptenCameraApi","_cameraApi_setViewUsingZenithAngle","_cameraApi_setViewToBounds","_cameraApi_getDistanceToInterest","_cameraApi_getInterestLatLong","_cameraApi_getPitchDegrees","_cameraApi_getHeadingDegrees","_cameraApi_setEventCallback","_cameraApi_getDistanceFromZoomLevel","_cameraApi_getZoomLevel","_cameraApi_setVerticallyLocked","animated","getDistanceFromZoomLevel","modifyLocation","northEast","southWest","_northEast","_southWest","latLong","zoomLevel","EmscriptenExpandFloorsApi","_getFloorParam","_setFloorParam","_expandIndoorMap","_collapseIndoorMap","_setCollapseStartCallback","_setCollapseCallback","_setCollapseEndCallback","_setExpandStartCallback","_setExpandCallback","_setExpandEndCallback","EmscriptenIndoorEntityApi","_indoorEntityApi_SetIndoorEntityPickedCallback","_indoorEntityApi_SetHighlightsWithBorderThickness","_indoorEntityApi_ClearHighlights","_indoorEntityApi_ClearAllHighlights","_indoorEntityPickedCallback","_onIndoorEntityPicked","idsPtr","doubleArray","_setHighlights","_clearHighlights","BuildingHighlight","_id","_color","_buildingInformation","getOptions","setColor","getBuildingInformation","BuildingHighlightSelectionType","BuildingHighlightOptions","_selectionLocationLatLng","_selectionScreenPoint","_selectionMode","_informationOnly","highlightBuildingAtLocation","SELECT_AT_LOCATION","highlightBuildingAtScreenPoint","SELECT_AT_SCREEN_POINT","informationOnly","getSelectionMode","getSelectionLocation","getSelectionScreenPoint","getIsInformationOnly","buildingHighlightOptions","BuildingInformation","buildingId","buildingDimensions","buildingContours","_buildingId","_buildingDimensions","_buildingContours","getBuildingId","getBuildingDimensions","getBuildingContours","toJson","building_id","building_dimensions","building_contours","_x","BuildingDimensions","baseAltitude","topAltitude","centroid","_baseAltitude","_topAltitude","_centroid","getBaseAltitude","getTopAltitude","getCentroid","base_altitude","top_altitude","BuildingContour","bottomAltitude","_bottomAltitude","_points","getBottomAltitude","bottom_altitude","IndoorMapEntityInformationLoadStateType","EmscriptenBuildingsApi","_buildingsApi_SetBuildingHighlightChangedCallback","_buildingsApi_CreateHighlightAtLocation","_buildingsApi_CreateHighlightAtScreenPoint","_buildingsApi_DestroyHighlight","_buildingsApi_SetHighlightColor","_buildingsApi_TryGetBuildingInformationBufferSizes","_buildingsApi_TryGetBuildingInformation","_buildingsApi_TryFindIntersectionWithBuilding","shouldCreateView","buildingIdSizeBuf","contourPointsSizeBuf","buildingContoursSizeBuf","buildingIdSize","contourPointsSize","buildingContoursSize","buildingIdBuf","baseAltitudeBuf","topAltitudeBuf","centroidBuf","contourPointsLatLngDoublesBuf","contourPointCountsBuf","contourBottomAltitudeBuf","contourTopAltitudeBuf","contourPointsLatLngDoubles","contourPointCounts","contourBottomAltitudes","contourTopAltitudes","pointBufferIndex","contourIndex","pointCount","contour","rayBuffer","intersectionLatLngAltBuffer","didIntersect","found","EmscriptenRenderingApi","_renderingApi_SetMapCollapsed","_renderingApi_SetClearColor","_renderingApi_GetCameraRelativePosition","_renderingApi_GetCameraProjectionMatrix","_renderingApi_GetCameraOrientationMatrix","_renderingApi_GetLightingData","_renderingApi_GetNorthFacingOrientationMatrix","clearColorRGBA32","renderPosition","projection","lightingData","back","fill","ambient","EmscriptenLayerPointMappingApi","_createPointMappingWithFloorIndex","_getPointsOnMapForLayer","_createLatLngsNumberArray","latLngsNumberArray","destBaseIndex","latLngCount","resultLatLngAltDoubles","expectedArrayLength","resultLatLngAlts","resultIndex","IndoorMapEntitySetProp","geometryId","_name","_geometryId","_elevationMode","EmscriptenPropsApi","_propsApi_createProp","_propsApi_createProps","_propsApi_destroyProp","_propsApi_destroyProps","_propsApi_propExists","_propsApi_setLocation","_propsApi_setElevation","_propsApi_setElevationMode","_propsApi_setGeometryId","_propsApi_setHeadingDegrees","_propsApi_setAutomaticIndoorMapPopulationEnabled","_propsApi_isAutomaticIndoorMapPopulationEnabled","_propsApi_getIndoorMapPropCount","_propsApi_tryGetIndoorMapPropDataBufferSizes","_propsApi_tryGetIndoorMapPropData","_propsApi_setIndoorMapPopulationServiceUrl","_propsApi_setIndoorMapEntitySetPropsLoadedCallback","_propsApi_setIndoorMapPopulationRequestCompletedCallback","_indoorMapEntitySetPropsLoadedCallback","registerIndoorMapEntitySetPropsLoadedHandler","indoorMapEntitySetPropsLoadedHandler","latitude","longitude","indoorMapIdArray","floorIdArray","nameArray","latitudeArray","longitudeArray","elevationArray","elevationModeArray","headingDegreesArray","geometryIdArray","propCount","out_propIdsBuffer","elevationModeIntArray","floorIdBuffer","latitudeBuffer","longitudeBuffer","elevationBuffer","elevationModeBuffer","headingDegreesBuffer","indoorMapIdArrayPtr","indoorMapIdArraySize","nameArrayPtr","nameArraySize","geometryIdArrayPtr","geometryIdArraySize","propIdArray","propIdArrayPtr","propIdArraySize","propExists","latitudeDegrees","longitudeDegrees","indoorMapPerPropNameSizesBuf","indoorMapPerPropModelSizesBuf","indoorMapPropBufferSizesBuf","indoorMapPerPropNameSizes","indoorMapPerPropModelSizes","indoorMapPropBufferSizes","indoorMapPropModelTotalSize","indoorMapPropStringNamesBuf","indoorMapPropStringModelsBuf","indoorMapPropLatLngBuf","indoorMapPropHeightBuf","indoorMapPropOrientationBuf","indoorMapPropStringNames","indoorMapPropStringModels","indoorMapPropLatLngs","indoorMapPropHeights","indoorMapPropOrientation","indoorMapEntityPropList","nameBufferHead","modelBufferHead","nameBufferEnd","modelBufferEnd","model","IndoorMapEntityInformation","_nativeId","_indoorMapEntities","_loadState","getIndoorMapEntities","getLoadState","IndoorMapEntities","LoadState","NONE","PARTIAL","COMPLETE","IndoorMapEntity","indoorMapEntityId","outline","_indoorMapEntityId","_position","_outline","getIndoorMapEntityId","getOutline","HeatmapOcclusionMapFeature","EmscriptenIndoorMapEntityInformationApi","_indoorEntityInformationApi_IndoorMapEntityInformationChangedCallback","_indoorEntityInformationApi_CreateIndoorMapEntityInformation","_indoorEntityInformationApi_DestroyIndoorMapEntityInformation","_indoorEntityInformationApi_TryGetIndoorMapEntityCountBuffer","_indoorEntityInformationApi_TryGetIndoorMapEntityInformationLoadState","_indoorEntityInformationApi_TryGetIndoorMapEntityBuffersSize","_indoorEntityInformationApi_TryGetIndoorMapEntityModels","indoorEntityInformation","IndoorMapEntityInformationId","loadStateBuf","indoorMapEntityInformationLoadState","indoorMapEntitiesCountBuf","indoorMapEntityCount","indoorMapEntityBufferSizesBuf","indoorMapEntityIdsSizesBuf","indoorMapEntityBufferSize","indoorMapEntityStringIdSizes","indoorMapEntityIdsTotalSize","latLngsPerContourSize","latLngsSize","indoorMapEntityStringIdsBuf","indoorMapFloorIdBuf","positionLatLngBuf","contoursPerPolygonBuf","latLngsPerContourBuf","latLngsBuf","indoorMapEntityStringIds","indoorMapEntityFloorIds","positionLatLng","contoursPerPolygon","latLngsPerContour","latLngsDegrees","indoorMapEntitiesList","idBufferHead","latLngsPerContourHead","latLngsDegreesHead","idBufferEnd","indoorMapEntityFloorId","polygonPoints","latLngsPerContourEndIndex","latLngsPerContourIndex","contourPoints","latLngsDegreesEndIndex","entity","IndoorMapFloorOutlinePolygon","outerRing","innerRings","_outerRing","_innerRings","getOuterRing","getInnerRings","IndoorMapFloorOutlinePolygonRing","latLngPoints","_latLngPoints","getLatLngPoints","EmscriptenIndoorMapFloorOutlineInformationApi","_indoorMapFloorOutlineInformationApi_IndoorMapFloorOutlineInformationLoadedCallback","_indoorMapFloorOutlineInformationApi_CreateIndoorMapFloorOutlineInformation","_indoorMapFloorOutlineInformationApi_DestroyIndoorMapFloorOutlineInformation","_indoorMapFloorOutlineInformationApi_GetIndoorMapFloorOutlineInformationLoaded","_indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlineBufferSize","_indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygonBufferSizes","_indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygon","indoorMapFloorOutlinesCountBuf","indoorMapFloorOutlinesCount","outlinePolygons","outerRingPointCountBuf","innerRingsCountBuf","innerRingsTotalPointCountBuf","outerRingPointCount","innerRingsCount","innerRingsTotalPointCount","outerRingPointsLatLngDoublesBuf","innerRingsPointCountBuf","innerRingPointsLatLngDoublesBuf","outerRingPointsLatLngDoubles","innerRingsPointCount","innerRingPointsLatLngDoubles","_getOutlinePolygonRing","innerRingBufferIndex","innerRing","outlinePolygon","doublesLatLngArray","startIndex","ringPoints","EmscriptenPolylineApi","_polylineApi_createPolyline","_polylineApi_destroyPolyline","_polylineApi_setIndoorMap","_polylineApi_setElevation","_polylineApi_setStyleAttributes","perPointElevations","anyAltitudes","altOrDefault","coordsBuf","perPointElevationsBuf","getWidth","miterLimit","getMiterLimit","_needsNativeUpdate","EmscriptenBlueSphereApi","_blueSphereApi_setEnabled","_blueSphereApi_setCoordinate","_blueSphereApi_setElevation","_blueSphereApi_setIndoorMap","_blueSphereApi_setHeadingDegrees","_blueSphereApi_showOrientation","EmscriptenMapRuntimeApi","_pauseWebgl","_resumeWebgl","_removeWebgl","EmscriptenVersionApi","_versionApi_GetPlatformVersionStringSize","_versionApi_TryGetPlatformVersionString","_versionApi_GetPlatformHashStringSize","_versionApi_TryGetPlatformHashString","_tryGetNativeVersionString","Heatmap","Layer","Class","dataCoordProperty","dataWeightProperty","weightMin","weightMax","resolutionPixels","textureBorderPercent","useApproximation","densityStops","stop","gain","densityBlend","interpolateDensityByZoom","zoomMin","zoomMax","colorGradient","opacity","intensityBias","intensityScale","occludedMapFeatures","BUILDINGS","TREES","occludedAlpha","occludedSaturation","occludedBrightness","_loadPointData","pointData","weightedCoords","pointDatum","weight","_pointDatum","_getArrayDepth","array","arrayDepth","testElement","_loadLatLngAlts","_loadPolygonRings","coordsArray","polygonRings","holeCoords","_loadDensityParams","densityParams","_loadDensityStops","densityStopsArray","densityStopsSet","_loadColorStop","colorStopParams","_loadColorGradient","gradientStopsArray","gradientStop","setOptions","_pointData","getData","setData","_changedFlags","getPolygonPoints","getWeightMin","getWeightMax","getResolutionPixels","getTextureBorderPercent","getUseApproximation","getDensityStops","getDensityBlend","getInterpolateDensityByZoom","getZoomMin","getZoomMax","getColorGradient","getOpacity","getIntensityBias","getIntensityScale","getOccludedMapFeatures","getOccludedAlpha","getOccludedSaturation","getOccludedBrightness","setDensityBlend","min","setInterpolateDensityByZoom","setZoomMin","setZoomMax","setIntensityBias","setIntensityScale","setOpacity","setColorGradient","setResolution","resolution","setDensityStops","setUseApproximation","setWeightMin","setWeightMax","setPolygonPoints","_update","beforeAdd","onAdd","occludedStyle","_anyChanged","some","Boolean","_getChangedFlags","_clearChangedFlags","EmscriptenHeatmapApi","_heatmapApi_createHeatmap","_heatmapApi_destroyHeatmap","_heatmapApi_setIndoorMap","_heatmapApi_setElevation","_heatmapApi_setDensityBlend","_heatmapApi_setInterpolateDensityByZoom","_heatmapApi_setIntensityBias","_heatmapApi_setIntensityScale","_heatmapApi_setOpacity","_heatmapApi_setColorGradient","_heatmapApi_setResolution","_heatmapApi_setHeatmapDensities","_heatmapApi_useApproximation","_heatmapApi_setData","_buildFlatData","dataFlat","polygonCoords","polygonRingVertexCounts","polygonVertexCoordsBuffer","polygonRingVertexCountsBuffer","pointDataBuf","heatmapDensityStops","heatmapRadii","heatmapGains","density","gradientStops","gradientColors","gradient","heatmapDensityStopsBuffer","heatmapRadiiBuffer","heatmapGainsBuffer","gradientStopsBuffer","gradientColorsBuffer","occludedMapFeaturesInt","occlusionFeature","GROUND","TRANSPORT","occludedMapFeaturesToInt","changedFlags","EmscriptenFrameRateApi","_frameRateApi_SetTargetVSyncInterval","_frameRateApi_SetThrottledTargetFrameInterval","_frameRateApi_SetIdleSecondsBeforeThrottle","_frameRateApi_SetThrottleWhenIdleEnabled","_frameRateApi_CancelThrottle","throttledTargetFrameIntervalMS","EmscriptenApi","onUpdateCallback","onDrawCallback","onInitialStreamingCompletedCallback","_setTopLevelCallbacks","_baseUrl","_mapObjects","_emscriptenStartedLoading","_emscriptenFinishedLoading","_mapsWaitingInitialization","onEmscriptenLoaded","window","createWrldModule","Circle","_project","degToRad","latR","_mRadius","lngR","forwardLatLng","rightLatLng","_point","distanceTo","_radiusY","_updateBounds","circle","Polygon","setLatLngs","_setLatLngs","_convertLatLngs","Polyline","addLatLng","Rectangle","rectangle","Prop","__geometryIdNeedsChanged","__locationNeedsChanged","__headingDegreesNeedsChanged","__elevationNeedsChanged","__elevationModeNeedsChanged","_holes","_config","__colorNeedsChanged","addHole","loadLatLngs","holeLatLng","coord","setStyle","IndoorMapFloorOutlineInformation","_outlinePolygons","_isLoaded","getIndoorMapFloorOutlinePolygons","getIsLoaded","wrldModule","script","body","Module","exitCode","createEmscriptenModule","elementOrId","HTMLElement","findMapContainerElement","mapApiObject","initializeMap","Wrld","Default","imagePath"],"mappings":"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"}