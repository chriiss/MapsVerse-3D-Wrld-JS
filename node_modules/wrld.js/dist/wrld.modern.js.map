{"version":3,"file":"wrld.modern.js","sources":["../src/private/polyfills.js","../src/private/indoor_map_layer_options.js","../src/private/factoryFor.ts","../src/public/popup.ts","../src/public/space.ts","../src/public/map.ts","../src/private/html_map_container.js","../src/private/eegeo_dom_util.ts","../src/private/elevation_mode.ts","../src/public/marker.ts","../src/private/indoor_entrance_marker_updater.js","../src/private/events/map_move_events.ts","../src/private/modules/map_module.ts","../src/public/themes.ts","../src/private/modules/themes_module.ts","../src/public/indoors/indoor_map.ts","../src/public/indoors/indoor_map_entrance.ts","../src/public/indoors/indoor_map_floor.ts","../src/private/indoor_watermark_controller.js","../src/private/modules/indoors_module.js","../src/private/id_to_object_map.js","../src/public/precaching/precache_operation_result.ts","../src/private/modules/precache_module.js","../src/private/modules/camera_module.js","../src/private/modules/polygon_module.js","../src/private/modules/polyline_module.js","../src/private/modules/routing_module.js","../src/private/modules/rendering_module.js","../src/private/modules/buildings_module.js","../src/private/modules/prop_module.js","../src/private/modules/indoor_map_entity_information_module.js","../src/private/modules/indoor_map_floor_outline_information_module.js","../src/private/modules/blue_sphere_module.js","../src/private/modules/map_runtime_module.js","../src/private/modules/layer_point_mapping_module.js","../src/private/modules/version_module.js","../src/private/modules/heatmap_module.js","../src/private/modules/frame_rate_module.js","../src/private/eegeo_map_controller.js","../src/private/emscripten_api/emscripten_memory.js","../src/private/emscripten_api/emscripten_interop_utils.js","../src/private/emscripten_api/emscripten_geofence_api.js","../src/private/emscripten_api/emscripten_indoors_api.js","../src/private/emscripten_api/emscripten_precache_api.js","../src/private/emscripten_api/emscripten_spaces_api.js","../src/private/emscripten_api/emscripten_themes_api.js","../src/private/emscripten_api/emscripten_camera_api.js","../src/private/emscripten_api/emscripten_expand_floors_api.js","../src/private/emscripten_api/emscripten_indoor_entity_api.js","../src/public/buildings/building_highlight.ts","../src/public/buildings/building_highlight_options.ts","../src/public/buildings/building_information.ts","../src/public/buildings/building_dimensions.ts","../src/public/buildings/building_contour.ts","../src/public/indoorMapEntities/indoor_map_entity_information.ts","../src/private/emscripten_api/emscripten_buildings_api.js","../src/private/emscripten_api/emscripten_rendering_api.js","../src/private/emscripten_api/emscripten_layer_point_mapping_api.js","../src/public/entity_set_prop.ts","../src/private/emscripten_api/emscripten_props_api.js","../src/public/indoorMapEntities/indoor_map_entity.ts","../src/public/heatmap.ts","../src/private/emscripten_api/emscripten_indoor_map_entity_information_api.js","../src/public/indoorMapFloorOutlines/indoor_map_floor_outline_polygon.ts","../src/public/indoorMapFloorOutlines/indoor_map_floor_outline_polygon_ring.ts","../src/private/emscripten_api/emscripten_indoor_map_floor_outline_information_api.js","../src/private/emscripten_api/emscripten_polyline_api.js","../src/private/emscripten_api/emscripten_blue_sphere_api.js","../src/private/emscripten_api/emscripten_map_runtime_api.js","../src/private/emscripten_api/emscripten_version_api.js","../src/private/emscripten_api/emscripten_heatmap_api.js","../src/private/emscripten_api/emscripten_frame_rate_api.js","../src/private/emscripten_api/emscripten_api.js","../src/public/map_factory.ts","../src/public/circle.ts","../src/public/polygon.ts","../src/public/polyline.ts","../src/public/rectangle.ts","../src/public/prop.ts","../src/public/native/polygon.ts","../src/public/native/polyline.ts","../src/public/indoorMapFloorOutlines/indoor_map_floor_outline_information.ts","../src/index.ts"],"sourcesContent":["if (!Array.prototype.findIndex) {\r\n    Array.prototype.findIndex = function(predicate) {\r\n        \"use strict\";\r\n        if (this === null) {\r\n            throw new TypeError(\"Array.prototype.findIndex called on null or undefined\");\r\n        }\r\n        if (typeof predicate !== \"function\") {\r\n            throw new TypeError(\"predicate must be a function\");\r\n        }\r\n        var list = Object(this);\r\n        var length = list.length >>> 0;\r\n        var thisArg = arguments[1];\r\n        var value;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            value = list[i];\r\n            if (predicate.call(thisArg, value, i, list)) {\r\n            return i;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n}\r\n\r\nif (!Array.prototype.find) {\r\n    Array.prototype.find = function(predicate) {\r\n        \"use strict\";\r\n        if (this === null) {\r\n            throw new TypeError(\"Array.prototype.find called on null or undefined\");\r\n        }\r\n        if (typeof predicate !== \"function\") {\r\n            throw new TypeError(\"predicate must be a function\");\r\n        }\r\n        var list = Object(this);\r\n        var length = list.length >>> 0;\r\n        var thisArg = arguments[1];\r\n        var value;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            value = list[i];\r\n            if (predicate.call(thisArg, value, i, list)) {\r\n                return value;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n}\r\n","const _getOptionsPropertyOrNull = (layer, propertyName) => {\r\n    if (typeof layer.options === \"undefined\") {\r\n        return null;\r\n    }\r\n\r\n    if (propertyName in layer.options) {\r\n        return layer.options[propertyName];\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nexport const getIndoorMapId = (layer) => {\r\n    var indoorMapId = _getOptionsPropertyOrNull(layer, \"indoorMapId\");\r\n    return indoorMapId === \"\" ? null : indoorMapId;\r\n};\r\n\r\nexport const hasIndoorMap = (layer) => getIndoorMapId(layer) !== null;\r\n\r\nexport const getIndoorMapFloorId = (layer) => _getOptionsPropertyOrNull(layer, \"indoorMapFloorId\");\r\n\r\nexport const getIndoorMapFloorIndex = (layer) => {\r\n    var indoorMapFloorIndex = _getOptionsPropertyOrNull(layer, \"indoorMapFloorIndex\");\r\n\r\n    if (indoorMapFloorIndex !== null) {\r\n        return indoorMapFloorIndex;\r\n    }\r\n\r\n    // try a legacy-named option to maintain backwards compat\r\n    return _getOptionsPropertyOrNull(layer, \"indoorFloorIndex\");\r\n};\r\n\r\nexport const getLayerDisplayOption = (layer) => {\r\n    var displayOption = _getOptionsPropertyOrNull(layer, \"displayOption\") || \"currentFloor\";\r\n    return displayOption;\r\n};\r\n\r\nexport const matchesCurrentFloor = (activeIndoorMapFloorId, activeIndoorMapFloorIndex, layer) => {\r\n    if (activeIndoorMapFloorId === getIndoorMapFloorId(layer)) {\r\n        return true;\r\n    }\r\n\r\n    return activeIndoorMapFloorIndex === getIndoorMapFloorIndex(layer);\r\n};\r\n\r\nexport const matchesIndoorMap = (activeIndoorMapId, activeIndoorMapFloorId, activeIndoorMapFloorIndex, layer) => {\r\n    var displayOption = getLayerDisplayOption(layer);\r\n\r\n    if (displayOption === \"always\") {\r\n        return true;\r\n    }\r\n\r\n    if (displayOption === \"currentIndoorMap\" && activeIndoorMapId === getIndoorMapId(layer)) {\r\n        return true;\r\n    }\r\n\r\n    if (displayOption === \"currentFloor\" &&\r\n        activeIndoorMapId === getIndoorMapId(layer) &&\r\n        matchesCurrentFloor(activeIndoorMapFloorId, activeIndoorMapFloorIndex, layer)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n};\r\n\r\nconst _copyOption = (sourceOptions, destOptions, sourcePropertyName, destPropertyName) => {\r\n    if (!(sourcePropertyName in sourceOptions)) {\r\n        return;\r\n    }\r\n\r\n    if (destPropertyName in destOptions) {\r\n        return;\r\n    }\r\n\r\n    destOptions[destPropertyName] = sourceOptions[sourcePropertyName];\r\n};\r\n\r\nexport const copyIndoorMapOptions = (sourceOptions, destOptions) => {\r\n    _copyOption(sourceOptions, destOptions, \"indoorMapId\", \"indoorMapId\");\r\n    _copyOption(sourceOptions, destOptions, \"indoorMapFloorId\", \"indoorMapFloorId\");\r\n    _copyOption(sourceOptions, destOptions, \"indoorMapFloorIndex\", \"indoorMapFloorIndex\");\r\n    _copyOption(sourceOptions, destOptions, \"indoorFloorIndex\", \"indoorMapFloorIndex\");\r\n};\r\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport type Class = new (...args: any[]) => any;\r\n\r\nexport type Constructor<T extends Class> = (...args: ConstructorParameters<T>) => InstanceType<T>;\r\n\r\nexport const factoryFor = <T extends Class>(cla$$: T): Constructor<T> => (...args) => new cla$$(...args);\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport type { ElevationMode } from \"../types/elevationMode\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport type PopupOptions = L.PopupOptions & {\r\n  elevation?: number;\r\n  elevationMode?: ElevationMode;\r\n  closeWhenMovedOffscreen?: boolean;\r\n};\r\n\r\ndeclare class PopupType extends L.Popup {\r\n  options: PopupOptions;\r\n  constructor(options?: PopupOptions, source?: L.Layer);\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n}\r\n\r\nexport type Popup = PopupType;\r\n\r\nexport const Popup: typeof PopupType = L.Popup.extend({\r\n  options: {\r\n    elevation: 0,\r\n    closeWhenMovedOffscreen: false,\r\n  },\r\n\r\n  _onScreen: false,\r\n\r\n  getElevation: function () {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  setElevation: function (elevation: number) {\r\n    this.options.elevation = elevation;\r\n    return this;\r\n  },\r\n\r\n  getCloseWhenMovedOffscreen: function () {\r\n    return this.options.closeWhenMovedOffscreen;\r\n  },\r\n\r\n  setCloseWhenMovedOffscreen: function (closeWhenMovedOffscreen: boolean) {\r\n    this.options.closeWhenMovedOffscreen = closeWhenMovedOffscreen;\r\n    return this;\r\n  },\r\n\r\n  _updateContent: function () {\r\n    if (!this._content) {\r\n      return;\r\n    }\r\n\r\n    const node = this._contentNode;\r\n    const content = typeof this._content === \"function\" ? this._content(this._source || this) : this._content;\r\n\r\n    let contentNeedsUpdate = true;\r\n    if (content.outerHTML && content.outerHTML === node.innerHTML) {\r\n      // This test will fail to detect changes which don't affect HTML, but otherwise the DOM for the popup is\r\n      // rebuilt every update cycle.  This makes embedding external HTML impossible.\r\n      contentNeedsUpdate = false;\r\n    }\r\n\r\n    if (typeof content === \"string\") {\r\n      node.innerHTML = content;\r\n    } else if (!node.hasChildNodes() || contentNeedsUpdate) {\r\n      while (node.hasChildNodes()) {\r\n        node.removeChild(node.firstChild);\r\n      }\r\n      node.appendChild(content);\r\n    }\r\n    this.fire(\"contentupdate\");\r\n  },\r\n\r\n  update: function () {\r\n    if (!this._map) {\r\n      return;\r\n    }\r\n\r\n    this._container.style.visibility = \"hidden\";\r\n\r\n    this._updateContent();\r\n    this._updateLayout();\r\n    this._updatePosition();\r\n\r\n    this._container.style.visibility = \"\";\r\n\r\n    this._adjustPan();\r\n\r\n    if (this.options.closeWhenMovedOffscreen) {\r\n      if (this._onScreen && this._checkOutOfBounds()) {\r\n        this._onScreen = false;\r\n        this._close();\r\n      } else {\r\n        this._onScreen = !this._checkOutOfBounds();\r\n      }\r\n    }\r\n  },\r\n\r\n  _updatePosition: function () {\r\n    if (!this._map) {\r\n      return;\r\n    }\r\n\r\n    // todo: should probably just have a single api point here to get screen pos\r\n    const latLngs = this._map.latLngsForLayer(this);\r\n    const pos = this._map.latLngToLayerPoint(latLngs[0]);\r\n    let offset = L.point(this.options.offset);\r\n\r\n    const anchor = this._getAnchor();\r\n    anchor.x = Math.round(anchor.x);\r\n    anchor.y = Math.round(anchor.y);\r\n\r\n    if (this._zoomAnimated) {\r\n      L.DomUtil.setPosition(this._container, pos.add(anchor));\r\n    } else {\r\n      offset = offset.add(pos).add(anchor);\r\n    }\r\n\r\n    const bottom = (this._containerBottom = -offset.y);\r\n    const left = (this._containerLeft = -Math.round(this._containerWidth / 2) + offset.x);\r\n\r\n    const bottom_style = Math.round(bottom) + \"px\";\r\n    const left_style = Math.round(left) + \"px\";\r\n\r\n    if (L.DomUtil.getStyle(this._container, \"left\") !== left_style) {\r\n      // Do not update if style is already applied to prevent vertical wiggling\r\n      this._container.style.left = left_style;\r\n    }\r\n\r\n    if (L.DomUtil.getStyle(this._container, \"bottom\") !== bottom_style) {\r\n      // bottom position the popup in case the height of the popup changes (images loading etc)\r\n      this._container.style.bottom = bottom_style;\r\n    }\r\n  },\r\n\r\n  _checkOutOfBounds: function () {\r\n    const rect = this._container.getBoundingClientRect();\r\n    const rectHeight = rect.bottom - rect.top;\r\n    const rectWidth = rect.right - rect.left;\r\n    const mapRect = this._map._container.getBoundingClientRect();\r\n\r\n    const offBottom = rect.bottom > mapRect.bottom + rectHeight / 2.0;\r\n    const offTop = rect.top < mapRect.top - rectHeight / 2.0;\r\n    const offRight = rect.right > mapRect.right + rectWidth / 2.0;\r\n    const offleft = rect.left < mapRect.left - rectWidth / 2.0;\r\n    return offBottom || offTop || offRight || offleft;\r\n  },\r\n});\r\n\r\nexport const popup = factoryFor(Popup);\r\n","import L from \"leaflet\";\r\n\r\nexport class Vector3 {\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n\r\n  constructor(vector: Vector3);\r\n  constructor(vector: [number, number, number]);\r\n  constructor(x: number);\r\n  constructor(x: number, y: number);\r\n  constructor(x: number, y: number, z: number);\r\n  constructor(...args: Vector3[] | number[] | ([number, number, number][])) {\r\n    if (typeof (args[0]) === \"number\") {\r\n      const [x, y, z] = (args as number[]);\r\n      this.x = x;\r\n      this.y = y;\r\n      this.z = z || 0.0;\r\n    } else {\r\n      const vector = args[0];\r\n      this.x = !Array.isArray(vector) ? vector.x : vector[0];\r\n      this.y = !Array.isArray(vector) ? vector.y : vector[1] || 0.0;\r\n      this.z = !Array.isArray(vector) ? vector.z : vector[2] || 0.0;\r\n    }\r\n  }\r\n\r\n  toPoint (): L.Point {\r\n    return L.point(this.x, this.y);\r\n  }\r\n}\r\n\r\nexport class Vector4 {\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n  w: number;\r\n\r\n  constructor(vector: Vector4);\r\n  constructor(vector: [number, number, number?, number?]);\r\n  constructor(x: number);\r\n  constructor(x: number, y: number);\r\n  constructor(x: number, y: number, z: number);\r\n  constructor(x: number, y: number, z: number, w: number);\r\n  constructor(...args: Vector4[] | number[] | ([number, number, number?, number?][])) {\r\n    if (typeof (args[0]) === \"number\") {\r\n      const [x, y, z, w] = (args as number[]);\r\n      this.x = x;\r\n      this.y = y;\r\n      this.z = z || 0.0;\r\n      this.w = w || 1.0;\r\n    } else {\r\n      const vector = args[0];\r\n      this.x = !Array.isArray(vector) ? vector.x : vector[0];\r\n      this.y = !Array.isArray(vector) ? vector.y : vector[1];\r\n      this.z = !Array.isArray(vector) ? vector.z : vector[2] || 0.0;\r\n      this.w = !Array.isArray(vector) ? vector.w : vector[3] || 1.0;\r\n    }\r\n  }\r\n}\r\n\r\n// TODO: fix DRY fail -- this should move to platform\r\n// Judging by Leaflet, approx = 2.74287e7 * Math.exp(-0.622331 * zoom)\r\nconst _altitudes = [\r\n  27428700,\r\n  14720762,\r\n  8000000,\r\n  4512909,\r\n  2087317,\r\n  1248854,\r\n  660556,\r\n  351205,\r\n  185652,\r\n  83092,\r\n  41899,\r\n  21377,\r\n  11294,\r\n  5818,\r\n  3106,\r\n  1890,\r\n  1300,\r\n  821,\r\n  500,\r\n  300,\r\n  108,\r\n  58,\r\n  31,\r\n  17,\r\n  9,\r\n  5\r\n];\r\n\r\nconst _lerp = (a: number, b: number, c: number) => a + c * (b - a);\r\n\r\nconst _altitudeToZoom = (altitude: number, comparisonFunc: (altitude: number, zoomLevelDistance: number) => boolean) => {\r\n  const zoom = _altitudes.findIndex((zoomLevelDistance) => {\r\n    return comparisonFunc(altitude, zoomLevelDistance);\r\n  });\r\n  const maxZoom = _altitudes.length - 1;\r\n  return (zoom === -1) ? maxZoom : zoom;\r\n};\r\n\r\nconst _nearestZoomAbove = (distance: number) => {\r\n  const zoomAbove = _altitudeToZoom(distance, (d, z) => { return d > z; });\r\n  return Math.max(0, zoomAbove - 1);\r\n};\r\n\r\nconst _nearestZoomBelow = (distance: number) => _altitudeToZoom(distance, (d, z) => d >= z);\r\n\r\nexport const zoomToDistance = (zoom: number): number => {\r\n  let zoomlevel = zoom;\r\n  if (zoomlevel < 0) {\r\n    zoomlevel = 0;\r\n  } else if (zoomlevel >= _altitudes.length) {\r\n    zoomlevel = _altitudes.length - 1;\r\n  }\r\n\r\n  const nearestZoomBelow = Math.floor(zoomlevel);\r\n  const nearestZoomAbove = Math.ceil(zoomlevel);\r\n  const valueBetweenNearestZoomLevels = zoomlevel - nearestZoomBelow;\r\n  return _lerp(_altitudes[nearestZoomBelow], _altitudes[nearestZoomAbove], valueBetweenNearestZoomLevels);\r\n};\r\n\r\nexport const distanceToZoom = (distance: number): number => {\r\n  const smallestAltitude = _altitudes.length - 1;\r\n  if (distance < _altitudes[smallestAltitude]) {\r\n    distance = _altitudes[smallestAltitude];\r\n  }\r\n  if (distance > _altitudes[0]) {\r\n    distance = _altitudes[0];\r\n  }\r\n  const nearestZoomAbove = _nearestZoomAbove(distance);\r\n  const nearestZoomBelow = _nearestZoomBelow(distance);\r\n  const distanceBetweenNearestZoomLevels = _altitudes[nearestZoomAbove] - _altitudes[nearestZoomBelow];\r\n  const distanceFromZoomLevelBelow = distance - _altitudes[nearestZoomBelow];\r\n\r\n  return (nearestZoomAbove === nearestZoomBelow) ? nearestZoomBelow : _lerp(nearestZoomBelow, nearestZoomAbove, distanceFromZoomLevelBelow / distanceBetweenNearestZoomLevels);\r\n};\r\n","import L from \"leaflet\";\r\nimport type EmscriptenApi from \"../private/emscripten_api/emscripten_api\";\r\nimport { hasIndoorMap, matchesIndoorMap } from \"../private/indoor_map_layer_options\";\r\nimport Color from \"../types/color\";\r\nimport type { Layer, Map as MapType, MapOptions, PrecacheHandler, PrecacheResponse, ZoomPanOptions } from \"./map_type\";\r\nimport { Popup, PopupOptions } from \"./popup\";\r\nimport { Vector3 } from \"./space\";\r\n\r\nconst undefinedPoint = L.point(-100, -100);\r\nconst undefinedLatLng = L.latLng(0, 0);\r\n\r\nconst getCenterOfLayer = (layer: Layer) => {\r\n  if (layer.getLatLng) {\r\n    return layer.getLatLng();\r\n  }\r\n  if (layer.getBounds) {\r\n    return layer.getBounds().isValid() ? layer.getBounds().getCenter() : null;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst convertLatLngToVector = (latLng: L.LatLng): Vector3 => {\r\n  const lat = (latLng.lat * Math.PI) / 180;\r\n  const lng = (latLng.lng * Math.PI) / 180;\r\n\r\n  const x = Math.cos(lat) * Math.cos(lng);\r\n  const y = Math.cos(lat) * Math.sin(lng);\r\n  const z = Math.sin(lat);\r\n\r\n  return new Vector3(x, y, z);\r\n};\r\n\r\n// Prevent Renderer from panning and scaling the overlay layer\r\nL.Renderer.include({\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  _updateTransform: () => {},\r\n});\r\n\r\nexport const Map: typeof MapType = L.Map.extend({\r\n  initialize: function (\r\n    this: MapType,\r\n    browserWindow: typeof MapType.prototype._browserWindow,\r\n    id: number,\r\n    options: MapOptions,\r\n    onRemoveCallback: typeof MapType.prototype._onRemoveCallback,\r\n    cameraModule: typeof MapType.prototype._cameraModule,\r\n    precacheModule: typeof MapType.prototype._precacheModule,\r\n    themesModule: typeof MapType.prototype.themes,\r\n    indoorsModule: typeof MapType.prototype.indoors,\r\n    polygonModule: typeof MapType.prototype._polygonModule,\r\n    polylineModule: typeof MapType.prototype._polylineModule,\r\n    layerPointMappingModule: typeof MapType.prototype._layerPointMappingModule,\r\n    routingModule: typeof MapType.prototype.routes,\r\n    renderingModule: typeof MapType.prototype.rendering,\r\n    buildingsModule: typeof MapType.prototype.buildings,\r\n    propModule: typeof MapType.prototype.props,\r\n    indoorMapEntityInformationModule: typeof MapType.prototype.indoorMapEntities,\r\n    indoorMapFloorOutlineInformationModule: typeof MapType.prototype.indoorMapFloorOutlines,\r\n    blueSphereModule: typeof MapType.prototype.blueSphere,\r\n    mapRuntimeModule: typeof MapType.prototype._mapRuntimeModule,\r\n    versionModule: typeof MapType.prototype.versionModule,\r\n    heatmapModule: typeof MapType.prototype.heatmaps,\r\n    frameRateModule: typeof MapType.prototype._frameRateModule\r\n  ) {\r\n    this._browserWindow = browserWindow;\r\n    this._onRemoveCallback = onRemoveCallback;\r\n    this._cameraModule = cameraModule;\r\n    this._precacheModule = precacheModule;\r\n    this._polygonModule = polygonModule;\r\n    this._polylineModule = polylineModule;\r\n    this._layerPointMappingModule = layerPointMappingModule;\r\n    this._frameRateModule = frameRateModule;\r\n    this.themes = themesModule;\r\n    this.indoors = indoorsModule;\r\n    this.routes = routingModule;\r\n    //TODO: The public methods exposed by the RenderingModule require documentation, test coverage and examples.\r\n    //Reverting the change to private as it is being used by the Search Bar and might be used in other places\r\n    //which we may not know about.\r\n    this.rendering = renderingModule;\r\n    this.buildings = buildingsModule;\r\n    this.props = propModule;\r\n    this.indoorMapEntities = indoorMapEntityInformationModule;\r\n    this.indoorMapFloorOutlines = indoorMapFloorOutlineInformationModule;\r\n    this.blueSphere = blueSphereModule;\r\n    this.versionModule = versionModule;\r\n    this.heatmaps = heatmapModule;\r\n    this._mapRuntimeModule = mapRuntimeModule;\r\n    this._layersOnMap = {};\r\n    this._spacesApi = null;\r\n    this._ready = false;\r\n    this._viewInitialized = false;\r\n\r\n    L.Map.prototype.initialize.call(this, id, options);\r\n\r\n    this.dragging.disable();\r\n    this.touchZoom.disable();\r\n    this.doubleClickZoom.disable();\r\n    this.scrollWheelZoom.disable();\r\n    this.boxZoom.disable();\r\n    this.keyboard.disable();\r\n\r\n    this.attributionControl.setPrefix(\r\n      \"<a href='http://leafletjs.com' title='A JS library for interactive maps' target='_blank'>Leaflet</a>\"\r\n    );\r\n    this.attributionControl.addAttribution(\r\n      \"3D Maps &copy; <a href='https://www.wrld3d.com' target='_blank'>WRLD</a> and <a href='https://www.wrld3d.com/legal/' target='_blank'>partners</a>\"\r\n    );\r\n  },\r\n\r\n  _initEvents: function (this: MapType, remove: boolean, surface: HTMLElement) {\r\n    if (!L.DomEvent || !surface) {\r\n      return;\r\n    }\r\n\r\n    this._targets = {};\r\n    this._targets[L.stamp(surface)] = this;\r\n\r\n    const onOff = remove ? \"off\" : \"on\";\r\n\r\n    // @event click: MouseEvent\r\n    // Fired when the user clicks (or taps) the map.\r\n    // @event dblclick: MouseEvent\r\n    // Fired when the user double-clicks (or double-taps) the map.\r\n    // @event mousedown: MouseEvent\r\n    // Fired when the user pushes the mouse button on the map.\r\n    // @event mouseup: MouseEvent\r\n    // Fired when the user releases the mouse button on the map.\r\n    // @event mouseover: MouseEvent\r\n    // Fired when the mouse enters the map.\r\n    // @event mouseout: MouseEvent\r\n    // Fired when the mouse leaves the map.\r\n    // @event mousemove: MouseEvent\r\n    // Fired while the mouse moves over the map.\r\n    // @event contextmenu: MouseEvent\r\n    // Fired when the user pushes the right mouse button on the map, prevents\r\n    // default browser context menu from showing if there are listeners on\r\n    // this event. Also fired on mobile when the user holds a single touch\r\n    // for a second (also called long press).\r\n    // @event keypress: KeyboardEvent\r\n    // Fired when the user presses a key from the keyboard while the map is focused.\r\n    L.DomEvent[onOff](\r\n      surface,\r\n      \"click dblclick mousedown mouseup \" + \"mouseover mouseout mousemove contextmenu keypress\",\r\n      this._handleDOMEvent,\r\n      this\r\n    );\r\n    L.DomEvent[onOff](\r\n      this._container,\r\n      \"click dblclick mousedown mouseup \" + \"mouseover mouseout mousemove contextmenu keypress\",\r\n      this._handleDOMEvent,\r\n      this\r\n    );\r\n\r\n    if (this.options.trackResize) {\r\n      L.DomEvent[onOff](this._browserWindow as unknown as HTMLElement, \"resize\", this._onResize, this);\r\n    }\r\n\r\n    if (L.Browser.any3d && this.options.transform3DLimit) {\r\n      this[onOff](\"moveend\", this._onMoveEnd);\r\n    }\r\n  },\r\n\r\n  _handleDOMEvent: function (this: MapType, e: Event) {\r\n    // @ts-ignore we don't have a type definition for this\r\n    L.Map.prototype[\"_handleDOMEvent\"].call(this, e);\r\n\r\n    if (e.type === \"contextmenu\") {\r\n      L.DomEvent.preventDefault(e);\r\n    }\r\n\r\n    if (e.type === \"mousedown\") {\r\n      let element = e.target as HTMLElement;\r\n      while (element && typeof element.className === \"string\" && element.className !== \"wrld-map-container\") {\r\n        if (element.className.indexOf(\"leaflet-marker\") !== -1) {\r\n          L.DomEvent.stopPropagation(e);\r\n          break;\r\n        }\r\n        element = element.parentNode as HTMLElement;\r\n      }\r\n    }\r\n  },\r\n\r\n  addLayer: function (this: MapType, layer: Layer) {\r\n    const id = L.stamp(layer);\r\n\r\n    if (id in this._layersOnMap) {\r\n      return this;\r\n    }\r\n\r\n    this._createPointMapping(layer);\r\n\r\n    this._layersOnMap[id] = layer;\r\n\r\n    L.Map.prototype.addLayer.call(this, layer);\r\n    return this;\r\n  },\r\n\r\n  removeLayer: function (this: MapType, layer: Layer) {\r\n    const id = L.stamp(layer);\r\n\r\n    if (!(id in this._layersOnMap)) {\r\n      return this;\r\n    }\r\n\r\n    this._removePointMapping(layer);\r\n    L.Map.prototype.removeLayer.call(this, layer);\r\n\r\n    delete this._layersOnMap[id];\r\n    return this;\r\n  },\r\n\r\n  _removeAllLayers: function (this: MapType) {\r\n    const layerIds = Object.keys(this._layersOnMap);\r\n\r\n    layerIds.forEach((id) => {\r\n      const layer = this._layersOnMap[id];\r\n      if (layer === undefined) {\r\n        return;\r\n      }\r\n      this.removeLayer(layer);\r\n    });\r\n  },\r\n\r\n  onInitialized: function (this: MapType, emscriptenApi: EmscriptenApi) {\r\n    this._spacesApi = emscriptenApi.spacesApi;\r\n    this._ready = true;\r\n    const panes = this.getPanes();\r\n    panes.mapPane.style.zIndex = \"10\";\r\n    panes.mapPane.style.pointerEvents = \"auto\";\r\n    panes.overlayPane.style.pointerEvents = \"none\";\r\n    this.fire(\"initialize\");\r\n  },\r\n\r\n  onInitialStreamingCompleted: function (this: MapType) {\r\n    this.fire(\"initialstreamingcomplete\");\r\n  },\r\n\r\n  latLngToLayerPoint: function (this: MapType, latLng: L.LatLng) {\r\n    return this._ready ? this._spacesApi?.worldToScreen(latLng).toPoint() : undefinedPoint;\r\n  },\r\n\r\n  layerPointToLatLng: function (this: MapType, point: L.PointExpression) {\r\n    const latLng = this._ready ? this._spacesApi?.screenToWorldPoint(point) : null;\r\n    return latLng || undefinedLatLng;\r\n  },\r\n\r\n  latLngToContainerPoint: function (this: MapType, latLng: L.LatLng) {\r\n    return this.latLngToLayerPoint(latLng);\r\n  },\r\n\r\n  containerPointToLatLng: function (this: MapType, point: L.PointExpression) {\r\n    return this.layerPointToLatLng(point);\r\n  },\r\n\r\n  containerPointToLayerPoint: function (this: MapType, point: L.PointExpression) {\r\n    return point;\r\n  },\r\n\r\n  layerPointToContainerPoint: function (this: MapType, point: L.PointExpression) {\r\n    return point;\r\n  },\r\n\r\n  latLngsForLayer: function (this: MapType, layer: Layer) {\r\n    return this._layerPointMappingModule.latLngsForLayer(layer);\r\n  },\r\n\r\n  _createPointMapping: function (this: MapType, layer: Layer) {\r\n    this._layerPointMappingModule.createPointMapping(layer);\r\n  },\r\n\r\n  _removePointMapping: function (this: MapType, layer: Layer) {\r\n    this._layerPointMappingModule.removePointMapping(layer);\r\n  },\r\n\r\n  _projectLatlngs: function (\r\n    this: MapType,\r\n    layer: Layer,\r\n    latlngs: L.LatLng[],\r\n    result: unknown,\r\n    projectedBounds: L.Bounds\r\n  ) {\r\n    return this._layerPointMappingModule.projectLatlngs(layer, latlngs, result, projectedBounds);\r\n  },\r\n\r\n  _updateZoom: function (this: MapType) {\r\n    this._zoom = this.getZoom();\r\n  },\r\n\r\n  setView: function (this: MapType, center: L.LatLngExpression, zoom?: number, options?: ZoomPanOptions) {\r\n    // Superclass' implementation of setView does some initialization so we have to call it\r\n    if (!this._viewInitialized) {\r\n      L.Map.prototype.setView.call(this, center, zoom, { reset: true } as L.ZoomPanOptions);\r\n      this._viewInitialized = true;\r\n    }\r\n\r\n    zoom = typeof zoom === \"undefined\" ? this._zoom : this._limitZoom(zoom);\r\n    center = this._limitCenter(L.latLng(center), zoom, this.options.maxBounds);\r\n    options = options || {};\r\n\r\n    if (!(\"animate\" in options)) {\r\n      if (typeof options.pan === \"object\" && \"animate\" in options.pan) {\r\n        options[\"animate\"] = options.pan.animate;\r\n      } else if (typeof options.zoom === \"object\" && \"animate\" in options.zoom) {\r\n        options[\"animate\"] = options.zoom.animate;\r\n      }\r\n    }\r\n\r\n    if (!(\"allowInterruption\" in options)) {\r\n      if (typeof options.pan === \"object\" && \"allowInterruption\" in options.pan) {\r\n        options[\"allowInterruption\"] = options.pan.allowInterruption;\r\n      } else if (typeof options.zoom === \"object\" && \"allowInterruption\" in options.zoom) {\r\n        options[\"allowInterruption\"] = options.zoom.allowInterruption;\r\n      }\r\n    }\r\n\r\n    const _options = { ...options, zoom, location: center };\r\n    this._cameraModule.setView(_options);\r\n    return this;\r\n  },\r\n\r\n  zoomIn: function (this: MapType, delta: number) {\r\n    delta = delta || 1;\r\n    const config = {\r\n      location: this.getCenter(),\r\n      zoom: this._cameraModule.getCurrentZoomLevel() + delta,\r\n      durationSeconds: 0.33,\r\n      allowInterruption: false,\r\n    };\r\n    if (config.zoom <= this.getMaxZoom()) {\r\n      this.fire(\"zoomstart\");\r\n      this.once(\"transitionend\", () => {\r\n        this.fire(\"zoomend\");\r\n      });\r\n      this._cameraModule.setView(config);\r\n      this._updateZoom();\r\n    }\r\n    return this;\r\n  },\r\n\r\n  zoomOut: function (this: MapType, delta: number) {\r\n    delta = delta || 1;\r\n    const config = {\r\n      location: this.getCenter(),\r\n      zoom: this._cameraModule.getCurrentZoomLevel() - delta,\r\n      durationSeconds: 0.33,\r\n      allowInterruption: false,\r\n    };\r\n    if (config.zoom >= this.getMinZoom()) {\r\n      this.fire(\"zoomstart\");\r\n      this.once(\"transitionend\", () => {\r\n        this.fire(\"zoomend\");\r\n      });\r\n      this._cameraModule.setView(config);\r\n      this._updateZoom();\r\n    }\r\n    return this;\r\n  },\r\n\r\n  setZoomAround: function (this: MapType) {\r\n    return this;\r\n  },\r\n\r\n  setViewVerticallyLocked: function (this: MapType, isVerticallyLocked: boolean) {\r\n    this._cameraModule.setVerticallyLocked(isVerticallyLocked);\r\n    return this;\r\n  },\r\n\r\n  fitBounds: function (this: MapType, bounds: L.LatLngBoundsExpression) {\r\n    const config = { bounds: bounds };\r\n    this._cameraModule.setViewToBounds(config);\r\n    return this;\r\n  },\r\n\r\n  fitWorld: function (this: MapType) {\r\n    return this.setZoom(0);\r\n  },\r\n\r\n  panTo: function (this: MapType, center: L.LatLng, options?: ZoomPanOptions) {\r\n    this._updateZoom();\r\n    return L.Map.prototype.panTo.call(this, center, options);\r\n  },\r\n\r\n  panInsideBounds: function (this: MapType, bounds: L.LatLngBoundsExpression, options?: ZoomPanOptions) {\r\n    this._updateZoom();\r\n    return L.Map.prototype.panInsideBounds.call(this, bounds, options);\r\n  },\r\n\r\n  panBy: function (this: MapType) {\r\n    return this;\r\n  },\r\n\r\n  getCenter: function (this: MapType) {\r\n    return this._cameraModule.getCenter();\r\n  },\r\n\r\n  pause: function (this: MapType) {\r\n    return this._mapRuntimeModule.Pause();\r\n  },\r\n\r\n  resume: function (this: MapType) {\r\n    return this._mapRuntimeModule.Resume();\r\n  },\r\n\r\n  getZoom: function (this: MapType) {\r\n    this._zoom = this._cameraModule.getCurrentZoomLevel();\r\n    return this._zoom;\r\n  },\r\n\r\n  getBounds: function (this: MapType) {\r\n    const topLeft = this.layerPointToLatLng(new L.Point(0, 0));\r\n    const topRight = this.layerPointToLatLng(new L.Point(this.getContainer().clientWidth, 0));\r\n    const bottomLeft = this.layerPointToLatLng(new L.Point(0, this.getContainer().clientHeight));\r\n    const BottomRight = this.layerPointToLatLng(\r\n      new L.Point(this.getContainer().clientWidth, this.getContainer().clientHeight)\r\n    );\r\n\r\n    return L.latLngBounds([topLeft, topRight, bottomLeft, BottomRight]);\r\n  },\r\n\r\n  locate: function (this: MapType) {\r\n    return this;\r\n  },\r\n\r\n  stopLocate: function (this: MapType) {\r\n    return this;\r\n  },\r\n\r\n  remove: function (this: MapType) {\r\n    this._removeAllLayers();\r\n    this._mapRuntimeModule.Remove();\r\n    this._onRemoveCallback();\r\n    return this;\r\n  },\r\n\r\n  openPopup: function (this: MapType, popup: Popup | L.Content, latLng: L.LatLngExpression, options?: PopupOptions) {\r\n    let _popup: Popup;\r\n\r\n    if (!(popup instanceof L.Popup)) {\r\n      // aka if L.Content\r\n      const content = popup;\r\n      _popup = new Popup(options).setLatLng(latLng).setContent(content);\r\n    } else {\r\n      _popup = popup;\r\n    }\r\n\r\n    // troubles with the parent's method overrides – manually specifying the signature to allow current behaviour\r\n    const _super = L.Map.prototype.openPopup as unknown as (\r\n      content: L.Popup,\r\n      latlng: L.LatLngExpression,\r\n      options?: PopupOptions\r\n    ) => MapType;\r\n\r\n    return _super.call(this, _popup, latLng, options);\r\n  },\r\n\r\n  _onUpdate: function (this: MapType) {\r\n    this.fire(\"update\");\r\n  },\r\n\r\n  _onDraw: function (this: MapType) {\r\n    this._updateLayerVisibility();\r\n\r\n    this.eachLayer((layer: Layer) => {\r\n      if (layer.update) {\r\n        layer.update();\r\n      } else if (layer.redraw) {\r\n        layer.redraw();\r\n      }\r\n    });\r\n    this.fire(\"draw\");\r\n  },\r\n\r\n  getAltitudeAtLatLng: function (this: MapType, latLng: L.LatLngExpression) {\r\n    return this._ready ? this._spacesApi?.getAltitudeAtLatLng(latLng) : 0;\r\n  },\r\n\r\n  getMortonKeyAtLatLng: function (this: MapType, latLng: L.LatLngExpression) {\r\n    return this._ready ? this._spacesApi?.getMortonKeyAtLatLng(latLng) : null;\r\n  },\r\n\r\n  getMortonKeyCenter: function (this: MapType, mortonKey: string) {\r\n    return this._ready ? this._spacesApi?.getMortonKeyCenter(mortonKey) : null;\r\n  },\r\n\r\n  getMortonKeyCorners: function (this: MapType, mortonKey: string, insetMeters: number) {\r\n    return this._ready ? this._spacesApi?.getMortonKeyCorners(mortonKey, insetMeters) : null;\r\n  },\r\n\r\n  getCameraDistanceToInterest: function (this: MapType) {\r\n    return this._cameraModule.getDistanceToInterest();\r\n  },\r\n\r\n  getCameraPitchDegrees: function (this: MapType) {\r\n    return this._cameraModule.getPitchDegrees();\r\n  },\r\n\r\n  setCameraTiltDegrees: function (this: MapType, tilt: number) {\r\n    this._cameraModule.setTiltDegrees(tilt);\r\n    return this;\r\n  },\r\n\r\n  getCameraTiltDegrees: function (this: MapType) {\r\n    return this._cameraModule.getTiltDegrees();\r\n  },\r\n\r\n  getCameraHeadingDegrees: function (this: MapType) {\r\n    return this._cameraModule.getHeadingDegrees();\r\n  },\r\n\r\n  setCameraHeadingDegrees: function (this: MapType, heading: number) {\r\n    this._cameraModule.setHeadingDegrees(heading);\r\n    return this;\r\n  },\r\n\r\n  getMaximumPrecacheRadius: function (this: MapType): number {\r\n    return this._precacheModule.getMaximumPrecacheRadius();\r\n  },\r\n\r\n  precache: function (\r\n    this: MapType,\r\n    center: L.LatLngExpression,\r\n    radius: number,\r\n    completionCallback: (success: boolean) => void\r\n  ): PrecacheResponse {\r\n    return this.precacheWithDetailedResult(center, radius, (precacheResult) => {\r\n      completionCallback(precacheResult.succeeded);\r\n    });\r\n  },\r\n\r\n  precacheWithDetailedResult: function (\r\n    this: MapType,\r\n    center: L.LatLngExpression,\r\n    radius: number,\r\n    completionCallback: PrecacheHandler\r\n  ) {\r\n    return this._precacheModule.precache(center, radius, completionCallback);\r\n  },\r\n\r\n  setMapCollapsed: function (this: MapType, isMapCollapsed: boolean) {\r\n    this.rendering.setMapCollapsed(isMapCollapsed);\r\n    return this;\r\n  },\r\n\r\n  isMapCollapsed: function () {\r\n    return this.rendering.isMapCollapsed();\r\n  },\r\n\r\n  setDrawClearColor: function (this: MapType, clearColor: Color) {\r\n    this.rendering.setClearColor(clearColor);\r\n    return this;\r\n  },\r\n\r\n  setTargetVSyncInterval: function (this: MapType, targetVSyncInterval: number) {\r\n    this._frameRateModule.setTargetVSyncInterval(targetVSyncInterval);\r\n    return this;\r\n  },\r\n\r\n  setThrottledTargetFrameInterval: function (this: MapType, throttledTargetFrameIntervalMilliseconds: number) {\r\n    this._frameRateModule.setThrottledTargetFrameInterval(throttledTargetFrameIntervalMilliseconds);\r\n    return this;\r\n  },\r\n\r\n  setIdleSecondsBeforeThrottle: function (this: MapType, idleSecondsBeforeThrottle: number) {\r\n    this._frameRateModule.setIdleSecondsBeforeThrottle(idleSecondsBeforeThrottle);\r\n    return this;\r\n  },\r\n\r\n  setThrottleWhenIdleEnabled: function (this: MapType, throttleWhenIdleEnabled: boolean) {\r\n    this._frameRateModule.setThrottleWhenIdleEnabled(throttleWhenIdleEnabled);\r\n    return this;\r\n  },\r\n\r\n  cancelFrameRateThrottle: function (this: MapType) {\r\n    this._frameRateModule.cancelThrottle();\r\n    return this;\r\n  },\r\n\r\n  isHardwareAccelerationAvailable: function (this: MapType) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const hardwareAccelerationEnforcer = { failIfMajorPerformanceCaveat: true };\r\n    const webglContext =\r\n      canvas.getContext(\"webgl\", hardwareAccelerationEnforcer) ||\r\n      canvas.getContext(\"experimental-webgl\", hardwareAccelerationEnforcer);\r\n    return !!(webglContext && webglContext instanceof WebGLRenderingContext);\r\n  },\r\n\r\n  _getAngleFromCameraToHorizon: function (this: MapType) {\r\n    const altitude = this.getCameraDistanceToInterest();\r\n    const earthRadius = 6378100.0;\r\n    return Math.acos(earthRadius / (earthRadius + altitude));\r\n  },\r\n\r\n  _isLatLngBehindEarth: function (this: MapType, latlng: L.LatLng, cameraVector: Vector3, maxAngle: number) {\r\n    const latlngVector = convertLatLngToVector(latlng);\r\n    const dotProd = cameraVector.x * latlngVector.x + cameraVector.y * latlngVector.y + cameraVector.z * latlngVector.z;\r\n    return dotProd < Math.cos(maxAngle);\r\n  },\r\n\r\n  _updateLayerVisibility: function (this: MapType) {\r\n    const layerIds = Object.keys(this._layersOnMap);\r\n    const cameraVector = convertLatLngToVector(this.getCenter());\r\n    const maxAngle = this._getAngleFromCameraToHorizon();\r\n\r\n    layerIds.forEach((id) => {\r\n      const layer = this._layersOnMap[id];\r\n\r\n      // we're checking for null, as there's a few potentially confusing interactions that can happen.\r\n      // e.g. if we have a marker with an associated popup (say markerId = 23 and popupId = 75), then on starting this loop, we'll\r\n      // have layerIds = [ 23, 75 ] and both of these ids exist in the _layersOnMap dictionary. However, a side-effect of removing\r\n      // a marker is that any associated popup will be removed. We're spinning over the layerIds that we copied _before_\r\n      // removing anything, so we now have a stale id (75) that no longer exists in _layersOnMap, and we can skip it.\r\n      if (layer === undefined) {\r\n        return;\r\n      }\r\n\r\n      const latlng = getCenterOfLayer(layer);\r\n\r\n      // certain layers (such as L.layerGroup) don't have positions and are purely organisational tools, so we can ignore them\r\n      // Additionally check if it's FeatureGroup, which is explicitly used by Leaflet.Draw.\r\n      if (latlng === null || layer instanceof L.FeatureGroup) {\r\n        return;\r\n      }\r\n\r\n      const latLngBehindEarth = this._isLatLngBehindEarth(latlng, cameraVector, maxAngle);\r\n      const hasLayer = this.hasLayer(layer);\r\n      const indoorMapDisplayFilter = this._isVisibleForCurrentMapState(layer);\r\n\r\n      if (!hasLayer && !latLngBehindEarth && indoorMapDisplayFilter) {\r\n        L.Map.prototype.addLayer.call(this, layer);\r\n      } else if (hasLayer && (latLngBehindEarth || !indoorMapDisplayFilter)) {\r\n        L.Map.prototype.removeLayer.call(this, layer);\r\n      }\r\n    });\r\n  },\r\n\r\n  _isVisibleForCurrentMapState: function (this: MapType, layer: Layer): boolean {\r\n    const currentMapStateIsOutdoors = !this.indoors.isIndoors();\r\n    const layerIsOutdoors = !hasIndoorMap(layer);\r\n\r\n    if (layer.options?.displayOption === \"currentMap\") return true;\r\n\r\n    if (currentMapStateIsOutdoors) {\r\n      return layerIsOutdoors;\r\n    }\r\n\r\n    // from here on in, we know our map state is indoors\r\n    if (layerIsOutdoors) {\r\n      return false;\r\n    }\r\n\r\n    return matchesIndoorMap(\r\n      this.indoors.getActiveIndoorMap()?.getIndoorMapId(),\r\n      this.indoors.getFloor()?.getFloorZOrder(),\r\n      this.indoors.getFloor()?.getFloorIndex(),\r\n      layer\r\n    );\r\n  },\r\n\r\n  _rawPanBy: function (this: MapType) {\r\n    // Do nothing\r\n  },\r\n});\r\n\r\nexport type {\r\n    MapFloorId,\r\n    MapFloorIndex,\r\n    MapId,\r\n    MapOptions,\r\n    PrecacheHandler,\r\n    PrecacheResponse,\r\n    ZoomPanOptions\r\n} from \"./map_type\";\r\n\r\nexport type Map = MapType;\r\n\r\nexport default Map;\r\n","export function HTMLMapContainer (browserDocument, browserWindow, parentElement, canvasId, canvasWidth, canvasHeight, backgroundColor, containerId, mapId) {\r\n\r\n    var _browserWindow = browserWindow;\r\n    var _browserDocument = browserDocument;\r\n\r\n    var _createDOMElement = (parentElement, tagName, attributes, style) => {\r\n        var element = _browserDocument.createElement(tagName);\r\n        for (var attributeName in attributes) {\r\n            element.setAttribute(attributeName, attributes[attributeName]);\r\n        }\r\n        for (var styleProperty in style) {\r\n            element.style[styleProperty] = style[styleProperty];\r\n        }\r\n        parentElement.appendChild(element);\r\n        return element;\r\n    };\r\n\r\n    var _createMapContainer = (parentElement) => {\r\n        var attributes = {\r\n            \"class\": \"wrld-map-container\",\r\n            \"id\": containerId\r\n        };\r\n        var style = {\r\n            \"position\": \"relative\",\r\n            \"width\": \"100%\",\r\n            \"height\": \"100%\",\r\n            \"line-height\": \"0px\",\r\n            \"padding\": \"0px\",\r\n            \"margin\": \"0px\",\r\n            \"overflow\": \"hidden\",\r\n            \"cursor\": \"default\"\r\n        };\r\n        var mapContainer = _createDOMElement(parentElement, \"div\", attributes, style);\r\n\r\n        var css = document.createElement(\"style\");\r\n        css.type = \"text/css\";\r\n        css.innerHTML = \".leaflet-dragging .wrld-map-container { cursor: move; cursor: -webkit-grabbing; cursor: -moz-grabbing; }\";\r\n        document.head.appendChild(css);\r\n\r\n        mapContainer.onmousedown = (e) => {\r\n            // Prevent middle-mouse scrolling on Windows\r\n            if (e.button === 1) {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        // Fix for IE - onwheel is undefined, but is actually functional\r\n        if (typeof mapContainer.onwheel === \"undefined\") {\r\n            mapContainer.onwheel = null;\r\n        }\r\n\r\n        return mapContainer;\r\n    };\r\n\r\n    var _createLeafletOverlay = (parentElement) => {\r\n        var attributes = { \"class\": \"wrld-leaflet-overlay\" };\r\n        var style = {\r\n            \"position\": \"absolute\",\r\n            \"overflow\": \"hidden\",\r\n            \"width\": \"100%\",\r\n            \"height\": \"100%\",\r\n            \"background\": \"transparent\",\r\n            \"pointer-events\": \"none\"\r\n        };\r\n        return _createDOMElement(parentElement, \"div\", attributes, style);\r\n    };\r\n\r\n    var _createErrorMessage = (parentElement, messageText) => {\r\n        var attributes = { \"class\": \"wrld-error-message\" };\r\n        var style = {\r\n            \"position\": \"absolute\",\r\n            \"left\": \"0px\",\r\n            \"bottom\": \"0px\",\r\n            \"line-height\": \"normal\",\r\n            \"color\": \"white\",\r\n            \"font-family\": \"sans-serif\",\r\n            \"font-weight\": \"bold\",\r\n            \"margin\": \"0.5em\"\r\n        };\r\n        var errorMessage = _createDOMElement(parentElement, \"div\", attributes, style);\r\n        errorMessage.textContent = messageText;\r\n        return errorMessage;\r\n    };\r\n\r\n    var _createCanvas = (parentElement, canvasId, width, height, backgroundColor) => {\r\n        var attributes = {\r\n            \"class\": \"wrld-map-canvas\",\r\n            \"id\": canvasId,\r\n            \"oncontextmenu\": \"event.preventDefault();\",\r\n            \"width\": width.toString(),\r\n            \"height\": height.toString()\r\n        };\r\n        var style = {\r\n            \"background-color\": backgroundColor\r\n        };\r\n        var canvas = _createDOMElement(parentElement, \"canvas\", attributes, style);\r\n\r\n        return canvas;\r\n    };\r\n\r\n    var _createLoadingSpinner = (parentElement) => {\r\n        var style = {\r\n            \"position\": \"absolute\",\r\n            \"width\": \"18px\",\r\n            \"height\": \"18px\",\r\n            \"z-index\": \"20\",\r\n            \"background-image\": \"url('https://cdn-webgl.wrld3d.com/wrldjs/resources/loading_spinner.png')\"\r\n        };\r\n        return _createDOMElement(parentElement, \"div\", {}, style);\r\n    };\r\n\r\n    var _createIndoorMapWatermark = (parentElement) => {\r\n        var attributes = {\r\n            \"id\": \"wrld-indoor-map-watermark\" + mapId,\r\n            \"class\": \"wrld-indoor-map-watermark\",\r\n            \"draggable\": \"false\"\r\n        };\r\n\r\n        var style = {\r\n            \"position\": \"absolute\",\r\n            \"z-index\": \"20\",\r\n            \"display\": \"block\",\r\n            \"margin\": \"auto auto 0 auto\",\r\n            \"left\": \"0\",\r\n            \"right\": \"0\",\r\n            \"bottom\": \"-50px\",\r\n            \"transition\": \"all 500ms\"\r\n        };\r\n\r\n        return _createDOMElement(parentElement, \"img\", attributes, style);\r\n    };\r\n\r\n    this.mapContainer = _createMapContainer(parentElement);\r\n    this.loadingSpinnerIcon = _createLoadingSpinner(this.mapContainer);\r\n    this.overlay = _createLeafletOverlay(this.mapContainer);\r\n    this.indoorMapWatermark = _createIndoorMapWatermark(this.mapContainer);\r\n    this.canvas = _createCanvas(this.mapContainer, canvasId, canvasWidth, canvasHeight, backgroundColor);\r\n\r\n    this.loadingSpinner = new LoadingSpinner(_browserWindow, this.loadingSpinnerIcon);\r\n    this.loadingSpinner.startSpinning();\r\n\r\n    this.onInitialized = () => {\r\n        this.loadingSpinner.stopSpinning();\r\n        this.loadingSpinnerIcon.parentNode.removeChild(this.loadingSpinnerIcon);\r\n    };\r\n\r\n    this.onError = (message) => {\r\n        this.loadingSpinner.stopSpinning();\r\n        _createErrorMessage(this.mapContainer, message);\r\n    };\r\n\r\n    this.width = () => {\r\n        return this.mapContainer.clientWidth;\r\n    };\r\n\r\n    this.height = () => {\r\n        return this.mapContainer.clientHeight;\r\n    };\r\n\r\n    this.onRemove = () => {\r\n        if (this.mapContainer.parentElement) {\r\n            this.mapContainer.parentElement.removeChild(this.mapContainer);\r\n        }\r\n    };\r\n}\r\n\r\nfunction LoadingSpinner (browserWindow, domElement) {\r\n    var _browserWindow = browserWindow;\r\n    var _domElement = domElement;\r\n    var _speed = 360;\r\n    var _spinning = false;\r\n\r\n    var spin = (timestamp) => {\r\n        if (!_spinning) {\r\n            return;\r\n        }\r\n        var timeInSeconds = (timestamp || 0) / 1000;\r\n        var degrees = (timeInSeconds * _speed) % 360;\r\n        _domElement.style[\"transform\"] = \"rotate(\" + degrees + \"deg)\";\r\n        _browserWindow.requestAnimationFrame(spin);\r\n    };\r\n\r\n    this.startSpinning = () => {\r\n        _spinning = true;\r\n        spin();\r\n    };\r\n\r\n    this.stopSpinning = () => {\r\n        _spinning = false;\r\n    };\r\n}\r\n\r\nexport default HTMLMapContainer;","import L from \"leaflet\";\r\nconst tinyRotationString = \" rotate(0.0001deg)\";\r\n\r\nexport const setPositionSmooth = (el: HTMLElement, point: L.Point, disable3D = false) : void => {\r\n  L.DomUtil.setPosition(el, point);\r\n\r\n  if (!disable3D && L.Browser.any3d) {\r\n    (el.style[L.DomUtil.TRANSFORM as \"position\"]) += tinyRotationString;\r\n  }\r\n};\r\n","import { ElevationMode } from \"../types/elevationMode\";\r\n\r\nexport enum ElevationModeType {\r\n  HEIGHT_ABOVE_GROUND = \"heightAboveGround\",\r\n  HEIGHT_ABOVE_SEA_LEVEL = \"heightAboveSeaLevel\",\r\n}\r\n\r\nexport const isValidElevationMode = (elevationMode: ElevationModeType | ElevationMode): boolean => {\r\n  return (\r\n    elevationMode === ElevationModeType.HEIGHT_ABOVE_GROUND ||\r\n    elevationMode === ElevationModeType.HEIGHT_ABOVE_SEA_LEVEL\r\n  );\r\n};\r\n\r\nexport const getElevationModeInt = (elevationModeString: ElevationModeType): number => {\r\n  const elevationModes = {\r\n    heightAboveSeaLevel: 0,\r\n    heightAboveGround: 1,\r\n  };\r\n\r\n  let elevationModeInt = elevationModes.heightAboveGround;\r\n\r\n  if (\r\n    elevationModeString &&\r\n    elevationModeString.toLowerCase() === ElevationModeType.HEIGHT_ABOVE_SEA_LEVEL.toLowerCase()\r\n  ) {\r\n    elevationModeInt = elevationModes.heightAboveSeaLevel;\r\n  }\r\n\r\n  return elevationModeInt;\r\n};\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport { setPositionSmooth } from \"../private/eegeo_dom_util\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\nimport { copyIndoorMapOptions } from \"../private/indoor_map_layer_options.js\";\r\nimport { ElevationMode } from \"../types/elevationMode\";\r\nimport { MapId, MapFloorId, MapFloorIndex } from \"./map\";\r\nimport { Popup, PopupOptions } from \"./popup\";\r\n\r\ntype Content = Parameters<typeof L.Popup.prototype.setContent>[0];\r\n\r\nexport type MarkerOptions = L.MarkerOptions & {\r\n  elevation?: number;\r\n  elevationMode?: ElevationMode;\r\n  indoorMapId?: MapId;\r\n  indoorMapFloorId?: MapFloorId;\r\n};\r\n\r\ndeclare class MarkerType extends L.Marker {\r\n  options: MarkerOptions;\r\n  constructor(latLng: L.LatLngExpression, options?: MarkerOptions);\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n  getElevationMode(): ElevationMode;\r\n  setElevationMode(elevationMode: ElevationMode): this;\r\n  setIndoorMapWithFloorId(indoorMapId: MapId, indoorMapFloorId: MapFloorId): this;\r\n  setIndoorMapWithFloorIndex(indoorMapId: MapId, indoorMapFloorIndex: MapFloorIndex): this;\r\n  setOutdoor(): this;\r\n}\r\n\r\nexport type Marker = MarkerType;\r\n\r\nexport const Marker: typeof MarkerType = L.Marker.extend({\r\n  initialize: function (latLng: L.LatLngExpression, options?: MarkerOptions) {\r\n    L.Marker.prototype.initialize.call(this, latLng, options);\r\n    this.on(\"dragstart\", this._onDragStart);\r\n    this.on(\"drag\", this._onDrag);\r\n    this.on(\"dragend\", this._onDragEnd);\r\n    this._elevationBeforeDrag = 0;\r\n    this._isDragging = false;\r\n    this._latOffsetForDrag = 0;\r\n    this._lngOffsetForDrag = 0;\r\n  },\r\n\r\n  options: {\r\n    elevation: 0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n  },\r\n\r\n  getElevation: function (): number {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  setElevation: function (elevation: number) {\r\n    this.options.elevation = elevation;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (mode: ElevationMode) {\r\n    if (isValidElevationMode(mode)) {\r\n      this.options.elevationMode = mode;\r\n\r\n      if (this._map !== null) {\r\n        this._map._createPointMapping(this);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  getElevationMode: function (): ElevationMode {\r\n    return this.options.elevationMode;\r\n  },\r\n\r\n  setIndoorMapWithFloorId: function (indoorMapId: MapId, indoorMapFloorId: MapFloorId) {\r\n    this.options.indoorMapId = indoorMapId;\r\n    this.options.indoorMapFloorId = indoorMapFloorId;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setIndoorMapWithFloorIndex: function (indoorMapId: MapId, indoorMapFloorIndex: MapFloorIndex) {\r\n    this.options.indoorMapId = indoorMapId;\r\n    this.options.indoorMapFloorIndex = indoorMapFloorIndex;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setOutdoor: function () {\r\n    delete this.options.indoorMapId;\r\n    delete this.options.indoorMapFloorId;\r\n    delete this.options.indoorMapFloorIndex;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setLatLng: function (latLng: L.LatLngExpression) {\r\n    const baseReturnValue = L.Marker.prototype.setLatLng.call(this, latLng);\r\n\r\n    if (this._map) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return baseReturnValue;\r\n  },\r\n\r\n  update: function () {\r\n    if (this._icon) {\r\n      // todo: should probably just have a single api point here to get screen pos\r\n      const latLngs = this._map.latLngsForLayer(this);\r\n      let screenPos;\r\n      if (this._isDragging) {\r\n        // Leaflet updates the latlng directly during a drag event to correspond to screen pos\r\n        screenPos = this._map.latLngToLayerPoint(this.getLatLng());\r\n      } else {\r\n        screenPos = this._map.latLngToLayerPoint(latLngs[0]);\r\n      }\r\n      this._setPos(screenPos);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  _setPos: function (pos: L.Point) {\r\n    const setPosFunc = L.Browser.gecko ? setPositionSmooth : L.DomUtil.setPosition;\r\n\r\n    setPosFunc(this._icon, pos);\r\n\r\n    if (this._shadow) {\r\n      setPosFunc(this._shadow, pos);\r\n    }\r\n\r\n    this._zIndex = pos.y * 10000 + this.options.zIndexOffset * 10000;\r\n\r\n    this._resetZIndex();\r\n  },\r\n\r\n  bindPopup: function (this: Marker, content: Content | L.Popup, options?: PopupOptions) {\r\n    let popup = content;\r\n    if (!(content instanceof L.Popup)) {\r\n      if (!options) {\r\n        options = {};\r\n      }\r\n\r\n      // copy relevant marker options into popup\r\n      if (!(\"elevation\" in options)) {\r\n        options.elevation = this.getElevation();\r\n      }\r\n\r\n      if (!(\"elevationMode\" in options)) {\r\n        options.elevationMode = this.options.elevationMode;\r\n      }\r\n\r\n      copyIndoorMapOptions(this.options, options);\r\n\r\n      popup = new Popup(options, this).setContent(content);\r\n    }\r\n    return L.Marker.prototype.bindPopup.call(this, popup, options);\r\n  },\r\n\r\n  _onDragStart: function () {\r\n    // During drag, leaflet uses screen space for positioning. This has no notion of altitude\r\n    // so we need to compensate at the beginning and end of the drag.\r\n    this._isDragging = true;\r\n    this._elevationBeforeDrag = this.getElevation();\r\n    const flatPos = L.DomUtil.getPosition(this._icon);\r\n    const flatLatLng = this._map.layerPointToLatLng(flatPos);\r\n    const realLatLng = this.getLatLng();\r\n    this._latOffsetForDrag = realLatLng.lat - flatLatLng.lat;\r\n    this._lngOffsetForDrag = realLatLng.lng - flatLatLng.lng;\r\n    this.setLatLng(flatLatLng);\r\n  },\r\n\r\n  _onDrag: function () {\r\n    this._map._createPointMapping(this);\r\n  },\r\n\r\n  _onDragEnd: function () {\r\n    const flatLatLng = this.getLatLng();\r\n    if (this.options.indoorMapId) {\r\n      // preserve the original elevation, offsetting the position accordingly\r\n      this.setLatLng(\r\n        new L.LatLng(\r\n          flatLatLng.lat + this._latOffsetForDrag,\r\n          flatLatLng.lng + this._lngOffsetForDrag,\r\n          this._elevationBeforeDrag\r\n        )\r\n      );\r\n    } else {\r\n      // we're dragging a marker outside, the original elevation above ground may not be relevant in its new location\r\n      // so just place it where it was dragged\r\n      this.setLatLng(new L.LatLng(flatLatLng.lat, flatLatLng.lng));\r\n      this.options.elevation = 0;\r\n    }\r\n    this._map._createPointMapping(this);\r\n    this._latOffsetForDrag = 0;\r\n    this._lngOffsetForDrag = 0;\r\n    this._elevationBeforeDrag = 0;\r\n    this._isDragging = false;\r\n  },\r\n});\r\n\r\nexport const marker = factoryFor(Marker);\r\n","import L from \"leaflet\";\r\nimport { marker as _marker } from \"../public/marker\";\r\n\r\nexport function IndoorEntranceMarkerUpdater (map, indoorsModule) {\r\n\r\n\tvar _map = map;\r\n\tvar _indoorsModule = indoorsModule;\r\n\tvar _entranceMarkers = {};\r\n\tvar _layerGroup = L.layerGroup([]);\r\n\r\n\tvar _entranceIcon = L.icon({\r\n\t    iconUrl: \"https://cdn-webgl.wrld3d.com/wrldjs/resources/indoor_map_entrance_marker.png\",\r\n\t    iconRetinaUrl: \"https://cdn-webgl.wrld3d.com/wrldjs/resources/indoor_map_entrance_marker@2.png\",\r\n\t    iconSize: [48, 48],\r\n\t    iconAnchor: [24, 48]\r\n\t});\r\n\r\n\tvar _addEntranceMarker = (event) => {\r\n\t\tvar entrance = event.entrance;\r\n\t\tvar id = entrance.getIndoorMapId();\r\n\r\n\t\tvar marker = _createEntranceMarker(entrance);\r\n\t\tmarker.addTo(_layerGroup);\r\n\t\t_entranceMarkers[id] = marker;\r\n\t};\r\n\r\n\tvar _removeEntranceMarker = (event) => {\r\n\t\tvar entrance = event.entrance;\r\n\t\tvar id = entrance.getIndoorMapId();\r\n\r\n\t\tvar marker = _entranceMarkers[id];\r\n\t\t_layerGroup.removeLayer(marker);\r\n\t\tdelete _entranceMarkers[id];\r\n\t};\r\n\r\n\tvar _createEntranceMarker = (entrance) => {\r\n\t\tvar marker = _marker(entrance.getLatLng(), {\r\n\t\t\ttitle: entrance.getIndoorMapName(),\r\n\t\t\ticon: _entranceIcon\r\n\t\t});\r\n\t\tmarker.on(\"click\", function () {\r\n\t\t\t_indoorsModule.enter(entrance);\r\n\t\t});\r\n\t\treturn marker;\r\n\t};\r\n\r\n\tvar _showEntranceMarkers = () => {\r\n\t\t_map.addLayer(_layerGroup);\r\n\t};\r\n\r\n\tvar _hideEntranceMarkers = () => {\r\n\t\t_map.removeLayer(_layerGroup);\r\n\t};\r\n\r\n\t_showEntranceMarkers();\r\n\r\n\t_indoorsModule.on(\"indoorentranceadd\", _addEntranceMarker);\r\n\t_indoorsModule.on(\"indoorentranceremove\", _removeEntranceMarker);\r\n\r\n\t_indoorsModule.on(\"indoormapenter\", _hideEntranceMarkers);\r\n\t_indoorsModule.on(\"indoormapexit\", _showEntranceMarkers);\r\n\r\n\tthis.removeAllEntranceMarkers = () => {\r\n\t\t_layerGroup.clearLayers();\r\n\t\t_entranceMarkers = {};\r\n\t};\r\n\r\n}\r\n\r\nexport default IndoorEntranceMarkerUpdater;\r\n","import type CameraApi from \"../emscripten_api/emscripten_camera_api\";\r\nimport type { Map } from \"leaflet\";\r\n\r\nconst _eventType = [\r\n  \"move\",\r\n  \"movestart\",\r\n  \"moveend\",\r\n  \"drag\",\r\n  \"dragstart\",\r\n  \"dragend\",\r\n  \"pan\",\r\n  \"panstart\",\r\n  \"panend\",\r\n  \"rotate\",\r\n  \"rotatestart\",\r\n  \"rotateend\",\r\n  \"tilt\",\r\n  \"tiltstart\",\r\n  \"tiltend\",\r\n  \"zoom\",\r\n  \"zoomstart\",\r\n  \"zoomend\",\r\n  \"transitionstart\",\r\n  \"transitionend\",\r\n];\r\n\r\nexport class MapMoveEvents {\r\n  private _onEvent: (eventKey: number) => void;\r\n\r\n  constructor(leafletMap: Map) {\r\n    this._onEvent = (eventKey: number) => {\r\n      if (typeof _eventType[eventKey] === undefined) {\r\n        return;\r\n      }\r\n      leafletMap.fire(_eventType[eventKey]);\r\n    };\r\n  }\r\n\r\n  setEventCallbacks = (cameraApi: CameraApi): void => {\r\n    cameraApi.setEventCallback(this._onEvent);\r\n  };\r\n}\r\n\r\nexport default MapMoveEvents;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nexport class MapModuleClass {\r\n  /** @internal */ onUpdate(_dt: number) {}\r\n\r\n  /** @internal */ onDraw(_dt: number) {}\r\n\r\n  /** @internal */ onInitialized() {}\r\n\r\n  /** @internal */ onInitialStreamingCompleted() {}\r\n}\r\n\r\n/**\r\n * Used for legacy class extensions via prototype, use MapModuleClass with ES5 classes.\r\n * @deprecated\r\n */\r\nexport const MapModule = {\r\n  onUpdate: (_dt: number) => {},\r\n\r\n  onDraw: (_dt: number) => {},\r\n\r\n  onInitialized: () => {},\r\n\r\n  onInitialStreamingCompleted: () => {},\r\n};\r\n\r\nexport default MapModule;\r\n","export enum season {\r\n  Spring = \"Spring\",\r\n  Summer = \"Summer\",\r\n  Autumn = \"Autumn\",\r\n  Winter = \"Winter\",\r\n}\r\n\r\nexport enum time {\r\n  Dawn = \"Dawn\",\r\n  Day = \"Day\",\r\n  Dusk = \"Dusk\",\r\n  Night = \"Night\",\r\n}\r\n\r\nexport enum weather {\r\n  Clear = \"Default\",\r\n  Overcast = \"Overcast\",\r\n  Foggy = \"Foggy\",\r\n  Rainy = \"Rainy\",\r\n  Snowy = \"Snowy\",\r\n}\r\n","import { MapModuleClass } from \"./map_module\";\r\nimport { season as Season, time as Time, weather as Weather } from \"../../public/themes\";\r\nimport type { EmscriptenApi } from \"../emscripten_api/emscripten_api\";\r\n\r\nexport class ThemesModule extends MapModuleClass {\r\n  private _emscriptenApi: EmscriptenApi;\r\n  private _ready: boolean;\r\n  private _season: Season;\r\n  private _time: Time;\r\n  private _weather: Weather;\r\n  private _shouldChangeTheme: boolean;\r\n  private _shouldChangeState: boolean;\r\n\r\n  constructor(emscriptenApi: EmscriptenApi) {\r\n    super();\r\n    this._emscriptenApi = emscriptenApi;\r\n    this._ready = false;\r\n\r\n    this._season = Season.Summer;\r\n    this._time = Time.Day;\r\n    this._weather = Weather.Clear;\r\n\r\n    this._shouldChangeTheme = false;\r\n    this._shouldChangeState = false;\r\n  }\r\n\r\n  private _updateTheme = (): void => {\r\n    if (!this._ready) {\r\n      return;\r\n    }\r\n\r\n    if (this._shouldChangeTheme) {\r\n      this._emscriptenApi.themesApi?.setTheme(this._season);\r\n      this._shouldChangeTheme = false;\r\n    }\r\n\r\n    if (this._shouldChangeState) {\r\n      this._emscriptenApi.themesApi?.setState(this._time + this._weather, 1.0);\r\n      this._shouldChangeState = false;\r\n    }\r\n  };\r\n\r\n  private _tryMatchBuiltIn = (season: Season, time: Time, weather: Weather): {season: Season, time: Time, weather: Weather} => {\r\n    const caseInsensitiveMatchWithCollection = (key: string, values: string[]) => {\r\n      const keyUpper = key.toUpperCase();\r\n      const matchedValue = values.find(function (item) {\r\n        return keyUpper.localeCompare(item.toUpperCase()) === 0;\r\n      });\r\n      return matchedValue ? matchedValue : key;\r\n    };\r\n\r\n    return {\r\n      season: caseInsensitiveMatchWithCollection(season, Object.values(season)) as Season,\r\n      time: caseInsensitiveMatchWithCollection(time, Object.values(time)) as Time,\r\n      weather: caseInsensitiveMatchWithCollection(weather, Object.values(weather)) as Weather,\r\n    };\r\n  };\r\n\r\n  private _onThemesStreamingCompleted = (): void => {\r\n    this._ready = true;\r\n    this._updateTheme();\r\n  };\r\n\r\n  setTheme = (season: Season, time: Time, weather: Weather): void => {\r\n    const themeInfo = this._tryMatchBuiltIn(season, time, weather);\r\n\r\n    if (themeInfo.season !== this._season) {\r\n      this._shouldChangeTheme = true;\r\n    }\r\n\r\n    if (themeInfo.time !== this._time || themeInfo.weather !== this._weather) {\r\n      this._shouldChangeState = true;\r\n    }\r\n\r\n    this._season = themeInfo.season;\r\n    this._time = themeInfo.time;\r\n    this._weather = themeInfo.weather;\r\n    this._updateTheme();\r\n  };\r\n\r\n  setSeason = (season: Season): void => {\r\n    this.setTheme(season, this._time, this._weather);\r\n  };\r\n\r\n  getSeason = (): Season => this._season;\r\n\r\n  setTime = (time: Time): void => {\r\n    this.setTheme(this._season, time, this._weather);\r\n  };\r\n\r\n  getTime = (): Time => this._time;\r\n\r\n  setWeather = (weather: Weather): void => {\r\n    this.setTheme(this._season, this._time, weather);\r\n  };\r\n\r\n  getWeather = (): Weather => this._weather;\r\n\r\n  setEnvironmentThemesManifest = (environmentThemesManifest: string): void => {\r\n    if (!this._ready) {\r\n      return;\r\n    }\r\n    this._emscriptenApi.themesApi?.setThemeManifest(environmentThemesManifest);\r\n  };\r\n\r\n  /** @internal */ onInitialized(): void {\r\n    this._emscriptenApi.themesApi?.registerStreamingCompletedCallback(this._onThemesStreamingCompleted);\r\n  }\r\n}\r\n\r\nexport default ThemesModule;\r\n","import IndoorMapFloor from \"./indoor_map_floor\";\r\nimport type { MapId } from \"../map\";\r\n\r\nexport type SearchTag = {\r\n  name: string;\r\n  search_tag: string;\r\n  icon_key: string;\r\n};\r\n\r\nexport class IndoorMap {\r\n  private _indoorMapId: MapId;\r\n  private _indoorMapName: string;\r\n  private _indoorMapSourceVendor: string;\r\n  private _floorCount: number;\r\n  private _floors: IndoorMapFloor[];\r\n  private _searchTags: SearchTag[];\r\n  public exit: () => void;\r\n\r\n  constructor(\r\n    indoorMapId: MapId,\r\n    indoorMapName: string,\r\n    indoorMapSourceVendor: string,\r\n    floorCount: number,\r\n    floors: IndoorMapFloor[],\r\n    searchTags: SearchTag[],\r\n    exitFunc: () => void\r\n  ) {\r\n    this._indoorMapId = indoorMapId;\r\n    this._indoorMapName = indoorMapName;\r\n    this._indoorMapSourceVendor = indoorMapSourceVendor;\r\n    this._floorCount = floorCount;\r\n    this._floors = floors;\r\n    this._searchTags = searchTags;\r\n    this.exit = exitFunc;\r\n  }\r\n\r\n  getIndoorMapId(): MapId {\r\n    return this._indoorMapId;\r\n  }\r\n\r\n  getIndoorMapName(): string {\r\n    return this._indoorMapName;\r\n  }\r\n\r\n  getIndoorMapSourceVendor(): string {\r\n    return this._indoorMapSourceVendor;\r\n  }\r\n\r\n  getFloorCount(): number {\r\n    return this._floorCount;\r\n  }\r\n\r\n  getFloors(): IndoorMapFloor[] {\r\n    return this._floors;\r\n  }\r\n\r\n  getSearchTags(): SearchTag[] {\r\n    return this._searchTags;\r\n  }\r\n}\r\n\r\nexport default IndoorMap;\r\n","import type { MapId } from \"../map\";\r\n\r\nexport class IndoorMapEntrance {\r\n  private _indoorMapId: MapId;\r\n  private _indoorMapName: string;\r\n  private _latLng: L.LatLng;\r\n\r\n  constructor(indoorMapId: MapId, indoorMapName: string, latLng: L.LatLng) {\r\n    this._indoorMapId = indoorMapId;\r\n    this._indoorMapName = indoorMapName;\r\n    this._latLng = latLng;\r\n  }\r\n\r\n  getIndoorMapId(): MapId {\r\n    return this._indoorMapId;\r\n  }\r\n\r\n  getIndoorMapName(): string {\r\n    return this._indoorMapName;\r\n  }\r\n\r\n  getLatLng(): L.LatLng {\r\n    return this._latLng;\r\n  }\r\n}\r\n\r\nexport default IndoorMapEntrance;\r\n","export class IndoorMapFloor {\r\n  private _floorId: number;\r\n  private _floorIndex: number;\r\n  private _floorName: string;\r\n  private _floorShortName: string;\r\n\r\n  constructor(floorId: number, floorIndex: number, floorName: string, floorShortName: string) {\r\n    this._floorId = floorId;\r\n    this._floorIndex = floorIndex;\r\n    this._floorName = floorName;\r\n    this._floorShortName = floorShortName;\r\n  }\r\n\r\n  /**\r\n   * Note: this is for compatibility with the existing API – the short name was exposed as id. The actual id property in the submission json is not accessible through this API.\r\n   *\r\n   * @deprecated use {@link IndoorMapFloor.getFloorShortName} instead.\r\n   * @returns {string} the short name of the floor.\r\n   */\r\n  getFloorId(): string {\r\n    return this._floorShortName;\r\n  }\r\n\r\n  /**\r\n   * Note: this is for compatibility with the existing API. The actual id property in the submission json is not accessible through this API.\r\n   *\r\n   * @deprecated use {@link IndoorMapFloor.getFloorZOrder}\r\n   * @returns {number} the z_order of the floor, as defined in the json submission.\r\n   */\r\n  _getFloorId(): number {\r\n    return this._floorId;\r\n  }\r\n\r\n  /**\r\n   * @returns {number} the z_order of the floor, as defined in the json submission.\r\n   */\r\n  getFloorZOrder(): number {\r\n    return this._floorId;\r\n  }\r\n\r\n  /**\r\n   * @returns {number} the index of this floor in the array.\r\n   */\r\n  getFloorIndex(): number {\r\n    return this._floorIndex;\r\n  }\r\n\r\n  getFloorName(): string {\r\n    return this._floorName;\r\n  }\r\n\r\n  getFloorShortName(): string {\r\n    return this._floorShortName;\r\n  }\r\n}\r\n\r\nexport default IndoorMapFloor;\r\n","export function IndoorWatermarkController (mapId, showWrldWatermark) {\r\n  var _indoorWatermarkElement = null;\r\n  var _elementId = \"wrld-indoor-map-watermark\" + mapId;\r\n  var _urlRoot = \"https://cdn-webgl.wrld3d.com/wrldjs/resources/indoor-vendors/\";\r\n  var _showWrldWatermark = showWrldWatermark;\r\n\r\n  var _eegeoVenderKey = \"eegeo\";\r\n\r\n  var _buildUrlForVendor = (vendorKey) => {\r\n    var vendorKeyLower = vendorKey.toLowerCase();\r\n    if (vendorKeyLower === _eegeoVenderKey) {\r\n      vendorKeyLower = \"wrld\";\r\n    }\r\n    return _urlRoot + vendorKeyLower + \"_logo.png\";\r\n  };\r\n\r\n  var _precacheKnownVendors = () => {\r\n    var knownVendors = [_eegeoVenderKey, \"micello\"];\r\n\r\n    knownVendors.forEach(function (vendor) {\r\n      var vendorImageUrl = _buildUrlForVendor(vendor);\r\n      var tempImage = new Image();\r\n      tempImage.src = vendorImageUrl;\r\n    });\r\n  };\r\n\r\n  _precacheKnownVendors();\r\n\r\n  this.showWatermarkForVendor = (vendorKey) => {\r\n\r\n    if ((vendorKey === _eegeoVenderKey) &&\r\n      !_showWrldWatermark) {\r\n      return;\r\n    }\r\n\r\n    var imageUrl = _buildUrlForVendor(vendorKey);\r\n\r\n    if (_indoorWatermarkElement === null) {\r\n      _indoorWatermarkElement = document.getElementById(_elementId);\r\n    }\r\n\r\n    _indoorWatermarkElement.src = imageUrl;\r\n    _indoorWatermarkElement.style.bottom = 0;\r\n  };\r\n\r\n  this.hideWatermark = () => {\r\n    if (_indoorWatermarkElement !== null) {\r\n      _indoorWatermarkElement.style.bottom = \"-50px\";\r\n    }\r\n  };\r\n}\r\n\r\nexport default IndoorWatermarkController;","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\nimport { IndoorMap, IndoorMapFloor, IndoorMapEntrance } from \"../../public/indoors\";\r\nimport IndoorWatermarkController from \"../indoor_watermark_controller\";\r\n\r\nfunction IndoorsModule (emscriptenApi, mapController, mapId, indoorId, floorIndex, center, headingDegrees, zoom, showWrldWatermark, backgroundColor) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _mapController = mapController;\r\n\r\n    var _activeIndoorMap = null;\r\n    var _entrances = {};\r\n\r\n    var _ready = false;\r\n    var _pendingEnterTransition = null;\r\n    var _transitioningToIndoorMap = false;\r\n\r\n    var _indoorWatermarkController = new IndoorWatermarkController(mapId, showWrldWatermark);\r\n\r\n    var _startingIndoorId = indoorId;\r\n    var _startingFloorIndex = floorIndex;\r\n    var _center = center;\r\n    var _headingDegrees = headingDegrees;\r\n    var _zoom = zoom;\r\n    var _backgroundColor = backgroundColor;\r\n\r\n    \r\n\r\n    var _createIndoorMapObject = () => {\r\n        var mapId = _emscriptenApi.indoorsApi.getActiveIndoorMapId();\r\n        var mapName = _emscriptenApi.indoorsApi.getActiveIndoorMapName();\r\n        var sourceVendor = _emscriptenApi.indoorsApi.getActiveIndoorMapSourceVendor();\r\n        var floorCount = _emscriptenApi.indoorsApi.getActiveIndoorMapFloorCount();\r\n        var floors = _createFloorsArray(floorCount);\r\n        var searchTags = _createSearchTagsArray();\r\n        var exitFunc = this.exit;\r\n        var indoorMap = new IndoorMap(mapId, mapName, sourceVendor, floorCount, floors, searchTags, exitFunc);\r\n        return indoorMap;\r\n    };\r\n\r\n    var _createFloorsArray = (floorCount) => {\r\n        var floors = [];\r\n        for (var i = 0; i < floorCount; ++i) {\r\n            var floorIndex = i;\r\n            var floorName = _emscriptenApi.indoorsApi.getFloorName(i);\r\n            var floorShortName = _emscriptenApi.indoorsApi.getFloorShortName(i);\r\n            var floorNumber = _emscriptenApi.indoorsApi.getFloorNumber(i);\r\n\r\n            var floorId = floorNumber;\r\n\r\n            var floor = new IndoorMapFloor(floorId, floorIndex, floorName, floorShortName);\r\n            floors.push(floor);\r\n        }\r\n        return floors;\r\n    };\r\n\r\n    var _createSearchTagsArray = () => {\r\n        var userData;\r\n        try {\r\n            userData = JSON.parse(_emscriptenApi.indoorsApi.getActiveIndoorMapUserData());\r\n        }\r\n        catch (e) {\r\n            return [];\r\n        }\r\n\r\n        if (typeof userData.search_menu_items !== \"object\") { return []; }\r\n        if (!(userData.search_menu_items.items instanceof Array)) { return []; }\r\n\r\n        var searchTags = [];\r\n        userData.search_menu_items.items.forEach((item) => {\r\n                searchTags.push({\r\n                    name: item.name,\r\n                    search_tag: item.search_tag,\r\n                    icon_key: item.icon_key\r\n                });\r\n            });\r\n        return searchTags;\r\n    };\r\n\r\n    var _executeIndoorMapEnteredCallbacks = () => {\r\n        _activeIndoorMap = _createIndoorMapObject();\r\n        this.fire(\"indoormapenter\", { indoorMap: _activeIndoorMap });\r\n    };\r\n\r\n    var _executeIndoorMapEnterFailedCallbacks = () => {\r\n        this.fire(\"indoormapenterfailed\", {});\r\n    };\r\n\r\n    var _executeIndoorMapExitedCallbacks = () => {\r\n        var indoorMap = _activeIndoorMap;\r\n        _activeIndoorMap = null;\r\n        _indoorWatermarkController.hideWatermark();\r\n        this.fire(\"indoormapexit\", { indoorMap: indoorMap });\r\n    };\r\n\r\n    var _executeIndoorMapFloorChangedCallbacks = () => {\r\n        this.fire(\"indoormapfloorchange\", { floor: this.getFloor() });\r\n    };\r\n\r\n    var _executeIndoorMapEntranceAddedCallbacks = (indoorMapId, indoorMapName, indoorMapLatLng) => {\r\n        // discard the altitude, as we're going to use the SDK IPointOnMap positioning to snap it to the terrain (this is now default)\r\n        // alternative is to use the altitude, but use \"elevationMode: heightAboveSeaLevel\" when creating the indoor entrance marker\r\n        var entrance = new IndoorMapEntrance(indoorMapId, indoorMapName, L.latLng([indoorMapLatLng.lat, indoorMapLatLng.lng]));\r\n        _entrances[entrance.getIndoorMapId()] = entrance;\r\n        this.fire(\"indoorentranceadd\", { entrance: entrance });\r\n    };\r\n\r\n    var _executeIndoorMapEntranceRemovedCallbacks = (indoorMapId, indoorMapName, indoorMapLatLng) => {\r\n        var entrance = new IndoorMapEntrance(indoorMapId, indoorMapName, indoorMapLatLng);\r\n        delete _entrances[entrance.getIndoorMapId()];\r\n        this.fire(\"indoorentranceremove\", { entrance: entrance });\r\n    };\r\n\r\n    var _executeIndoorMapLoadedCallbacks = (indoorMapId) => {\r\n        this.fire(\"indoormapload\", { indoorMapId: indoorMapId });\r\n    };\r\n\r\n    var _executeIndoorMapUnloadedCallbacks = (indoorMapId) => {\r\n        this.fire(\"indoormapunload\", { indoorMapId: indoorMapId });\r\n    };\r\n\r\n    var _executeEntityClickedCallbacks = (ids) => {\r\n        var idArray = ids.split(\"|\");\r\n        this.fire(\"indoorentityclick\", { ids: idArray });\r\n    };\r\n\r\n    var _onCollapseStart = () => {\r\n        this.fire(\"collapsestart\");\r\n    };\r\n\r\n    var _onCollapse = () => {\r\n        this.fire(\"collapse\");\r\n    };\r\n\r\n    var _onCollapseEnd = () => {\r\n        this.fire(\"collapseend\");\r\n    };\r\n\r\n    var _onExpandStart = () => {\r\n        this.fire(\"expandstart\");\r\n    };\r\n\r\n    var _onExpand = () => {\r\n        this.fire(\"expand\");\r\n    };\r\n\r\n    var _onExpandEnd = () => {\r\n        this.fire(\"expandend\");\r\n    };\r\n\r\n    var _enterIndoorMap = (indoorMapId) => {\r\n        this.fire(\"indoormapenterrequested\");\r\n        _emscriptenApi.indoorsApi.enterIndoorMap(indoorMapId);\r\n    };\r\n\r\n    var _transitionToIndoorMap = (config) => {\r\n\r\n        _transitioningToIndoorMap = true;\r\n\r\n        if (!_ready) {\r\n            _pendingEnterTransition = config;\r\n            return;\r\n        }\r\n        var animated = \"animate\" in config ? config[\"animate\"] : true;\r\n        _emscriptenApi.cameraApi.setView({ location: config.latLng, distance: config.distance, allowInterruption: false, headingDegrees: config.orientation, animate: animated });\r\n        _mapController._setIndoorTransitionCompleteEventListener(function () { _enterIndoorMap(config.indoorMapId); });\r\n\r\n        this.once(\"indoormapenter\", () => {\r\n                _transitioningToIndoorMap = false;\r\n                var vendorKey = _activeIndoorMap.getIndoorMapSourceVendor();\r\n                _indoorWatermarkController.showWatermarkForVendor(vendorKey);\r\n            });\r\n        this.once(\"indoormapenterfailed\", () => {\r\n                _transitioningToIndoorMap = false;\r\n            });\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _emscriptenApi.indoorsApi.onInitialized();\r\n\r\n        _emscriptenApi.indoorsApi.setNotificationCallbacks(\r\n            _executeIndoorMapEnteredCallbacks,\r\n            _executeIndoorMapEnterFailedCallbacks,\r\n            _executeIndoorMapExitedCallbacks,\r\n            _executeIndoorMapFloorChangedCallbacks,\r\n            _executeIndoorMapEntranceAddedCallbacks,\r\n            _executeIndoorMapEntranceRemovedCallbacks,\r\n            _executeIndoorMapLoadedCallbacks,\r\n            _executeIndoorMapUnloadedCallbacks\r\n        );\r\n\r\n        _emscriptenApi.indoorEntityApi.onInitialized();\r\n        _emscriptenApi.indoorEntityApi.registerIndoorEntityPickedCallback(_executeEntityClickedCallbacks);\r\n\r\n        _emscriptenApi.expandFloorsApi.setCollapseStartCallback(_onCollapseStart);\r\n        _emscriptenApi.expandFloorsApi.setCollapseCallback(_onCollapse);\r\n        _emscriptenApi.expandFloorsApi.setCollapseEndCallback(_onCollapseEnd);\r\n        _emscriptenApi.expandFloorsApi.setExpandStartCallback(_onExpandStart);\r\n        _emscriptenApi.expandFloorsApi.setExpandCallback(_onExpand);\r\n        _emscriptenApi.expandFloorsApi.setExpandEndCallback(_onExpandEnd);\r\n\r\n\r\n        _emscriptenApi.indoorsApi.setBackgroundColor(_backgroundColor);\r\n    };\r\n\r\n    this.onInitialStreamingCompleted = () => {\r\n        _ready = true;\r\n\r\n        if (_startingIndoorId) {\r\n            var config = {\r\n                latLng: _center,\r\n                zoom: _zoom,\r\n                indoorMapId: _startingIndoorId,\r\n                orientation: _headingDegrees\r\n            };\r\n            this.enter(_startingIndoorId, config);\r\n\r\n            if (_startingFloorIndex) {\r\n                this.once(\"indoormapenter\", function() { this.setFloor(Number(_startingFloorIndex)); });\r\n            }\r\n        }\r\n\r\n        if (_pendingEnterTransition !== null) {\r\n            _transitionToIndoorMap(_pendingEnterTransition);\r\n            _pendingEnterTransition = null;\r\n        }\r\n    };\r\n\r\n    this.exit = () => {\r\n        if (_emscriptenApi.ready()) {\r\n            _emscriptenApi.indoorsApi.exitIndoorMap();\r\n            _indoorWatermarkController.hideWatermark();\r\n        }\r\n        _pendingEnterTransition = null;\r\n        _transitioningToIndoorMap = false;\r\n        return this;\r\n    };\r\n\r\n    this.isIndoors = () => _activeIndoorMap !== null;\r\n\r\n    this.getActiveIndoorMap = () => _activeIndoorMap;\r\n\r\n    this.getFloor = () => {\r\n        if (this.isIndoors()) {\r\n            var index = _emscriptenApi.indoorsApi.getSelectedFloorIndex();\r\n            return _activeIndoorMap.getFloors()[index];\r\n        }\r\n        return null;\r\n    };\r\n\r\n    this.setFloor = (floor) => {\r\n        if (!this.isIndoors()) {\r\n            return false;\r\n        }\r\n\r\n        var index = null;\r\n        var floors = _activeIndoorMap.getFloors();\r\n\r\n        if (typeof floor === \"number\") {\r\n            index = floor;\r\n        }\r\n        else if (typeof floor === \"object\") {\r\n            var floorIndex = floors.indexOf(floor);\r\n            index = (floorIndex >= 0) ? floorIndex : null;\r\n        }\r\n        else if (typeof floor === \"string\") {\r\n            for (var i = 0; i < floors.length; ++i) {\r\n                if (floors[i].getFloorShortName() === floor) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (index !== null) {\r\n            return _emscriptenApi.indoorsApi.setSelectedFloorIndex(index);\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    this.moveUp = (numberOfFloors) => {\r\n        var delta = (typeof numberOfFloors === \"undefined\") ? 1 : numberOfFloors;\r\n        var thisFloor = this.getFloor();\r\n        if (thisFloor === null) {\r\n            return false;\r\n        }\r\n        return this.setFloor(thisFloor.getFloorIndex() + delta);\r\n    };\r\n\r\n    this.moveDown = (numberOfFloors) => {\r\n        var delta = (typeof numberOfFloors === \"undefined\") ? -1 : -numberOfFloors;\r\n        return this.moveUp(delta);\r\n    };\r\n\r\n    this.enter = (indoorMap, config) => {\r\n        if (this.isIndoors() || _transitioningToIndoorMap) {\r\n            return false;\r\n        }\r\n\r\n        var indoorMapId = null;\r\n        if (typeof indoorMap === \"object\" && \"getIndoorMapId\" in indoorMap && typeof indoorMap[\"getIndoorMapId\"] === \"function\") {\r\n            indoorMapId = indoorMap.getIndoorMapId();\r\n        }\r\n        else if (typeof indoorMap === \"string\") {\r\n            indoorMapId = indoorMap;\r\n        }\r\n\r\n        var entrance = _entrances[indoorMapId] || null;\r\n\r\n        var latLng = null;\r\n        if (entrance !== null) {\r\n            latLng = entrance.getLatLng();\r\n        }\r\n        else if (config && config.latLng) {\r\n            latLng = config.latLng;\r\n        }\r\n\r\n        if (latLng === null) {\r\n            if (!_ready) {\r\n                return false;\r\n            }\r\n\r\n            _enterIndoorMap(indoorMapId);\r\n            return true;\r\n        }\r\n\r\n        var distance = 400;\r\n\r\n        var defaultConfig = {\r\n            latLng: latLng,\r\n            distance: distance,\r\n            indoorMapId: indoorMapId,\r\n            orientation: 0\r\n        };\r\n\r\n        _transitionToIndoorMap(Object.assign(defaultConfig, config));\r\n\r\n        return true;\r\n    };\r\n\r\n    this.getFloorInterpolation = () => {\r\n        if (_activeIndoorMap !== null) {\r\n            var floorParam = _emscriptenApi.expandFloorsApi.getFloorParam();\r\n            var normalizedValue = floorParam / _activeIndoorMap.getFloorCount();\r\n            return normalizedValue;\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    this.getFloorHeightAboveSeaLevel = (floorIndex) => {\r\n        if (this.isIndoors() &&\r\n            floorIndex >= 0 &&\r\n            floorIndex < _activeIndoorMap.getFloorCount()) {\r\n            return _emscriptenApi.indoorsApi.getFloorHeightAboveSeaLevel(floorIndex);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    this.tryGetReadableName = (indoorMapId) => {\r\n        if (_emscriptenApi.ready()) {\r\n            return _emscriptenApi.indoorsApi.tryGetReadableName(indoorMapId);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    this.tryGetFloorReadableName = (indoorMapId, indoorMapFloorId) => {\r\n        if (_emscriptenApi.ready()) {\r\n            return _emscriptenApi.indoorsApi.tryGetFloorReadableName(indoorMapId, indoorMapFloorId);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    this.tryGetFloorShortName = (indoorMapId, indoorMapFloorId) => {\r\n        if (_emscriptenApi.ready()) {\r\n            return _emscriptenApi.indoorsApi.tryGetFloorShortName(indoorMapId, indoorMapFloorId);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    this.setFloorInterpolation = (value) => {\r\n        if (_activeIndoorMap !== null) {\r\n            var floorParam = value * _activeIndoorMap.getFloorCount();\r\n            _emscriptenApi.expandFloorsApi.setFloorParam(floorParam);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    this.setFloorFromInterpolation = (interpolationParam) => {\r\n        if (_activeIndoorMap === null) {\r\n            return false;\r\n        }\r\n\r\n        var t = (typeof interpolationParam === \"undefined\") ? this.getFloorInterpolation() : interpolationParam;\r\n        var floorIndex = Math.round(t * _activeIndoorMap.getFloorCount());\r\n        return this.setFloor(floorIndex);\r\n    };\r\n\r\n    this.expand = () => {\r\n        _emscriptenApi.expandFloorsApi.expandIndoorMap();\r\n        return this;\r\n    };\r\n\r\n    this.collapse = () => {\r\n        _emscriptenApi.expandFloorsApi.collapseIndoorMap();\r\n        return this;\r\n    };\r\n\r\n    this.setEntityHighlights = (ids, highlightColor, indoorMapId, highlightBorderThickness) => {\r\n        if (!_ready) return;\r\n\r\n        indoorMapId = _indoorMapIdOrDefault(indoorMapId);\r\n        highlightBorderThickness = _borderThicknessOrDefault(highlightBorderThickness);\r\n        _emscriptenApi.indoorEntityApi.setHighlights(ids, highlightColor, indoorMapId, highlightBorderThickness);\r\n    };\r\n\r\n    this.clearEntityHighlights = (ids, indoorMapId) => {\r\n        if (!_ready) return;\r\n\r\n        indoorMapId = _indoorMapIdOrDefault(indoorMapId);\r\n        _emscriptenApi.indoorEntityApi.clearHighlights(ids, indoorMapId);\r\n    };\r\n\r\n    var _borderThicknessOrDefault = (borderThickness) => {\r\n        if (borderThickness === undefined || borderThickness === null) {\r\n            borderThickness = 0.5;\r\n        }\r\n\r\n        return borderThickness;\r\n    };\r\n\r\n    var _indoorMapIdOrDefault = (indoorMapId) => {\r\n        if (indoorMapId === undefined || indoorMapId === null) {\r\n            if (_activeIndoorMap !== null) {\r\n                indoorMapId = _activeIndoorMap.getIndoorMapId();\r\n            }\r\n        }\r\n\r\n        return indoorMapId;\r\n    };\r\n\r\n    this.setBackgroundColor = (color) => {\r\n        _backgroundColor = color;\r\n        if (!_ready) return;\r\n\r\n        _emscriptenApi.indoorsApi.setBackgroundColor(color);\r\n    };\r\n\r\n    this.hideLabelsForEntity = (entityName) => {\r\n        return this.hideLabelsForEntities([entityName]);\r\n    };\r\n\r\n    this.hideLabelsForEntities = (entityNames) => {\r\n        if (_emscriptenApi.ready()) {\r\n            _emscriptenApi.indoorsApi.hideLabelsForEntities(entityNames);\r\n        }\r\n\r\n        return this;\r\n    };\r\n    \r\n    this.showLabelsForEntity = (entityName) => {\r\n        return this.showLabelsForEntities([entityName]);\r\n    };\r\n\r\n    this.showLabelsForEntities = (entityNames) => {\r\n        if (_emscriptenApi.ready()) {\r\n            _emscriptenApi.indoorsApi.showLabelsForEntities(entityNames);\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    this.showAllLabels = () => {\r\n        if (_emscriptenApi.ready()) {\r\n            _emscriptenApi.indoorsApi.showAllLabels();\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n}\r\n\r\nvar IndoorsPrototype = L.extend({}, MapModule, L.Mixin.Events);\r\n\r\nIndoorsModule.prototype = IndoorsPrototype;\r\n\r\nexport default IndoorsModule;\r\n","export function IdToObjectMap () {\r\n    var _objects = {};\r\n\r\n    this.insertObject = function(id, object) {\r\n        _objects[id] = object;\r\n        return id;\r\n    };\r\n\r\n    this.removeObjectById = function(id) {\r\n        var object = _objects[id];\r\n        delete _objects[id];\r\n        return object;\r\n    };\r\n\r\n    this.idForObject = function(object) {\r\n        for (var id in _objects) {\r\n            if (_objects[id] === object) {\r\n                return id;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    this.getObjectById = function(id) {\r\n        return _objects[id];\r\n    };\r\n\r\n    this.forEachItem = function(func) {\r\n        for (var id in _objects) {\r\n            var object = _objects[id];\r\n            func(id, object);\r\n        }\r\n    };\r\n}\r\n\r\nexport default IdToObjectMap;\r\n","export class PreCacheOperationResult {\r\n  private _succeeded: boolean;\r\n\r\n  constructor(succeeded: boolean) {\r\n    this._succeeded = succeeded;\r\n  }\r\n\r\n  getSucceeded = (): boolean => this._succeeded;\r\n}\r\n\r\nexport default PreCacheOperationResult;\r\n","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\nimport IdToObjectMap from \"../id_to_object_map\";\r\nimport PreCacheOperationResult from \"../../public/precaching/precache_operation_result\";\r\n\r\nfunction PrecacheOperation (operation) {\r\n    var _operation = operation;\r\n\r\n    this.cancel = function() {\r\n        _operation.cancel();\r\n    };\r\n}\r\n\r\n\r\nfunction InternalPrecacheOperation (centre, radius, completionCallback) {\r\n    var _centre = L.latLng(centre);\r\n    var _radius = radius;\r\n    var _completionCallback = completionCallback;\r\n    var _cancelled = false;\r\n\r\n    var _executeCompletionCallback = (success) => {\r\n        _completionCallback(new PreCacheOperationResult(success));\r\n    };\r\n\r\n    this.getCentre = () => _centre;\r\n\r\n    this.getRadius = () => _radius;\r\n\r\n    this.cancel = () => {\r\n        _cancelled = true;\r\n    };\r\n\r\n    this.isCancelled = () => _cancelled;\r\n\r\n    this.notifyComplete = () => {\r\n        _executeCompletionCallback(true);\r\n    };\r\n\r\n    this.notifyCancelled = () => {\r\n        _executeCompletionCallback(false);\r\n    };\r\n}\r\n\r\nfunction PrecacheModule (emscriptenApi) {\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _operations = new IdToObjectMap();\r\n    var _pendingOperations = [];\r\n    var _ready = false;\r\n\r\n    var _beginPrecacheOperation = (operation) => {\r\n        var operationId = _emscriptenApi.precacheApi.beginPrecacheOperation(operation);\r\n        _operations.insertObject(operationId, operation);\r\n\r\n        return operationId;\r\n    };\r\n\r\n    var _beginAllPrecacheOperations = () => {\r\n        _pendingOperations.forEach((operation) => {\r\n                if (operation.isCancelled()) {\r\n                    operation.notifyCancelled();\r\n                }\r\n                else {\r\n                    _beginPrecacheOperation(operation);\r\n                }\r\n            });\r\n\r\n        _pendingOperations = [];\r\n    };\r\n\r\n    var _cancelOperations = (cancelledIds) => {\r\n        cancelledIds.forEach((operationId) => {\r\n                _emscriptenApi.precacheApi.cancelPrecacheOperation(operationId);\r\n            });\r\n    };\r\n\r\n    var _onPrecacheOperationCompleted = (operationId) => {\r\n        var operation = _operations.removeObjectById(operationId);\r\n        operation.notifyComplete();\r\n    };\r\n\r\n    var _onPrecacheOperationCancelled = (operationId) => {\r\n        var operation = _operations.removeObjectById(operationId);\r\n        operation.notifyCancelled();\r\n    };\r\n\r\n    // :TODO: Fix DRY fail causing this to exist in both EegeoPrecacheApi::MaxPrecacheRadius and here.\r\n    var _getMaximumPrecacheRadius = () => 16000.0;\r\n\r\n    var _validatePrecacheParameters = (center, radius) => {\r\n        if (radius > _getMaximumPrecacheRadius() || radius <= 0.0) {\r\n            return new Error(\"radius outside of valid (0.0, \" + _getMaximumPrecacheRadius() + \"] range.\");\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    this.getMaximumPrecacheRadius = () => _getMaximumPrecacheRadius();\r\n\r\n    this.precache = (center, radius, callbackFunction) => {\r\n        var parameterValidationError = _validatePrecacheParameters(center, radius);\r\n\r\n        if (parameterValidationError !== null) {\r\n            throw parameterValidationError;\r\n        }\r\n\r\n        var internalOperation = new InternalPrecacheOperation(center, radius, callbackFunction);\r\n\r\n        if (_ready) {\r\n            var operationId = _beginPrecacheOperation(internalOperation);\r\n            _operations.insertObject(operationId, internalOperation);\r\n        }\r\n        else {\r\n            _pendingOperations.push(internalOperation);\r\n        }\r\n\r\n        var precacheOperation = new PrecacheOperation(internalOperation);\r\n        return precacheOperation;\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _emscriptenApi.precacheApi.registerCallbacks(_onPrecacheOperationCompleted, _onPrecacheOperationCancelled);\r\n        _beginAllPrecacheOperations();\r\n    };\r\n\r\n    this.onUpdate = (dt) => {\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n\r\n        var cancelledOperations = [];\r\n        _operations.forEachItem(function (operationId, operation) {\r\n            if (operation.isCancelled()) {\r\n                cancelledOperations.push(operationId);\r\n            }\r\n        });\r\n        _cancelOperations(cancelledOperations);\r\n    };\r\n}\r\n\r\nPrecacheModule.prototype = MapModule;\r\n\r\nexport default PrecacheModule;\r\n","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\n\r\nfunction CameraModule (\r\n    emscriptenApi,\r\n    startLatLng,\r\n    initialZoom,\r\n    viewVerticallyLocked\r\n    ) {\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _ready = false;\r\n    var _pendingSetViewData = null;\r\n    var _pendingSetViewToBoundsData = null;\r\n    var _center = startLatLng;\r\n    var _isVerticallyLocked = viewVerticallyLocked;\r\n\r\n\r\n    var _setView = function(config) {\r\n        if (_ready) {\r\n            _emscriptenApi.cameraApi.setView(config);\r\n        }\r\n        else {\r\n            if(_pendingSetViewData === null) {\r\n              _pendingSetViewData = {};\r\n            }\r\n            else {\r\n              _pendingSetViewData = Object.assign(_pendingSetViewData, config);\r\n            }\r\n        }\r\n    };\r\n\r\n    var _setViewToBounds = function(config) {\r\n        if (_ready) {\r\n            _emscriptenApi.cameraApi.setViewToBounds(config);\r\n        }\r\n        else {\r\n            _pendingSetViewToBoundsData = config;\r\n        }\r\n    };\r\n\r\n    var _getCenter = function() {\r\n        if (_ready) {\r\n            var cameraApi = _emscriptenApi.cameraApi;\r\n            _center = cameraApi.getInterestLatLong();\r\n        }\r\n        else {\r\n            _center = _pendingSetViewData[\"location\"] || _center;\r\n        }\r\n        return _center;\r\n    };\r\n\r\n    var _getDistanceToInterest = function() {\r\n        if (_ready) {\r\n            return _emscriptenApi.cameraApi.getDistanceToInterest();\r\n        }\r\n        else {\r\n            //Can't convert zoom level to distance before the api is loaded.\r\n          return 0.0;\r\n        }\r\n    };\r\n\r\n    var _getPitchDegrees = function() {\r\n        if (_ready) {\r\n            return _emscriptenApi.cameraApi.getPitchDegrees();\r\n        }\r\n        else {\r\n            return 0.0;\r\n        }\r\n    };\r\n\r\n    var _getTiltDegrees = function() {\r\n      if (_ready) {\r\n          return 90.0 - _emscriptenApi.cameraApi.getPitchDegrees();\r\n      }\r\n      else {\r\n          return 0.0;\r\n      }\r\n    };\r\n\r\n    var _setTiltDegrees = function(pitch) {\r\n        _setView({\"tiltDegrees\":pitch, animate: true});\r\n    };\r\n\r\n    var _getHeadingDegrees = function() {\r\n        if (_ready) {\r\n            return _emscriptenApi.cameraApi.getHeadingDegrees();\r\n        }\r\n        else {\r\n            return parseFloat(_pendingSetViewData[\"headingDegrees\"]) || 0.0;\r\n        }\r\n    };\r\n\r\n    var _setHeadingDegrees = function(heading) {\r\n        return _setView({\"headingDegrees\":heading, \"animate\":true});\r\n    };\r\n\r\n    var _setVerticallyLocked = function(isVerticallyLocked) {\r\n        _isVerticallyLocked = isVerticallyLocked;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.cameraApi.setVerticallyLocked(_isVerticallyLocked);\r\n    };\r\n\r\n    var _flushPendingViewOperations = function() {\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n\r\n        if(_pendingSetViewData !== null) {\r\n            _setView(_pendingSetViewData);\r\n            _pendingSetViewData = null;\r\n        }\r\n\r\n        if(_pendingSetViewToBoundsData !== null) {\r\n            _setViewToBounds(_pendingSetViewToBoundsData);\r\n            _pendingSetViewToBoundsData = null;\r\n        }\r\n    };\r\n\r\n    var _getZoomLevel = function() {\r\n         if (_ready) {\r\n            return _emscriptenApi.cameraApi.getZoomLevel();\r\n        }\r\n        else {\r\n            return  parseFloat(_pendingSetViewData[\"zoom\"]) || 0.0;\r\n        }\r\n    };\r\n\r\n\r\n    this.setView = function(config) {\r\n        _setView(config);\r\n    };\r\n\r\n    this.setViewToBounds = function(config) {\r\n        _setViewToBounds(config);\r\n    };\r\n\r\n    this.onInitialized = function() {\r\n        _ready = true;\r\n        _setVerticallyLocked(_isVerticallyLocked);\r\n        _flushPendingViewOperations();\r\n    };\r\n\r\n    this.getCurrentZoomLevel = function() {\r\n        return _getZoomLevel();\r\n    };\r\n\r\n    this.getCenter = function() {\r\n        return L.latLng(_getCenter());\r\n    };\r\n\r\n    this.getDistanceToInterest = function() {\r\n        return _getDistanceToInterest();\r\n    };\r\n\r\n    this.getPitchDegrees = function() {\r\n        return _getPitchDegrees();\r\n    };\r\n\r\n    this.getTiltDegrees = function() {\r\n      return _getTiltDegrees();\r\n    };\r\n\r\n    this.setTiltDegrees = function(pitch) {\r\n      return _setTiltDegrees(pitch);\r\n    };\r\n\r\n    this.getHeadingDegrees = function() {\r\n        return _getHeadingDegrees();\r\n    };\r\n\r\n    this.setHeadingDegrees = function(heading) {\r\n      return _setHeadingDegrees(heading);\r\n    };\r\n\r\n    this.setVerticallyLocked = function(isVerticallyLocked) {\r\n         _setVerticallyLocked(isVerticallyLocked);\r\n    };\r\n}\r\n\r\nCameraModule.prototype = MapModule;\r\n\r\nexport default CameraModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function PolygonsModule(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _polygonIdToPolygons = {};\r\n    var _pendingPolygons = [];\r\n    var _ready = false;\r\n\r\n\r\n    var _createPendingPolygons = () => {\r\n        _pendingPolygons.forEach(function (polygon) {\r\n            _createAndAdd(polygon);\r\n        });\r\n        _pendingPolygons = [];\r\n    };\r\n\r\n    var _createAndAdd = (polygon) => {\r\n        var polygonId = _emscriptenApi.geofenceApi.createGeofence(polygon.getPoints(), polygon.getHoles(), polygon._getConfig());\r\n        _polygonIdToPolygons[polygonId] = polygon;\r\n        return polygonId;\r\n    };\r\n\r\n    this.addPolygon = (polygon) => {\r\n        if (_ready) {\r\n            _createAndAdd(polygon);\r\n        }\r\n        else {\r\n            _pendingPolygons.push(polygon);\r\n        }\r\n    };\r\n\r\n    this.removePolygon = (polygon) => {\r\n\r\n        if (!_ready) {\r\n            var index = _pendingPolygons.indexOf(polygon);\r\n            if (index > -1) {\r\n                _pendingPolygons.splice(index, 1);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var polygonId = Object.keys(_polygonIdToPolygons).find((key) => _polygonIdToPolygons[key] === polygon\r\n        );\r\n\r\n        if (polygonId === undefined) {\r\n            return;\r\n        }\r\n\r\n        _emscriptenApi.geofenceApi.removeGeofence(polygonId);\r\n        delete _polygonIdToPolygons[polygonId];\r\n    };\r\n\r\n    this.onUpdate = function() {\r\n        if (_ready) {\r\n\r\n            Object.keys(_polygonIdToPolygons).forEach((polygonId) => {\r\n                    var polygon = _polygonIdToPolygons[polygonId];\r\n                    if (polygon._colorNeedsChanged()) {\r\n                        _emscriptenApi.geofenceApi.setGeofenceColor(polygonId, polygon.getColor());\r\n                        polygon._onColorChanged();\r\n                    }\r\n                });\r\n\t\t}\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _createPendingPolygons();\r\n    };\r\n}\r\n\r\nPolygonsModule.prototype = MapModule;\r\n\r\nexport default PolygonsModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function PolylineModule(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _polylineIdToPolyline = {};\r\n    var _pendingPolylines = [];\r\n    var _ready = false;\r\n\r\n\r\n    var _createPendingPolylines = () => {\r\n        _pendingPolylines.forEach((polyline) => {\r\n                _createAndAdd(polyline);\r\n            });\r\n        _pendingPolylines = [];\r\n    };\r\n\r\n    var _createAndAdd = (polyline) => {\r\n        var polylineId = _emscriptenApi.polylineApi.createPolyline(polyline);\r\n        _polylineIdToPolyline[polylineId] = polyline;\r\n        return polylineId;\r\n    };\r\n\r\n    this.addPolyline = (polyline) => {\r\n        if (_ready) {\r\n            _createAndAdd(polyline);\r\n        }\r\n        else {\r\n            _pendingPolylines.push(polyline);\r\n        }\r\n    };\r\n\r\n    this.removePolyline = (polyline) => {\r\n\r\n        if (!_ready) {\r\n            var index = _pendingPolylines.indexOf(polyline);\r\n            if (index > -1) {\r\n                _pendingPolylines.splice(index, 1);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var polylineId = Object.keys(_polylineIdToPolyline).find((key) => _polylineIdToPolyline[key] === polyline\r\n        );\r\n\r\n        if (polylineId === undefined) {\r\n            return;\r\n        }\r\n\r\n        _emscriptenApi.polylineApi.destroyPolyline(polylineId);\r\n        delete _polylineIdToPolyline[polylineId];\r\n    };\r\n\r\n    this.onUpdate = () => {\r\n        if (_ready) {\r\n            Object.keys(_polylineIdToPolyline).forEach((polylineId) => {\r\n                    var polyline = _polylineIdToPolyline[polylineId];\r\n                    _emscriptenApi.polylineApi.updateNativeState(polylineId, polyline);\r\n                });\r\n        }\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _createPendingPolylines();\r\n    };\r\n}\r\n\r\nPolylineModule.prototype = MapModule;\r\n\r\nexport default PolylineModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function RoutingModule (apiKey, indoorsModule) {\r\n\r\n    var _urlRoot = \"https://routing.wrld3d.com/v1/\";\r\n    var _apiKey = apiKey;\r\n    var _indoorsModule = indoorsModule;\r\n\r\n    var _parseMetadataTag = (metadata, tag) => {\r\n        var decoratedTag = \"{\" + tag + \":\";\r\n        var occurrence = metadata.indexOf(decoratedTag);\r\n\r\n        if (occurrence !== -1) {\r\n            var postTag = metadata.slice(occurrence + decoratedTag.length);\r\n            var nextBracketIndex = postTag.indexOf(\"}\");\r\n\r\n            if (nextBracketIndex !== -1) {\r\n                return postTag.substring(0, nextBracketIndex);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    var _parseRouteSteps = (routeSteps) => {\r\n        var parsedSteps = [];\r\n        for (var i = 0; i < routeSteps.length; i++) {\r\n            var metadata = routeSteps[i].name;\r\n            var level = _parseMetadataTag(metadata, \"level\");\r\n            if (level === \"multiple\") {\r\n                // skip route segments which change floor for now\r\n                continue;\r\n            }\r\n            var routeStep = {};\r\n            var latLongPoints = [];\r\n\r\n            routeStep.indoorMapId = _parseMetadataTag(metadata, \"bid\");\r\n            // Hack to preserve Westport/West ward works example behaviour:\r\n            // Routes are defined relative to an indoor map submission, but \r\n            // Westport House was built before the era of UIDs\r\n            if (routeStep.indoorMapId === \"e2657c93-2d13-412a-89fe-0949a14e7eea\") {\r\n                routeStep.indoorMapId = \"westport_house\";\r\n            } else if (routeStep.indoorMapId === \"c857d08d-7de1-4447-9ff8-6747649a00e0\") {\r\n                // West Ward Works also has an unusual history\r\n                routeStep.indoorMapId = \"70f9b00f-8c4f-4570-9a23-62bd80a76f8a\";\r\n            }\r\n            if (level) {\r\n                routeStep.indoorMapFloorId = parseInt(level);\r\n            }\r\n            var stepGeometry = routeSteps[i][\"geometry\"][\"coordinates\"];\r\n\r\n            for (var j = 0; j < stepGeometry.length; j++) {\r\n                var lonlat = stepGeometry[j];\r\n                var latLon = [lonlat[1], lonlat[0]];\r\n                latLongPoints.push(latLon);\r\n            }\r\n            routeStep.points = latLongPoints;\r\n            parsedSteps.push(routeStep);\r\n        }\r\n\r\n        return parsedSteps;\r\n    };\r\n\r\n    var _parseRoutes = (routingJson) => {\r\n        var routes = routingJson[\"routes\"];\r\n        var results = [];\r\n\r\n        for (var routeIndex = 0; routeIndex < routes.length; ++routeIndex) {\r\n            var legs = routes[routeIndex][\"legs\"];\r\n\r\n            for (var legIndex = 0; legIndex < legs.length; ++legIndex) {\r\n                var steps = legs[legIndex][\"steps\"];\r\n                var routeSteps = _parseRouteSteps(steps);\r\n                results.push(routeSteps);\r\n            }\r\n        }\r\n\r\n        return results;\r\n    };\r\n\r\n    var _routeParseHandler = (request, routeLoadHandler, routeLoadErrorHandler) => () => {\r\n        var routeJson = JSON.parse(request.responseText);\r\n\r\n        if (routeJson[\"code\"] === \"Ok\") {\r\n            var routes;\r\n            if (\"type\" in routeJson && routeJson[\"type\"] === \"multipart\") {\r\n                var multiroute = routeJson[\"routes\"];\r\n                for (var index = 0; index < multiroute.length; ++index) {\r\n                    routes = _parseRoutes(multiroute[index]);\r\n                    routeLoadHandler(routes);\r\n                }\r\n            }\r\n\r\n            else {\r\n                routes = _parseRoutes(routeJson);\r\n                routeLoadHandler(routes);\r\n            }\r\n        }\r\n\r\n        else {\r\n            if (routeLoadErrorHandler !== null && routeLoadErrorHandler !== undefined) {\r\n                routeLoadErrorHandler(routeJson);\r\n            }\r\n        }\r\n    };\r\n\r\n    var _cancelRequest = (request) => () => {\r\n        request.abort();\r\n    };\r\n\r\n    this.getRoute = (viaPoints, onLoadHandler, onErrorHandler, transportMode) => {\r\n        transportMode = transportMode || \"walking\";\r\n        var url = _urlRoot + \"route?loc=\";\r\n\r\n        for (var pointIndex = 0; pointIndex < viaPoints.length; ++pointIndex) {\r\n            url += viaPoints[pointIndex].join(\",\");\r\n\r\n            if (pointIndex < viaPoints.length - 1) {\r\n                url += \"%3B\";\r\n            }\r\n\r\n        }\r\n        url += \"&apikey=\" + _apiKey;\r\n        url += \"&limit=400\";\r\n        url += \"&travelmode=\" + transportMode;\r\n        var request = new XMLHttpRequest();\r\n        request.open(\"GET\", url, true);\r\n        request.onload = _routeParseHandler(request, onLoadHandler, onErrorHandler);\r\n        _indoorsModule.on(\"indoormapexit\", _cancelRequest(request));\r\n        request.send();\r\n    };\r\n}\r\n\r\nRoutingModule.prototype = MapModule;\r\n\r\nexport default RoutingModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function RenderingModule(emscriptenApi, clearColor) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _isMapCollapsed = false;\r\n    var _clearColor = clearColor;\r\n    var _ready = false;\r\n\r\n    this.onInitialized = () => {\r\n        _emscriptenApi.renderingApi.setClearColor(_clearColor);\r\n        _emscriptenApi.renderingApi.setMapCollapsed(_isMapCollapsed);\r\n        _ready = true;\r\n    };\r\n\r\n    this.ready = () => _ready;\r\n\r\n    this.setMapCollapsed = (isMapCollapsed) => {\r\n        _isMapCollapsed = isMapCollapsed;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.renderingApi.setMapCollapsed(_isMapCollapsed);\r\n    };\r\n\r\n    this.isMapCollapsed = () => _isMapCollapsed,\r\n\r\n    this.setClearColor = (clearColor) => {\r\n        _clearColor = clearColor;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.renderingApi.setClearColor(_clearColor);\r\n    };\r\n\r\n    this.getCameraRelativePosition = (latLng) => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.renderingApi.getCameraRelativePosition(latLng);\r\n    };\r\n\r\n    this.getNorthFacingOrientationMatrix = (latLng) => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.renderingApi.getNorthFacingOrientationMatrix(latLng);\r\n    };\r\n\r\n    this.getCameraProjectionMatrix = () => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.renderingApi.getCameraProjectionMatrix();\r\n    };\r\n\r\n    this.getCameraOrientationMatrix = () => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.renderingApi.getCameraOrientationMatrix();\r\n    };\r\n\r\n    this.getLightingData = () => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.renderingApi.getLightingData();\r\n    };\r\n}\r\n\r\nRenderingModule.prototype = MapModule;\r\n\r\nexport default RenderingModule;\r\n","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\n\r\nexport function BuildingsModuleImpl(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _nativeIdToBuildingHighlights = {};\r\n    var _callbackInvokedBeforeAssignement = {};\r\n    var _pendingBuildingHighlights = [];\r\n    var _ready = false;\r\n    var _notifyBuildingInformationReceivedCallback = null;\r\n\r\n    var _createPendingBuildingHighlights = () => {\r\n        _pendingBuildingHighlights.forEach((buildingHighlight) => {\r\n                _createAndAdd(buildingHighlight);\r\n            });\r\n        _pendingBuildingHighlights = [];\r\n    };\r\n\r\n    var _createAndAdd = (buildingHighlight) => {\r\n        var nativeId = _emscriptenApi.buildingsApi.createBuildingHighlight(buildingHighlight);\r\n        _nativeIdToBuildingHighlights[nativeId] = buildingHighlight;\r\n        buildingHighlight._setNativeHandle(nativeId);\r\n\r\n        if (nativeId in _callbackInvokedBeforeAssignement) {\r\n            delete _callbackInvokedBeforeAssignement[nativeId];\r\n            _notifyBuildingInformationReceived(nativeId);\r\n        }\r\n\r\n        return nativeId;\r\n    };\r\n\r\n    this.addBuildingHighlight = (buildingHighlight) => {\r\n        if (_ready) {\r\n            _createAndAdd(buildingHighlight);\r\n        }\r\n        else {\r\n            _pendingBuildingHighlights.push(buildingHighlight);\r\n        }\r\n    };\r\n\r\n    this.removeBuildingHighlight = (buildingHighlight) => {\r\n\r\n        if (!_ready) {\r\n            var index = _pendingBuildingHighlights.indexOf(buildingHighlight);\r\n            if (index > -1) {\r\n                _pendingBuildingHighlights.splice(index, 1);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var nativeId = buildingHighlight.getId();\r\n        if (nativeId === undefined) {\r\n            return;\r\n        }\r\n\r\n        _emscriptenApi.buildingsApi.destroyBuildingHighlight(nativeId);\r\n        delete _nativeIdToBuildingHighlights[nativeId];\r\n        buildingHighlight._setNativeHandle(null);\r\n    };\r\n\r\n    this.notifyBuildingHighlightChanged = (buildingHighlight) => {\r\n        if (_ready) {\r\n            var nativeId = buildingHighlight.getId();\r\n            if (nativeId === undefined) {\r\n                return;\r\n            }\r\n            _emscriptenApi.buildingsApi.setHighlightColor(nativeId, buildingHighlight.getColor());\r\n        }\r\n    };\r\n\r\n    this.findIntersectionWithBuilding = (ray) => {\r\n        if (!_ready) {\r\n            return undefined;\r\n        }\r\n        return _emscriptenApi.buildingsApi.findIntersectionWithBuilding(ray);\r\n    };\r\n\r\n    this.findBuildingAtScreenPoint = (screenPoint) => {\r\n        if (!_ready) {\r\n            return undefined;\r\n        }\r\n\r\n        var ray = _emscriptenApi.spacesApi.screenPointToRay(screenPoint);\r\n        return this.findIntersectionWithBuilding(ray);\r\n    };\r\n\r\n    this.findBuildingAtLatLng = (latLng) => {\r\n        if (!_ready) {\r\n            return undefined;\r\n        }\r\n\r\n        var ray = _emscriptenApi.spacesApi.latLongToVerticallyDownRay(latLng);\r\n        return this.findIntersectionWithBuilding(ray);\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _emscriptenApi.buildingsApi.registerBuildingInformationReceivedCallback(_executeBuildingInformationReceivedCallback);\r\n        _createPendingBuildingHighlights();\r\n    };\r\n\r\n    this.isReady = () => _ready;\r\n\r\n    this.setBuildingInformationReceivedCallback = (callback) => {\r\n        _notifyBuildingInformationReceivedCallback = callback;\r\n    };\r\n\r\n    var _executeBuildingInformationReceivedCallback = (buildingHighlightId) => {\r\n        if (buildingHighlightId in _nativeIdToBuildingHighlights) {\r\n            _notifyBuildingInformationReceived(buildingHighlightId);\r\n        }\r\n        else {\r\n            _callbackInvokedBeforeAssignement[buildingHighlightId] = true;\r\n        }\r\n    };\r\n\r\n    var _notifyBuildingInformationReceived = (buildingHighlightId) => {\r\n        var buildingHighlight = _nativeIdToBuildingHighlights[buildingHighlightId];\r\n        var buildingInformation = _emscriptenApi.buildingsApi.tryGetBuildingInformation(buildingHighlightId);\r\n        if (buildingInformation !== null) {\r\n            buildingHighlight._setBuildingInformation(buildingInformation);\r\n        }\r\n        if (_notifyBuildingInformationReceivedCallback !== null) {\r\n            _notifyBuildingInformationReceivedCallback(buildingHighlight);\r\n        }\r\n    };\r\n}\r\n\r\nfunction BuildingsModule(emscriptenApi) {\r\n    var _buildingsModuleImpl = new BuildingsModuleImpl(emscriptenApi);\r\n    var _this = this;\r\n\r\n    var _buildingInformationReceivedHandler = (buildingHighlight) => {\r\n        _this.fire(\"buildinginformationreceived\", { buildingHighlight: buildingHighlight });\r\n    };\r\n\r\n    this.findBuildingAtScreenPoint = (screenPoint) => _buildingsModuleImpl.findBuildingAtScreenPoint(screenPoint);\r\n\r\n    this.findBuildingAtLatLng = (latLng) => _buildingsModuleImpl.findBuildingAtLatLng(latLng);\r\n\r\n    this.onInitialized = () => {\r\n        _buildingsModuleImpl.setBuildingInformationReceivedCallback(_buildingInformationReceivedHandler);\r\n        _buildingsModuleImpl.onInitialized();\r\n    };\r\n\r\n    this._getImpl = () => _buildingsModuleImpl;\r\n}\r\n\r\nvar BuildingsModulePrototype = L.extend({}, MapModule, L.Mixin.Events);\r\n\r\nBuildingsModule.prototype = BuildingsModulePrototype;\r\n\r\nexport default BuildingsModule;\r\n","import L from \"leaflet\";\r\n\r\nimport MapModule from \"./map_module\";\r\nimport IdToObjectMap from \"../id_to_object_map\";\r\n\r\nexport function PropModule (emscriptenApi) {\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _pendingProps = [];\r\n    var _props = new IdToObjectMap();\r\n    var _hasPendingEnableDisable = false;\r\n    var _pendingEnableDisable = false;\r\n    var _pendingServiceUrl = \"\";\r\n    var _hasPendingServiceUrl = false;\r\n    var _ready = false;\r\n\r\n    var _createAndAdd = (prop) => {\r\n        var propId = _emscriptenApi.propsApi.createProp(\r\n            prop.getIndoorMapId(),\r\n            prop.getIndoorMapFloorId(),\r\n            prop.getName(),\r\n            prop.getLocation().lat,\r\n            prop.getLocation().lng,\r\n            prop.getElevation(),\r\n            prop.getElevationMode(),\r\n            prop.getHeadingDegrees(),\r\n            prop.getGeometryId());\r\n        _props.insertObject(propId, prop);\r\n    };\r\n\r\n    var _createAndAddArray = (propArray) => {\r\n        var indoorMapIds = [];\r\n        var indoorMapFloorIds = [];\r\n        var names = [];\r\n        var latitudes = [];\r\n        var longitudes = [];\r\n        var elevations = [];\r\n        var elevationModes = [];\r\n        var headings = [];\r\n        var geometryIds = [];\r\n\r\n        for (var propIndex = 0; propIndex < propArray.length; ++propIndex) {\r\n            var prop = propArray[propIndex];\r\n            indoorMapIds.push(prop.getIndoorMapId());\r\n            indoorMapFloorIds.push(prop.getIndoorMapFloorId());\r\n            names.push(prop.getName());\r\n            latitudes.push(prop.getLocation().lat);\r\n            longitudes.push(prop.getLocation().lng);\r\n            elevations.push(prop.getElevation());\r\n            elevationModes.push(prop.getElevationMode());\r\n            headings.push(prop.getHeadingDegrees());\r\n            geometryIds.push(prop.getGeometryId());\r\n        }\r\n\r\n        var propIds = _emscriptenApi.propsApi.createProps(indoorMapIds, indoorMapFloorIds, names, latitudes, longitudes, elevations, elevationModes, headings, geometryIds);\r\n\r\n        for (propIndex = 0; propIndex < propIds.length; ++propIndex) {\r\n            var propId = propIds[propIndex];\r\n            _props.insertObject(propId, propArray[propIndex]);\r\n        }\r\n    };\r\n\r\n    var _createPendingProps = () => {\r\n        if (_pendingProps.length === 0) {\r\n            return;\r\n        }\r\n        _createAndAddArray(_pendingProps);\r\n        _pendingProps = [];\r\n    };\r\n\r\n    var _executeIndoorMapEntitySetPropsLoadedCallbacks = (indoorMapId, floorId) => {\r\n        this.fire(\"indoormapentitysetpropsloaded\", {indoorMapId: indoorMapId, floorId: floorId});\r\n    };\r\n\r\n    var _executeIndoorMapPopulationRequestCompletedCallbacks = (succeeded, httpStatusCode) => {\r\n        this.fire(\"indoormappopulationrequestcomplete\", {\r\n            succeeded: (succeeded === 0 ? false : true),\r\n            httpStatusCode: httpStatusCode\r\n        });\r\n    };\r\n\r\n    this.addProp = (prop) => {\r\n        if (_ready) {\r\n            _createAndAdd(prop);\r\n        }\r\n        else {\r\n            _pendingProps.push(prop);\r\n        }\r\n    };\r\n\r\n    this.addProps = (propArray) => {\r\n        if (_ready) {\r\n            _createAndAddArray(propArray);\r\n        }\r\n        else {\r\n            _pendingProps = _pendingProps.concat(propArray);\r\n        }\r\n    };\r\n\r\n    this.removeProp = (prop) => {\r\n        if (_ready && _pendingProps.length === 0) {\r\n            var propId = _props.idForObject(prop);\r\n\r\n            if (propId !== null) {\r\n                _emscriptenApi.propsApi.destroyProp(propId);\r\n                _props.removeObjectById(propId);\r\n            }\r\n        }\r\n        else {\r\n            var index = _pendingProps.indexOf(prop);\r\n\r\n            if (index > -1) {\r\n                _pendingProps.splice(index, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    this.removeProps = (propArray) => {\r\n        var propIndex = 0;\r\n\r\n        if (_ready && _pendingProps.length === 0) {\r\n            var propIds = [];\r\n\r\n            for (; propIndex < propArray.length; ++propIndex) {\r\n                var propId = _props.idForObject(propArray[propIndex]);\r\n                _props.removeObjectById(propId);\r\n                propIds.push(parseInt(propId));\r\n            }\r\n\r\n            _emscriptenApi.propsApi.destroyProps(propIds);\r\n        }\r\n        else {\r\n            for (; propIndex < propArray.length; ++propIndex) {\r\n                var index = _pendingProps.indexOf(propArray[propIndex]);\r\n\r\n                if (index > -1) {\r\n                    _pendingProps.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _createPendingProps();\r\n\r\n        if (_hasPendingEnableDisable) {\r\n            this.setAutomaticIndoorMapPopulationEnabled(_pendingEnableDisable);\r\n        }\r\n        if (_hasPendingServiceUrl) {\r\n            this.setIndoorMapPopulationServiceUrl(_pendingServiceUrl);\r\n        }\r\n\r\n        _emscriptenApi.propsApi.setIndoorMapEntitySetPropsLoadedCallback(_executeIndoorMapEntitySetPropsLoadedCallbacks);\r\n        _emscriptenApi.propsApi.setIndoorMapPopulationRequestCompletedCallback(_executeIndoorMapPopulationRequestCompletedCallbacks);\r\n        _emscriptenApi.propsApi.onInitialized();\r\n    };\r\n\r\n    this.onUpdate = (dt) => {\r\n        if (_ready) {\r\n\r\n            _props.forEachItem((propId, /** @type {import(\"../../public/prop\").Prop} */ prop) => {\r\n                    if (prop._locationNeedsChanged()) {\r\n                        _emscriptenApi.propsApi.setLocation(propId, prop.getLocation().lat, prop.getLocation().lng);\r\n                        prop._onLocationChanged();\r\n                    }\r\n\r\n                    if (prop._headingDegreesNeedsChanged()) {\r\n                        _emscriptenApi.propsApi.setHeadingDegrees(propId, prop.getHeadingDegrees());\r\n                        prop._onHeadingDegreesChanged();\r\n                    }\r\n\r\n                    if (prop._elevationNeedsChanged()) {\r\n                        _emscriptenApi.propsApi.setElevation(propId, prop.getElevation());\r\n                        prop._onElevationChanged();\r\n                    }\r\n\r\n                    if (prop._elevationModeNeedsChanged()) {\r\n                        _emscriptenApi.propsApi.setElevationMode(propId, prop.getElevationMode());\r\n                        prop._onElevationModeChanged();\r\n                    }\r\n\r\n                    if (prop._geometryIdNeedsChanged()) {\r\n                        _emscriptenApi.propsApi.setGeometryId(propId, prop.getGeometryId());\r\n                        prop._onGeometryIdChanged();\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    this.setAutomaticIndoorMapPopulationEnabled = (enabled) => {\r\n        if (_ready) {\r\n            _emscriptenApi.propsApi.setAutomaticIndoorMapPopulationEnabled(enabled);\r\n        }\r\n        else {\r\n            _pendingEnableDisable = enabled;\r\n            _hasPendingEnableDisable = true;\r\n        }\r\n    };\r\n\r\n    this.isAutomaticIndoorMapPopulationEnabled = () => {\r\n        if (_ready) {\r\n            return _emscriptenApi.propsApi.isAutomaticIndoorMapPopulationEnabled();\r\n        }\r\n        else {\r\n            return _pendingEnableDisable;\r\n        }\r\n    };\r\n\r\n    this.setIndoorMapPopulationServiceUrl = (serviceUrl) => {\r\n        if (_ready) {\r\n            return _emscriptenApi.propsApi.setIndoorMapPopulationServiceUrl(serviceUrl);\r\n        }\r\n        else {\r\n            _pendingServiceUrl = serviceUrl;\r\n            _hasPendingServiceUrl = true;\r\n        }\r\n    };\r\n\r\n    this.getIndoorMapEntitySetProps = (indoorMapId, floorId) => {\r\n        if (_ready) {\r\n            return _emscriptenApi.propsApi.tryGetIndoorMapEntitySetProps(indoorMapId, floorId);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n\r\nvar PropPrototype = L.extend({}, MapModule, L.Mixin.Events);\r\n\r\nPropModule.prototype = PropPrototype;\r\n\r\nexport default PropModule;\r\n","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\n\r\nexport function IndoorMapEntityInformationModuleImpl(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _nativeIdToIndoorMapEntityInformation = {};\r\n    var _callbackInvokedBeforeAssignement = {};\r\n    var _pendingIndoorEntityInformation = [];\r\n    var _ready = false;\r\n    var _notifyIndoorMapEntityInformationChangedCallback = null;\r\n\r\n    var _createPendingIndoorMapEntityInformations = () => {\r\n        _pendingIndoorEntityInformation.forEach(function (indoorMapEntityInformation) {\r\n            _createAndAdd(indoorMapEntityInformation);\r\n        });\r\n\r\n        _pendingIndoorEntityInformation = [];\r\n    };\r\n\r\n    var _createAndAdd = (indoorMapEntityInformation) => {\r\n        var nativeId = _emscriptenApi.indoorMapEntityInformationApi.createIndoorMapEntityInformation(indoorMapEntityInformation);\r\n        _nativeIdToIndoorMapEntityInformation[nativeId] = indoorMapEntityInformation;\r\n        indoorMapEntityInformation._setNativeHandle(nativeId);\r\n\r\n        if (nativeId in _callbackInvokedBeforeAssignement) {\r\n            delete _callbackInvokedBeforeAssignement[nativeId];\r\n            _notifyIndoorMapEntityInformationChanged(nativeId);\r\n        }\r\n\r\n        return nativeId;\r\n    };\r\n\r\n    this.addIndoorMapEntityInformation = (indoorMapEntityInformation) => {\r\n        if (_ready) {\r\n            _createAndAdd(indoorMapEntityInformation);\r\n        }\r\n        else {\r\n            _pendingIndoorEntityInformation.push(indoorMapEntityInformation);\r\n        }\r\n    };\r\n    \r\n    this.removeIndoorMapEntityInformation = (indoorMapEntityInformation) => {\r\n\r\n        if (!_ready) {\r\n            var index = _pendingIndoorEntityInformation.indexOf(indoorMapEntityInformation);\r\n            if (index > -1) {\r\n                _pendingIndoorEntityInformation.splice(index, 1);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var nativeId = indoorMapEntityInformation.getNativeId();\r\n        if (nativeId === undefined) {\r\n            return;\r\n        }\r\n\r\n        _emscriptenApi.indoorMapEntityInformationApi.destroyIndoorMapEntityInformation(nativeId);\r\n        delete _nativeIdToIndoorMapEntityInformation[nativeId];\r\n        indoorMapEntityInformation._setNativeHandle(null);\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _emscriptenApi.indoorMapEntityInformationApi.registerIndoorMapEntityInformationChangedCallback(_executeIndoorMapEntityInformationChangedCallback);\r\n        _createPendingIndoorMapEntityInformations();\r\n    };\r\n\r\n    this.setIndoorMapEntityInformationChangedCallback = (callback) => {\r\n        _notifyIndoorMapEntityInformationChangedCallback = callback;\r\n    };\r\n\r\n    var _executeIndoorMapEntityInformationChangedCallback = (indoorMapEntityInformationId) => {\r\n        if (indoorMapEntityInformationId in _nativeIdToIndoorMapEntityInformation) {\r\n            _notifyIndoorMapEntityInformationChanged(indoorMapEntityInformationId);\r\n        }\r\n        else {\r\n            _callbackInvokedBeforeAssignement[indoorMapEntityInformationId] = true;\r\n        }\r\n    };\r\n\r\n    var _notifyIndoorMapEntityInformationChanged = (indoorMapEntityInformationId) => {\r\n        var indoorMapEntityInformation = _nativeIdToIndoorMapEntityInformation[indoorMapEntityInformationId];\r\n        var data = _emscriptenApi.indoorMapEntityInformationApi.tryGetIndoorMapEntityInformation(indoorMapEntityInformationId);\r\n        if (data !== null) {\r\n            indoorMapEntityInformation._setData(data);\r\n        }\r\n        if (_notifyIndoorMapEntityInformationChangedCallback !== null) {\r\n            _notifyIndoorMapEntityInformationChangedCallback(indoorMapEntityInformation);\r\n        }\r\n    };\r\n}\r\n\r\nfunction IndoorMapEntityInformationModule(emscriptenApi) {\r\n    var _indoorMapEntityInformationModuleImpl = new IndoorMapEntityInformationModuleImpl(emscriptenApi);\r\n\r\n    var _IndoorMapEntityInformationChangedHandler = (indoorMapEntityInformation) => {\r\n        this.fire(\"indoormapentityinformationchanged\", { indoorMapEntityInformation: indoorMapEntityInformation });\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _indoorMapEntityInformationModuleImpl.setIndoorMapEntityInformationChangedCallback(_IndoorMapEntityInformationChangedHandler);\r\n        _indoorMapEntityInformationModuleImpl.onInitialized();\r\n    };\r\n\r\n    this._getImpl = () => _indoorMapEntityInformationModuleImpl;\r\n}\r\n\r\nvar IndoorMapEntityInformationModulePrototype = L.extend({}, MapModule, L.Mixin.Events);\r\n\r\nIndoorMapEntityInformationModule.prototype = IndoorMapEntityInformationModulePrototype;\r\n\r\nexport default IndoorMapEntityInformationModule;\r\n","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\n\r\nexport function IndoorMapFloorOutlineInformationModuleImpl(emscriptenApi) {\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _nativeIdToIndoorMapFloorOutlineInformation = {};\r\n    var _callbackInvokedBeforeAssignement = {};\r\n    var _pendingIndoorMapFloorOutlineInformation = [];\r\n    var _ready = false;\r\n    var _notifyIndoorMapFloorOutlineInformationLoadedCallback = null;\r\n\r\n    var _createPendingIndoorMapFloorOutlineInformations = () => {\r\n        _pendingIndoorMapFloorOutlineInformation.forEach((indoorMapFloorOutlineInformation) => {\r\n            _createAndAdd(indoorMapFloorOutlineInformation);\r\n        });\r\n\r\n        _pendingIndoorMapFloorOutlineInformation = [];\r\n    };\r\n\r\n    var _createAndAdd = (indoorMapFloorOutlineInformation) => {\r\n        var nativeId = _emscriptenApi.indoorMapFloorOutlineInformationApi.createIndoorMapFloorOutlineInformation(indoorMapFloorOutlineInformation);\r\n        _nativeIdToIndoorMapFloorOutlineInformation[nativeId] = indoorMapFloorOutlineInformation;\r\n        indoorMapFloorOutlineInformation._setNativeHandle(nativeId);\r\n\r\n        if (nativeId in _callbackInvokedBeforeAssignement) {\r\n            delete _callbackInvokedBeforeAssignement[nativeId];\r\n            _fetchIndoorMapFloorOutlineInformation(nativeId);\r\n        }\r\n\r\n        return nativeId;\r\n    };\r\n\r\n    this.addIndoorMapFloorOutlineInformation = (indoorMapFloorOutlineInformation) => {\r\n        if (_ready) {\r\n            _createAndAdd(indoorMapFloorOutlineInformation);\r\n        }\r\n        else {\r\n            _pendingIndoorMapFloorOutlineInformation.push(indoorMapFloorOutlineInformation);\r\n        }\r\n    };\r\n    \r\n    this.removeIndoorMapFloorOutlineInformation = (indoorMapFloorOutlineInformation) => {\r\n\r\n        if (!_ready) {\r\n            var index = _pendingIndoorMapFloorOutlineInformation.indexOf(indoorMapFloorOutlineInformation);\r\n            if (index > -1) {\r\n                _pendingIndoorMapFloorOutlineInformation.splice(index, 1);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var nativeId = indoorMapFloorOutlineInformation.getId();\r\n        if (nativeId === undefined) {\r\n            return;\r\n        }\r\n\r\n        _emscriptenApi.indoorMapFloorOutlineInformationApi.destroyIndoorMapFloorOutlineInformation(nativeId);\r\n        delete _nativeIdToIndoorMapFloorOutlineInformation[nativeId];\r\n        indoorMapFloorOutlineInformation._setNativeHandle(null);\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _emscriptenApi.indoorMapFloorOutlineInformationApi.registerIndoorMapFloorOutlineInformationLoadedCallback(_executeIndoorMapFloorOutlineInformationLoadedCallback);\r\n        _createPendingIndoorMapFloorOutlineInformations();\r\n    };\r\n\r\n    this.setIndoorMapFloorOutlineInformationLoadedCallback = (callback) => {\r\n        _notifyIndoorMapFloorOutlineInformationLoadedCallback = callback;\r\n    };\r\n\r\n    var _executeIndoorMapFloorOutlineInformationLoadedCallback = (indoorMapFloorOutlineInformationId) => {\r\n        if (indoorMapFloorOutlineInformationId in _nativeIdToIndoorMapFloorOutlineInformation) {\r\n            _fetchIndoorMapFloorOutlineInformation(indoorMapFloorOutlineInformationId);\r\n        }\r\n        else {\r\n            _callbackInvokedBeforeAssignement[indoorMapFloorOutlineInformationId] = true;\r\n        }\r\n    };\r\n\r\n    var _fetchIndoorMapFloorOutlineInformation = (indoorMapFloorOutlineInformationId) => {\r\n        var indoorMapFloorOutlineInformation = _nativeIdToIndoorMapFloorOutlineInformation[indoorMapFloorOutlineInformationId];\r\n        if (_emscriptenApi.indoorMapFloorOutlineInformationApi.getIndoorMapFloorOutlineInformationLoaded(indoorMapFloorOutlineInformationId)) {\r\n            var data = _emscriptenApi.indoorMapFloorOutlineInformationApi.tryGetIndoorMapFloorOutlineInformation(indoorMapFloorOutlineInformationId);\r\n            if (data !== null) {\r\n                indoorMapFloorOutlineInformation._setData(data);\r\n                if (_notifyIndoorMapFloorOutlineInformationLoadedCallback !== null) {\r\n                    _notifyIndoorMapFloorOutlineInformationLoadedCallback(indoorMapFloorOutlineInformation);\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction IndoorMapFloorOutlineInformationModule(emscriptenApi) {\r\n    var _indoorMapFloorOutlineInformationModuleImpl = new IndoorMapFloorOutlineInformationModuleImpl(emscriptenApi);\r\n    \r\n\r\n    var _IndoorMapFloorOutlineInformationLoadedHandler = (indoorMapFloorOutlineInformation) => {\r\n        this.fire(\"indoormapflooroutlineinformationloaded\", { indoorMapFloorOutlineInformation: indoorMapFloorOutlineInformation });\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _indoorMapFloorOutlineInformationModuleImpl.setIndoorMapFloorOutlineInformationLoadedCallback(_IndoorMapFloorOutlineInformationLoadedHandler);\r\n        _indoorMapFloorOutlineInformationModuleImpl.onInitialized();\r\n    };\r\n\r\n    this._getImpl = () => _indoorMapFloorOutlineInformationModuleImpl;\r\n}\r\n\r\nvar IndoorMapFloorOutlineInformationModulePrototype = L.extend({}, MapModule, L.Mixin.Events);\r\n\r\nIndoorMapFloorOutlineInformationModule.prototype = IndoorMapFloorOutlineInformationModulePrototype;\r\n\r\nexport default IndoorMapFloorOutlineInformationModule;\r\n","import L from \"leaflet\";\r\nimport MapModule from \"./map_module\";\r\n\r\nexport function BlueSphereModule(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _ready = false;\r\n    var _location = null;\r\n    var _isEnabled = false;\r\n    var _indoorMapId = \"\";\r\n    var _indoorMapFloorId = 0;\r\n    var _headingDegrees = 0.0;\r\n    var _elevation = 0.0;\r\n    var _stateChanged = false;\r\n    var _showOrientation = true;\r\n\r\n    this.isEnabled = () => _isEnabled;\r\n\r\n    this.setEnabled = (isEnabled) => {\r\n        _isEnabled = isEnabled ? true : false;\r\n    };\r\n\r\n    this.getLocation = () => _location;\r\n\r\n    this.setLocation = (location) => {\r\n        _location = L.latLng(location);\r\n        _stateChanged = true;\r\n    };\r\n\r\n    this.getIndoorMapId = () => _indoorMapId;\r\n\r\n    this.getIndoorMapFloorId = () => _indoorMapFloorId;\r\n\r\n    this.setIndoorMap = (indoorMapId, indoorMapFloorId) => {\r\n        _indoorMapId = indoorMapId;\r\n        _indoorMapFloorId = indoorMapFloorId;\r\n    };\r\n\r\n    this.setOutdoor = () => {\r\n        this.setIndoorMap(\"\", 0);\r\n    };\r\n\r\n    this.isOrientationVisible = () => _showOrientation;\r\n\r\n    this.getHeadingDegrees = () => _headingDegrees;\r\n\r\n    this.setHeadingDegrees = (headingDegrees) => {\r\n        _headingDegrees = headingDegrees;\r\n        _stateChanged = true;\r\n    };\r\n\r\n    this.getElevation = () => _elevation;\r\n\r\n    this.setElevation = (elevation) => {\r\n        _elevation = elevation;\r\n        _stateChanged = true;\r\n    };\r\n\r\n    this.showOrientation = (isVisible) => {\r\n        _showOrientation = isVisible;\r\n        _stateChanged = true;\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _emscriptenApi.blueSphereApi.updateNativeState(this);\r\n    };\r\n\r\n    this.onUpdate = () => {\r\n        if (_ready && _stateChanged) {\r\n            _emscriptenApi.blueSphereApi.updateNativeState(this);\r\n            _stateChanged = false;\r\n        }\r\n    };\r\n\r\n}\r\n\r\nBlueSphereModule.prototype = MapModule;\r\n\r\nexport default BlueSphereModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function MapRuntimeModule(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _ready = false;\r\n\r\n    this.Pause = () => {\r\n        if (_ready) {\r\n            _emscriptenApi.mapRuntimeApi.onPause();\r\n        }\r\n    };\r\n\r\n    this.Resume = () => {\r\n        if (_ready) {\r\n            _emscriptenApi.mapRuntimeApi.onResume();\r\n        }\r\n    };\r\n\r\n    this.Remove = () => {\r\n        if (_ready) {\r\n            _emscriptenApi.mapRuntimeApi.onRemove();\r\n        }\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n    };\r\n}\r\n\r\nMapRuntimeModule.prototype = MapModule;\r\n\r\nexport default MapRuntimeModule;\r\n","import L from \"leaflet\";\r\n\r\nimport MapModule from \"./map_module\";\r\nimport { getIndoorMapId, getIndoorMapFloorIndex, getIndoorMapFloorId } from \"../indoor_map_layer_options\";\r\nimport { getElevationModeInt } from \"../elevation_mode\";\r\n\r\nvar _undefinedPoint = L.point(-100, -100);\r\n\r\nfunction LayerPointMappingModule (emscriptenApi) {\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _spacesApi = null;\r\n    var _ready = false;\r\n    var _layerToLatLngsMapping = {};\r\n    var _pendingMappings = [];\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _spacesApi = _emscriptenApi.spacesApi;\r\n        this._createPendingLayers();\r\n    };       \r\n\r\n    // https://stackoverflow.com/a/15030117\r\n    var _flatten = (arr) => arr.reduce(function (flat, toFlatten) {\r\n        return flat.concat(Array.isArray(toFlatten) ? _flatten(toFlatten) : toFlatten);\r\n    }, []);\r\n\r\n    this._getLayerId = (layer) => L.stamp(layer);\r\n\r\n    this._useWrldSdkPointMappingForLayer = (layer) => {\r\n        if (typeof layer.getLatLng !== \"function\" && typeof layer.getLatLngs !== \"function\") {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    this._createAndAdd = (layer) => {\r\n        if (!this._useWrldSdkPointMappingForLayer(layer)) {\r\n            return;\r\n        }\r\n\r\n        var id = this._getLayerId(layer);\r\n\r\n        if(id in _layerToLatLngsMapping) {\r\n            this.removePointMapping(layer);\r\n        }\r\n\r\n        var sourceLatLngArray = typeof layer.getLatLngs === \"function\" ? layer.getLatLngs() : [ layer.getLatLng() ];\r\n        var latLngsFlatArray = _flatten(sourceLatLngArray);\r\n\r\n        var elevation = layer.options.elevation || 0.0;\r\n        \r\n        var elevationModeInt = getElevationModeInt(layer.options.elevationMode);\r\n\r\n        var api = _emscriptenApi.layerPointMappingApi;\r\n        \r\n        // due to legacy uses where positions were defined using floor index (poi tool, for example)\r\n        // check to see if we're dealing with a floor index, and use that instead. Floor id & index \r\n        // have different semantics, so they cannot be used interchangeably.\r\n        var indoorMapId = getIndoorMapId(layer);\r\n        var indoorMapFloorIndex = getIndoorMapFloorIndex(layer);\r\n        var indoorMapWithFloorIndex = indoorMapId !== null && indoorMapFloorIndex !== null;\r\n\r\n        if(indoorMapWithFloorIndex === true) {\r\n            api.createPointMappingWithFloorIndex(id, elevation, elevationModeInt, indoorMapId, indoorMapFloorIndex, latLngsFlatArray);\r\n        } else {\r\n            var indoorMapFloorId = getIndoorMapFloorId(layer);\r\n            var indoorOptionsValid = indoorMapId !== null && indoorMapFloorId !== null;            \r\n\r\n            // in the case where _either_ the indoor map id or the floor id is invalid, use neither (defaults to outside)\r\n            var sanitisedIndoorMapId = indoorOptionsValid === true ? indoorMapId : \"\";\r\n            var sanitisedIndoorMapFloorId = indoorOptionsValid === true ? indoorMapFloorId : 0;\r\n\r\n            api.createPointMapping(id, elevation, elevationModeInt, sanitisedIndoorMapId, sanitisedIndoorMapFloorId, latLngsFlatArray);\r\n        }\r\n        \r\n        _layerToLatLngsMapping[id] = api.getLatLngsForLayer(id, latLngsFlatArray.length);\r\n    };\r\n\r\n    this._createPendingLayers = () => {\r\n        _pendingMappings.forEach((layer) => {\r\n                this._createAndAdd(layer);\r\n            });\r\n        _pendingMappings = [];\r\n    };\r\n\r\n    this.createPointMapping = (layer) => {\r\n        if (!this._useWrldSdkPointMappingForLayer(layer)) {\r\n            return;\r\n        }\r\n\r\n        if(!_ready) {\r\n            _pendingMappings.push(layer);\r\n            return;\r\n        }\r\n\r\n        this._createAndAdd(layer);\r\n    };\r\n\r\n    this.removePointMapping = (layer) => {\r\n        if(!_ready) {\r\n            var index = _pendingMappings.indexOf(layer);\r\n            if (index > -1) {\r\n                _pendingMappings.splice(index, 1);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        var layerId = this._getLayerId(layer);\r\n\r\n        // try to remove the mapping for this layer, even if it doesn't follow the rules that\r\n        // would permit a mapping to be created in the first place. This is to guard against a \r\n        // user mutating the layer options _after_ adding it to the map\r\n        if (layerId in _layerToLatLngsMapping) {\r\n            _emscriptenApi.layerPointMappingApi.removePointMapping(layerId);\r\n            delete _layerToLatLngsMapping[layerId];\r\n        }\r\n    };\r\n\r\n    this._updateMappings = () => {\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n\r\n        var api = _emscriptenApi.layerPointMappingApi;\r\n\r\n        for (var id in _layerToLatLngsMapping) {\r\n            var latLngCount = _layerToLatLngsMapping[id].length;\r\n\r\n            _layerToLatLngsMapping[id] = api.getLatLngsForLayer(id, latLngCount);\r\n        }\r\n    };\r\n\r\n    this.onDraw = () => {\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n\r\n        this._updateMappings();\r\n    };\r\n\r\n    this._getDefaultLatLngsFromLayer = (layer) => {\r\n        if (typeof layer.getLatLngs === \"function\") {\r\n            return layer.getLatLngs();\r\n        }\r\n\r\n        if (typeof layer.getLatLng === \"function\") {\r\n            return [layer.getLatLng()];\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    this.latLngsForLayer = (layer) => {        \r\n        if(!_ready) {            \r\n            return this._getDefaultLatLngsFromLayer(layer);\r\n        }\r\n\r\n        // todo js_loc: this assumes we've called onDraw() at least once to populate contents\r\n        // ... depending on ordering of calls, we may have to gate this & do an update on first tick\r\n        var layerId = this._getLayerId(layer);\r\n    \r\n        if (layerId in _layerToLatLngsMapping) {\r\n            return _layerToLatLngsMapping[layerId];\r\n        }\r\n        \r\n        // fall back to leaflet defaults\r\n        return this._getDefaultLatLngsFromLayer(layer);\r\n    };\r\n\r\n    this.projectLatlngs = (layer, latlngs, result, projectedBounds) => {\r\n        if(!_ready) {\r\n            return false;\r\n        }\r\n        \r\n        if(!this._useWrldSdkPointMappingForLayer(layer)) {\r\n            return false;\r\n        }\r\n\t\r\n        // the source latlngs are in a jagged array\r\n        // retrieve the latlngs for our flat array containining values passed from C++\r\n        var associatedFlatLatlngArray = this.latLngsForLayer(layer);\r\n    \r\n        if(associatedFlatLatlngArray === null) {\r\n            return false;\r\n        }\r\n         \r\n        var currentFlatIndex = 0;\r\n        this._projectLatlngsRecursive(latlngs, associatedFlatLatlngArray, currentFlatIndex, result, projectedBounds);\r\n\r\n        return true;\r\n    };\r\n\r\n    this._latLngToLayerPoint = (latlng) => {\r\n        return (_ready) ? _spacesApi.worldToScreen(latlng).toPoint() : _undefinedPoint;\r\n    };\r\n\r\n    this._projectLatlngsRecursive = (originalLatlngs, associatedFlatLatlngArray, currentFlatIndex, result, projectedBounds) => {\r\n        var flat = originalLatlngs[0] instanceof L.LatLng,\r\n            len = originalLatlngs.length,\r\n            i, ring;\r\n\r\n        if (flat) {\r\n            ring = [];\r\n            for (i = 0; i < len; i++, currentFlatIndex++) {                         \r\n                // the goal here is to do a few things:\r\n                //  1. take the source (raw) leaflet LatLongAlts, and figure out the corresponding C++ IPointOnMap LatLongAlts\r\n                //  2. convert the corresponding LatLongAlt => screen coordinates\r\n                // todo: we end up jumping back to emscripten spaces api after doing this (via latLngToLayerPoint), so it may be a good idea\r\n                // to allow just passing back the screen space positions in the C++ code\r\n                var cppLatLngAlt = associatedFlatLatlngArray[currentFlatIndex];\r\n                ring[i] = this._latLngToLayerPoint(cppLatLngAlt);\r\n                projectedBounds.extend(ring[i]);\r\n            }\r\n            result.push(ring);\r\n        } else {\r\n            for (i = 0; i < len; i++) {\r\n                currentFlatIndex = this._projectLatlngsRecursive(\r\n                    originalLatlngs[i], associatedFlatLatlngArray, currentFlatIndex, result, projectedBounds);\r\n            }\r\n        }\r\n\r\n        return currentFlatIndex;\r\n    };\r\n}\r\n\r\nLayerPointMappingModule.prototype = MapModule;\r\n\r\nexport default LayerPointMappingModule;","import MapModule from \"./map_module\";\r\n\r\nexport function VersionModule(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _ready = false;\r\n\r\n    this.getVersion = () => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.versionApi.getPlatformVersion();\r\n    };\r\n\r\n    this.getVersionHash = () => {\r\n        if (!_ready) {\r\n            return null;\r\n        }\r\n        return _emscriptenApi.versionApi.getPlatformVersionHash();\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n    };\r\n\r\n}\r\n\r\nVersionModule.prototype = MapModule;\r\n\r\nexport default VersionModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function HeatmapModule(emscriptenApi) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _heatmapIdToHeatmap = {};\r\n    var _pendingHeatmaps = [];\r\n    var _ready = false;\r\n\r\n\r\n    var _createPendingHeatmaps = () => {\r\n        _pendingHeatmaps.forEach(function (heatmap) {\r\n            _createAndAdd(heatmap);\r\n        });\r\n        _pendingHeatmaps = [];\r\n    };\r\n\r\n    var _createAndAdd = (heatmap) => {\r\n        var heatmapId = _emscriptenApi.heatmapApi.createHeatmap(heatmap);\r\n        _heatmapIdToHeatmap[heatmapId] = heatmap;\r\n        return heatmapId;\r\n    };\r\n\r\n    this.addHeatmap = (heatmap) => {\r\n        if (_ready) {\r\n            _createAndAdd(heatmap);\r\n        }\r\n        else {\r\n            _pendingHeatmaps.push(heatmap);\r\n        }\r\n    };\r\n\r\n    this.removeHeatmap = (heatmap) => {\r\n\r\n        if (!_ready) {\r\n            var index = _pendingHeatmaps.indexOf(heatmap);\r\n            if (index > -1) {\r\n                _pendingHeatmaps.splice(index, 1);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var heatmapId = Object.keys(_heatmapIdToHeatmap).find((key) => _heatmapIdToHeatmap[key] === heatmap);\r\n\r\n        if (heatmapId === undefined) {\r\n            return;\r\n        }\r\n\r\n        _emscriptenApi.heatmapApi.destroyHeatmap(heatmapId);\r\n        delete _heatmapIdToHeatmap[heatmapId];\r\n    };\r\n\r\n    this.onUpdate = () => {\r\n        if (_ready) {\r\n            Object.keys(_heatmapIdToHeatmap).forEach((heatmapId) => {\r\n                    var heatmap = _heatmapIdToHeatmap[heatmapId];\r\n                    _emscriptenApi.heatmapApi.updateNativeState(heatmapId, heatmap);\r\n                });\r\n        }\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _ready = true;\r\n        _createPendingHeatmaps();\r\n    };\r\n}\r\n\r\nHeatmapModule.prototype = MapModule;\r\n\r\nexport default HeatmapModule;\r\n","import MapModule from \"./map_module\";\r\n\r\nexport function FrameRateModule(\r\n    emscriptenApi,\r\n    targetVSyncInterval,\r\n    throttledTargetFrameIntervalMilliseconds,\r\n    idleSecondsBeforeThrottle,\r\n    throttleWhenIdleEnabled\r\n    ) {\r\n\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _targetVSyncInterval = targetVSyncInterval;\r\n    var _throttledTargetFrameIntervalMilliseconds = throttledTargetFrameIntervalMilliseconds;\r\n    var _idleSecondsBeforeThrottle = idleSecondsBeforeThrottle;\r\n    var _throttleWhenIdleEnabled = throttleWhenIdleEnabled;\r\n    var _ready = false;\r\n\r\n    this.onInitialized = () => {\r\n        _emscriptenApi.frameRateApi.setTargetVSyncInterval(_targetVSyncInterval);\r\n        _emscriptenApi.frameRateApi.setThrottledTargetFrameInterval(_throttledTargetFrameIntervalMilliseconds);\r\n        _emscriptenApi.frameRateApi.setIdleSecondsBeforeThrottle(_idleSecondsBeforeThrottle);\r\n        _emscriptenApi.frameRateApi.setThrottleWhenIdleEnabled(_throttleWhenIdleEnabled);\r\n        _ready = true;\r\n    };\r\n\r\n    this.ready = () => _ready;\r\n\r\n    this.setTargetVSyncInterval = (targetVSyncInterval) => {\r\n        _targetVSyncInterval = targetVSyncInterval;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.frameRateApi.setTargetVSyncInterval(_targetVSyncInterval);\r\n    };\r\n\r\n    this.setThrottledTargetFrameInterval = (throttledTargetFrameIntervalMilliseconds) => {\r\n        _throttledTargetFrameIntervalMilliseconds = throttledTargetFrameIntervalMilliseconds;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.frameRateApi.setThrottledTargetFrameInterval(_throttledTargetFrameIntervalMilliseconds);\r\n    };\r\n\r\n    this.setIdleSecondsBeforeThrottle = (idleSecondsBeforeThrottle) => {\r\n        _idleSecondsBeforeThrottle = idleSecondsBeforeThrottle;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.frameRateApi.setIdleSecondsBeforeThrottle(_idleSecondsBeforeThrottle);\r\n    };\r\n\r\n    this.setThrottleWhenIdleEnabled = (throttleWhenIdleEnabled) => {\r\n        _throttleWhenIdleEnabled = throttleWhenIdleEnabled;\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.frameRateApi.setThrottleWhenIdleEnabled(_throttleWhenIdleEnabled);\r\n    };\r\n\r\n    this.cancelThrottle = () => {\r\n        // don't attempt to defer command if called during startup\r\n        if (!_ready) {\r\n            return;\r\n        }\r\n        _emscriptenApi.frameRateApi.cancelThrottle();\r\n    };\r\n}\r\n\r\nFrameRateModule.prototype = MapModule;\r\n\r\nexport default FrameRateModule;\r\n","import L from \"leaflet\";\r\nimport EegeoLeafletMap from \"../public/map\";\r\n\r\nimport HTMLMapContainer from \"./html_map_container\";\r\nimport IndoorEntranceMarkerUpdater from \"./indoor_entrance_marker_updater\";\r\nimport MapMoveEvents from \"./events/map_move_events\";\r\n\r\nimport ThemesModule from \"./modules/themes_module\";\r\nimport IndoorsModule from \"./modules/indoors_module\";\r\nimport PrecacheModule from \"./modules/precache_module\";\r\nimport CameraModule from \"./modules/camera_module\";\r\nimport PolygonModule from \"./modules/polygon_module\";\r\nimport PolylineModule from \"./modules/polyline_module\";\r\nimport RoutingModule from \"./modules/routing_module\";\r\nimport RenderingModule from \"./modules/rendering_module\";\r\nimport BuildingsModule from \"./modules/buildings_module\";\r\nimport PropModule from \"./modules/prop_module\";\r\nimport IndoorMapEntityInformationModule from \"./modules/indoor_map_entity_information_module\";\r\nimport IndoorMapFloorOutlineInformationModule from \"./modules/indoor_map_floor_outline_information_module\";\r\nimport BlueSphereModule from \"./modules/blue_sphere_module\";\r\nimport MapRuntimeModule from \"./modules/map_runtime_module\";\r\nimport LayerPointMappingModule from \"./modules/layer_point_mapping_module\";\r\nimport VersionModule from \"./modules/version_module\";\r\nimport HeatmapModule from \"./modules/heatmap_module\";\r\nimport FrameRateModule from \"./modules/frame_rate_module\";\r\n\r\nconst removeFileExtension = (fileName, extensionToRemove) => {\r\n    var extensionPosition = fileName.lastIndexOf(\".\");\r\n    var extension = fileName.slice(extensionPosition);\r\n    if (extension === extensionToRemove) {\r\n        return fileName.slice(0, extensionPosition);\r\n    }\r\n    return fileName;\r\n};\r\n\r\nexport function EegeoMapController (mapId, emscriptenApi, domElement, apiKey, browserWindow, browserDocument, module, options, onMapRemoveCallback) {\r\n\r\n    var _defaultOptions = {\r\n        canvasId: \"canvas\",\r\n        width: undefined,\r\n        height: undefined,\r\n        indoorsEnabled: false,\r\n        displayEntranceMarkers: true,\r\n        coverageTreeManifest: \"\",\r\n        environmentThemesManifest: \"\",\r\n        headingDegrees: 0,\r\n\r\n        // Override Leaflet defaults\r\n        center: L.latLng([37.7858, -122.401]),\r\n        zoom: 16,\r\n        doubleClickZoom: true,\r\n        zoomControl: false,\r\n        zoomAnimation: false,\r\n        minZoom: 0,\r\n        maxZoom: 20,\r\n        zoomSnap: 0,\r\n\r\n        viewVerticallyLocked: false,\r\n        showIndoorWrldWatermark: true,\r\n        trafficEnabled: true,\r\n        trafficDisableWhenEnteringIndoorMaps: true,\r\n        indoorLabelsAlwaysHidden: false,\r\n\r\n        targetVSyncInterval: 1,\r\n        frameRateThrottleWhenIdleEnabled: false,\r\n        throttledTargetFrameIntervalMilliseconds: 1000,\r\n        idleSecondsBeforeFrameRateThrottle: 30.0,\r\n\r\n        drawClearColor: \"#000000ff\",\r\n        indoorMapBackgroundColor: \"#000000c0\",\r\n        indoorSelectionTimeoutDuration: 30.0\r\n    };\r\n\r\n    options = L.extend(_defaultOptions, options);\r\n\r\n    var _mapId = mapId;\r\n    var _emscriptenApi = emscriptenApi;\r\n    var _browserWindow = browserWindow;\r\n    var _browserDocument = browserDocument;\r\n\r\n    var _themesModule = new ThemesModule(emscriptenApi);\r\n    var _precacheModule = new PrecacheModule(emscriptenApi);\r\n    var _cameraModule = new CameraModule(\r\n        emscriptenApi,\r\n        options.center,\r\n        options.zoom,\r\n        options.viewVerticallyLocked\r\n    );\r\n    var _indoorsModule = new IndoorsModule(emscriptenApi, this, _mapId, options.indoorId, options.floorIndex, options.center, options.headingDegrees, options.zoom, options.showIndoorWrldWatermark, options.indoorMapBackgroundColor);\r\n    var _polygonModule = new PolygonModule(emscriptenApi);\r\n    var _polylineModule = new PolylineModule(emscriptenApi);\r\n    var _layerPointMappingModule = new LayerPointMappingModule(emscriptenApi);\r\n    var _routingModule = new RoutingModule(apiKey, _indoorsModule);\r\n    var _renderingModule = new RenderingModule(emscriptenApi, options.drawClearColor);\r\n    var _buildingsModule = new BuildingsModule(emscriptenApi);\r\n    var _propModule = new PropModule(emscriptenApi);\r\n    var _indoorMapEntityInformationModule = new IndoorMapEntityInformationModule(emscriptenApi);\r\n    var _indoorMapFloorOutlineInformationModule = new IndoorMapFloorOutlineInformationModule(emscriptenApi);\r\n    var _blueSphereModule = new BlueSphereModule(emscriptenApi);\r\n    var _mapRuntimeModule = new MapRuntimeModule(emscriptenApi);\r\n    var _versionModule = new VersionModule(emscriptenApi);\r\n    var _heatmapModule = new HeatmapModule(emscriptenApi);\r\n\r\n    var _frameRateModule = new FrameRateModule(\r\n        emscriptenApi,\r\n        options.targetVSyncInterval,\r\n        options.throttledTargetFrameIntervalMilliseconds,\r\n        options.idleSecondsBeforeFrameRateThrottle,\r\n        options.frameRateThrottleWhenIdleEnabled\r\n    );\r\n\r\n    var _onMapRemoveCallback = onMapRemoveCallback;\r\n\r\n    var _canvasId = _mapId ? options[\"canvasId\"] + _mapId : options[\"canvasId\"];\r\n    var _canvasWidth = options[\"width\"] || domElement.clientWidth;\r\n    var _canvasHeight = options[\"height\"] || domElement.clientHeight;\r\n    var _containerId = \"wrld-map-container\" + _mapId;\r\n\r\n    var _mapContainer = new HTMLMapContainer(_browserDocument, _browserWindow, domElement, _canvasId, _canvasWidth, _canvasHeight, options.drawClearColor, _containerId, _mapId);\r\n\r\n    var _canvas = _mapContainer.canvas;\r\n\r\n    var _Module = module;\r\n    _Module[\"canvas\"] = _canvas;\r\n\r\n    var center = L.latLng(options.center);\r\n    var zoom = options.zoom;\r\n    var headingDegrees = options.headingDegrees;\r\n\r\n    var indoorsEnabledArg = (options.indoorsEnabled) ? \"1\" : \"0\";\r\n    var coverageTreeManifest = removeFileExtension(options.coverageTreeManifest, \".gz\");\r\n    var environmentThemesManifest = removeFileExtension(options.environmentThemesManifest, \".gz\");\r\n    var doubleClickZoom = (options.doubleClickZoom) ? \"1\" : \"0\";\r\n    var trafficEnabled = (options.trafficEnabled) ? \"1\" : \"0\";\r\n    var trafficDisableWhenEnteringIndoorMaps = (options.trafficDisableWhenEnteringIndoorMaps) ? \"1\" : \"0\";\r\n    var indoorLabelsAlwaysHidden = (options.indoorLabelsAlwaysHidden) ? \"1\" : \"0\";\r\n    var indoorSelectionTimeoutDuration = options.indoorSelectionTimeoutDuration;\r\n\r\n    _Module[\"arguments\"] = [\r\n        _canvasId,\r\n        _mapId.toString(),\r\n        _canvasWidth.toString(),\r\n        _canvasHeight.toString(),\r\n        apiKey,\r\n        center.lat.toString(),\r\n        center.lng.toString(),\r\n        zoom.toString(),\r\n        headingDegrees.toString(),\r\n        indoorsEnabledArg,\r\n        coverageTreeManifest,\r\n        environmentThemesManifest,\r\n        doubleClickZoom,\r\n        _containerId,\r\n        trafficEnabled,\r\n        trafficDisableWhenEnteringIndoorMaps,\r\n        indoorLabelsAlwaysHidden,\r\n        indoorSelectionTimeoutDuration.toString()\r\n    ];\r\n\r\n    var _onRemove = function() {\r\n        _onMapRemoveCallback();\r\n        _this.leafletMap._initEvents(true, _canvas);\r\n\r\n        if (_this._indoorEntranceMarkerUpdater) {\r\n            _this._indoorEntranceMarkerUpdater.removeAllEntranceMarkers();\r\n        }\r\n\r\n        _mapContainer.onRemove();\r\n\r\n        var gl = _Module.ctx || _Module.K;\r\n        if (gl && \"getExtension\" in gl) {\r\n            gl.getExtension(\"WEBGL_lose_context\").loseContext();\r\n        }\r\n    };\r\n\r\n    this.leafletMap = new EegeoLeafletMap(\r\n        _browserWindow,\r\n        _mapContainer.overlay,\r\n        options,\r\n        _onRemove,\r\n        _cameraModule,\r\n        _precacheModule,\r\n        _themesModule,\r\n        _indoorsModule,\r\n        _polygonModule,\r\n        _polylineModule,\r\n        _layerPointMappingModule,\r\n        _routingModule,\r\n        _renderingModule,\r\n        _buildingsModule,\r\n        _propModule,\r\n        _indoorMapEntityInformationModule,\r\n        _indoorMapFloorOutlineInformationModule,\r\n        _blueSphereModule,\r\n        _mapRuntimeModule,\r\n        _versionModule,\r\n        _heatmapModule,\r\n        _frameRateModule\r\n    );\r\n\r\n    this.leafletMap._initEvents(false, _canvas);\r\n\r\n    var _mapMoveEvents = new MapMoveEvents(this.leafletMap);\r\n\r\n    var _modules = [\r\n        _layerPointMappingModule,\r\n        _themesModule,\r\n        _indoorsModule,\r\n        _precacheModule,\r\n        _cameraModule,\r\n        _polygonModule,\r\n        _polylineModule,\r\n        _renderingModule,\r\n        _buildingsModule,\r\n        _propModule,\r\n        _indoorMapEntityInformationModule,\r\n        _indoorMapFloorOutlineInformationModule,\r\n        _blueSphereModule,\r\n        _mapRuntimeModule,\r\n        _versionModule,\r\n        _heatmapModule,\r\n        _frameRateModule\r\n    ];\r\n\r\n    this._indoorEntranceMarkerUpdater = null;\r\n\r\n    if (options.displayEntranceMarkers) {\r\n        this._indoorEntranceMarkerUpdater = new IndoorEntranceMarkerUpdater(this.leafletMap, _indoorsModule);\r\n    }\r\n\r\n    var _resizeCanvas = null;\r\n\r\n    var _updateCanvasSize = function() {\r\n        var newWidth = _mapContainer.width();\r\n        var newHeight = _mapContainer.height();\r\n\r\n        if (newWidth !== _canvasWidth || newHeight !== _canvasHeight) {\r\n            _resizeCanvas(newWidth, newHeight);\r\n            _canvasWidth = newWidth;\r\n            _canvasHeight = newHeight;\r\n        }\r\n    };\r\n\r\n    this.onInitialized = function(eegeoApiPointer, emscriptenApiPointer) {\r\n        _mapContainer.onInitialized();\r\n        _resizeCanvas = _Module.cwrap(\"resizeCanvas\", null, [\"number\", \"number\"]);\r\n        _emscriptenApi.onInitialized(eegeoApiPointer, emscriptenApiPointer, _onUpdate, _onDraw, _onInitialStreamingCompleted);\r\n\r\n        _mapMoveEvents.setEventCallbacks(_emscriptenApi.cameraApi);\r\n\r\n        _modules.forEach(function(module) {\r\n            module.onInitialized();\r\n        });\r\n        this.leafletMap.onInitialized(_emscriptenApi);\r\n    };\r\n\r\n    this.onError = function(errorMessage) {\r\n        _mapContainer.onError(errorMessage);\r\n    };\r\n\r\n    this._setIndoorTransitionCompleteEventListener = function(callback) {\r\n        this.leafletMap.once(\"moveend\", callback);\r\n    };\r\n\r\n    var _this = this;\r\n\r\n    var _onUpdate = function(deltaSeconds) {\r\n        _updateCanvasSize();\r\n\r\n        _modules.forEach(function(module) {\r\n            module.onUpdate(deltaSeconds);\r\n        });\r\n\r\n        _this.leafletMap._onUpdate();\r\n    };\r\n\r\n    var _onDraw = function(deltaSeconds) {\r\n        _modules.forEach(function(module) {\r\n            module.onDraw(deltaSeconds);\r\n        });\r\n\r\n        _this.leafletMap._onDraw();\r\n    };\r\n\r\n    var _onInitialStreamingCompleted = function() {\r\n        _modules.forEach(function(module) {\r\n            module.onInitialStreamingCompleted();\r\n        });\r\n        _this.leafletMap.onInitialStreamingCompleted();\r\n    };\r\n}\r\n\r\nexport default EegeoMapController;\r\n","export function EmscriptenMemory(emscriptenModule) {\r\n\r\n    var _emscriptenModule = emscriptenModule;\r\n\r\n    this.readDoubles = (pointer, count) => {\r\n        var result = [];\r\n        for (var i = 0; i < count; ++i) {\r\n            var item = _emscriptenModule.getValue(pointer + i * 8, \"double\");\r\n            result.push(item);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    this.passDoubles = (double_array, func) => {\r\n        var pointer = _emscriptenModule._malloc(double_array.length * 8);\r\n        for (var i = 0; i < double_array.length; ++i) {\r\n            _emscriptenModule.setValue(pointer + i * 8, double_array[i], \"double\");\r\n        }\r\n        func(pointer, double_array.length);\r\n        _emscriptenModule._free(pointer);\r\n    };\r\n\r\n    this.passString = (string, func) => {\r\n        var utf8Length = _emscriptenModule.lengthBytesUTF8(string);\r\n        var pointer = _emscriptenModule._malloc(utf8Length);\r\n        _emscriptenModule.stringToUTF8(string, pointer, utf8Length);\r\n        func(pointer);\r\n        _emscriptenModule._free(pointer);\r\n    };\r\n\r\n    this.passStrings = (string_array, func) => {\r\n        // allocate array of pointers to strings\r\n        // NB Emscripten heap pointers are 32 bits\r\n        var pointer = _emscriptenModule._malloc(string_array.length * 4);\r\n        var strs = [];\r\n        for (var i = 0; i < string_array.length; ++i) {\r\n            var utf8Length = _emscriptenModule.lengthBytesUTF8(string_array[i]) + 1;\r\n            var str = _emscriptenModule._malloc(utf8Length);\r\n            _emscriptenModule.stringToUTF8(string_array[i], str, utf8Length);\r\n            _emscriptenModule.setValue(pointer + i * 4, str, \"*\");\r\n            strs.push(str);\r\n        }\r\n        func(pointer, string_array.length);\r\n        for (var j = 0; j < strs.length; ++j) {\r\n            _emscriptenModule._free(strs[j]);\r\n        }\r\n        _emscriptenModule._free(pointer);\r\n    };\r\n\r\n    this.passInt32s = (int32_array, func) => {\r\n        var pointer = _emscriptenModule._malloc(int32_array.length * 4);\r\n        for (var i = 0; i < int32_array.length; ++i) {\r\n            _emscriptenModule.setValue(pointer + i * 4, int32_array[i], \"i32\");\r\n        }\r\n        func(pointer, int32_array.length);\r\n        _emscriptenModule._free(pointer);\r\n    };\r\n\r\n    this.stringifyPointer = (ptr) => _emscriptenModule.UTF8ToString(ptr);\r\n\r\n    this.createInt8Buffer = (bufferLen) => {\r\n        var bufferPtr = _emscriptenModule._malloc(bufferLen);\r\n        return {\r\n            ptr: bufferPtr,\r\n            element_count: bufferLen,\r\n            element_type: \"i8\",\r\n            element_size_bytes: 1\r\n        };\r\n    };\r\n\r\n    this.createInt32Buffer = (elementCount) => {\r\n        var elementSizeBytes = 4;\r\n        var bufferPtr = _emscriptenModule._malloc(elementCount * elementSizeBytes);\r\n        return {\r\n            ptr: bufferPtr,\r\n            element_count: elementCount,\r\n            element_type: \"i32\",\r\n            element_size_bytes: elementSizeBytes\r\n        };\r\n    };\r\n\r\n    this.createDoubleBuffer = (elementCount) => {\r\n        var elementSizeBytes = 8;\r\n        var bufferPtr = _emscriptenModule._malloc(elementCount * elementSizeBytes);\r\n        return {\r\n            ptr: bufferPtr,\r\n            element_count: elementCount,\r\n            element_type: \"double\",\r\n            element_size_bytes: elementSizeBytes\r\n        };\r\n    };\r\n\r\n    this.createBufferFromArray = (number_array, createXBufferFunc) => {\r\n        var buffer = createXBufferFunc(number_array.length);\r\n        for (var i = 0; i < buffer.element_count; ++i) {\r\n            _emscriptenModule.setValue(buffer.ptr + i * buffer.element_size_bytes, number_array[i], buffer.element_type);\r\n        }\r\n        return buffer;\r\n    };\r\n\r\n    this.consumeBufferToArray = (buffer) => {\r\n        var result = [];\r\n        for (var i = 0; i < buffer.element_count; ++i) {\r\n            var item = _emscriptenModule.getValue(buffer.ptr + i * buffer.element_size_bytes, buffer.element_type);\r\n            result.push(item);\r\n        }\r\n        _emscriptenModule._free(buffer.ptr);\r\n        return result;\r\n    };\r\n\r\n    this.freeBuffer = (buffer) => {\r\n        _emscriptenModule._free(buffer.ptr);\r\n    };\r\n\r\n    this.createUtf8BufferFromString = (str) => {\r\n        var bufferLen = _emscriptenModule.lengthBytesUTF8(str) + 1;\r\n        var buffer = this.createInt8Buffer(bufferLen);\r\n        _emscriptenModule.stringToUTF8(str, buffer.ptr, bufferLen);\r\n        return buffer;\r\n    };\r\n\r\n    this.consumeUtf8BufferToString = (buffer) => {\r\n        var result = _emscriptenModule.UTF8ToString(buffer.ptr);\r\n        _emscriptenModule._free(buffer.ptr);\r\n        return result;\r\n    };\r\n}\r\n\r\nexport default EmscriptenMemory;\r\n","import { Vector4 } from \"../../public/space\";\r\n\r\nconst vec4ToRgba32 = (v) => {\r\n    var rgba = ((v.x & 0xFF) << 24) + ((v.y & 0xFF) << 16) + ((v.z & 0xFF) << 8) + (v.w & 0xFF);\r\n    return rgba;\r\n};\r\n\r\nconst rgba32ToVec4 = (rgba) => {\r\n    var vec4 = new Vector4(\r\n        ((rgba >> 24) & 0xFF),\r\n        ((rgba >> 16) & 0xFF),\r\n        ((rgba >> 8) & 0xFF),\r\n        (rgba & 0xFF)\r\n    );\r\n    return vec4;\r\n};\r\n\r\nconst hexToRgba32 = (hex) => {\r\n    // https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n\r\n    hex = hex.replace(/^#/, \"\");\r\n    var a = 0xff;\r\n    if (hex.length === 8) {\r\n        a = parseInt(hex.slice(6, 8), 16) & 0xff;\r\n    }\r\n    else if (hex.length === 4) {\r\n        a = parseInt(hex.slice(3, 4).repeat(2), 16) & 0xff;\r\n    }\r\n\r\n    var rgb = 0xffffff;\r\n    if (hex.length === 6 || hex.length === 8) {\r\n        rgb = parseInt(hex.substring(0, 6), 16) & 0xffffff;\r\n    }\r\n    else if (hex.length === 3 || hex.length === 4) {\r\n        rgb = parseInt((hex[0].repeat(2) + hex[1].repeat(2) + hex[2].repeat(2)), 16) & 0xffffff;\r\n    }\r\n\r\n    return (rgb << 8) + a;\r\n};\r\n\r\nconst colorArrayToVector4 = (color) => {\r\n    var r = 0.0;\r\n    var g = 0.0;\r\n    var b = 0.0;\r\n    var a = 255.0;\r\n    if (Array.isArray(color) && color.length >= 3) {\r\n        r = color[0];\r\n        g = color[1];\r\n        b = color[2];\r\n        if (color.length > 3) {\r\n            a = color[3];\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Unable to parse color from array: \" + String(color));\r\n    }\r\n\r\n    if (isNaN(r) || isNaN(g) || isNaN(b) || isNaN(a)) {\r\n        throw new Error(\"Unable to parse color - value out of range: \" + String(color));\r\n    }\r\n    return new Vector4(r, g, b, a);\r\n};\r\n\r\nconst colorObjectToVector4 = (color) => {\r\n    var r = undefined;\r\n    var g = undefined;\r\n    var b = undefined;\r\n    var a = 255.0;\r\n    if (typeof color === \"object\") {\r\n        if (\"r\" in color) {\r\n            r = color.r;\r\n        }\r\n        else if (\"x\" in color) {\r\n            r = color.x;\r\n        }\r\n\r\n        if (\"g\" in color) {\r\n            g = color.g;\r\n        }\r\n        else if (\"y\" in color) {\r\n            g = color.y;\r\n        }\r\n\r\n        if (\"b\" in color) {\r\n            b = color.b;\r\n        }\r\n        else if (\"z\" in color) {\r\n            b = color.z;\r\n        }\r\n\r\n        if (\"a\" in color) {\r\n            a = color.a;\r\n        }\r\n        else if (\"w\" in color) {\r\n            a = color.w;\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Unable to parse color: \" + String(color));\r\n    }\r\n\r\n    if (isNaN(r) || isNaN(g) || isNaN(b) || isNaN(a)) {\r\n        throw new Error(\"Unable to parse color - value out of range: \" + String(color));\r\n    }\r\n    return new Vector4(r, g, b, a);\r\n};\r\n\r\nexport const colorToRgba32 = (color) => {\r\n    if (typeof (color) === \"string\") {\r\n        return hexToRgba32(color);\r\n    }\r\n    else if (Array.isArray(color)) {\r\n        return vec4ToRgba32(colorArrayToVector4(color));\r\n    }\r\n    else if (typeof color === \"object\") {\r\n        return vec4ToRgba32(colorObjectToVector4(color));\r\n    }\r\n\r\n    throw new Error(\"Unable to parse color: \" + String(color));\r\n};\r\n\r\nexport const colorToVec4 = (color) => {\r\n    return rgba32ToVec4(colorToRgba32(color));\r\n};\r\n","import { ElevationModeType } from \"../elevation_mode\";\r\nimport { colorToVec4 } from \"./emscripten_interop_utils.js\";\r\n\r\nexport function EmscriptenGeofenceApi(eegeoApiPointer, cwrap, emscriptenModule) {\r\n\r\n    var _eegeoApiPointer = eegeoApiPointer;\r\n    var _emscriptenModule = emscriptenModule;\r\n    var _removeGeofence = cwrap(\"removeGeofence\", null, [\"number\", \"number\"]);\r\n    var _setGeofenceColor = cwrap(\"setGeofenceColor\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _createGeofenceFromRawCoords = cwrap(\"createGeofenceFromRawCoords\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"string\", \"number\", \"number\"]);\r\n    \r\n    this._getElevationIsAboveSeaLevelFromConfig = (config) => {\r\n      var configUsingNewApi = typeof config.elevationMode !== \"undefined\";\r\n      return configUsingNewApi ? config.elevationMode.toLowerCase() === ElevationModeType.HEIGHT_ABOVE_SEA_LEVEL.toLowerCase() :\r\n        (config.offsetFromSeaLevel || false);\r\n    };\r\n    \r\n    this._getAltitudeOffsetFromConfig = (config) => {\r\n      var configUsingNewApi = typeof config.elevation !== \"undefined\";\r\n      return configUsingNewApi ? config.elevation : (config.altitudeOffset || 0.0);\r\n    };\r\n\r\n    this.createGeofence = (outerPoints, holes, config) => {\r\n      var coords = [];\r\n      var ringVertexCounts = [];\r\n      ringVertexCounts.push(outerPoints.length);\r\n      outerPoints.forEach((point) => {\r\n        coords.push(point.lat);\r\n        coords.push(point.lng);\r\n      });\r\n\r\n      holes.forEach((ring) => {\r\n        ringVertexCounts.push(ring.length);\r\n        ring.forEach((point) => {\r\n          coords.push(point.lat);\r\n          coords.push(point.lng);\r\n        });\r\n      });\r\n\r\n      var coordsPointer = _emscriptenModule._malloc(coords.length * 8);\r\n      for (var i=0; i<coords.length; ++i) {\r\n          _emscriptenModule.setValue(coordsPointer + i*8, coords[i], \"double\");\r\n      }\r\n\r\n      var ringVertexCountsPointer = _emscriptenModule._malloc(ringVertexCounts.length * 4);\r\n      for (var k=0; k<ringVertexCounts.length; ++k) {\r\n          _emscriptenModule.setValue(ringVertexCountsPointer + k*4, ringVertexCounts[k], \"i32\");\r\n      }\r\n\r\n      var indoorMapId = config.indoorMapId || \"\";      \r\n      var elevationModeAboveSeaLevel = this._getElevationIsAboveSeaLevelFromConfig(config);\r\n      var altitudeOffset = this._getAltitudeOffsetFromConfig(config);     \r\n      \r\n      var polygonId = _createGeofenceFromRawCoords(_eegeoApiPointer, \r\n          coordsPointer, coords.length,\r\n          ringVertexCountsPointer, ringVertexCounts.length,\r\n          elevationModeAboveSeaLevel, \r\n          altitudeOffset,\r\n          indoorMapId,\r\n          indoorMapId.length,\r\n          config.indoorMapFloorId || 0\r\n          );\r\n\r\n      _emscriptenModule._free(coordsPointer);\r\n      _emscriptenModule._free(ringVertexCountsPointer);\r\n\r\n      return polygonId;\r\n    };\r\n\r\n    this.removeGeofence = (polygonId) => {\r\n      _removeGeofence(_eegeoApiPointer, polygonId);\r\n    };\r\n\r\n    this.setGeofenceColor = (polygonId, color) => {\r\n      var colorVec4 = colorToVec4(color);\r\n      _setGeofenceColor(_eegeoApiPointer, polygonId, colorVec4.x / 255, colorVec4.y / 255, colorVec4.z / 255, colorVec4.w / 255);\r\n    };\r\n}\r\n\r\nexport default EmscriptenGeofenceApi;\r\n","import L from \"leaflet\";\r\nimport { colorToRgba32 } from \"./emscripten_interop_utils.js\";\r\n\r\nexport function EmscriptenIndoorsApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _indoorsApi_RegisterIndoorMapCallbacks = cwrap(\"indoorsApi_RegisterIndoorMapCallbacks\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_EnterIndoorMap = cwrap(\"indoorsApi_EnterIndoorMap\", null, [\"number\", \"string\"]);\r\n    var _indoorsApi_ExitIndoorMap = cwrap(\"indoorsApi_ExitIndoorMap\", null, [\"number\"]);\r\n    var _indoorsApi_HasActiveIndoorMap = cwrap(\"indoorsApi_HasActiveIndoorMap\", \"number\", [\"number\"]);\r\n    var _indoorsApi_GetActiveIndoorMapId = cwrap(\"indoorsApi_GetActiveIndoorMapId\", \"string\", [\"number\"]);\r\n    var _indoorsApi_GetActiveIndoorMapName = cwrap(\"indoorsApi_GetActiveIndoorMapName\", \"string\", [\"number\"]);\r\n    var _indoorsApi_GetActiveIndoorMapSourceVendor = cwrap(\"indoorsApi_GetActiveIndoorMapSourceVendor\", \"string\", [\"number\"]);\r\n    var _indoorsApi_GetActiveIndoorMapFloorCount = cwrap(\"indoorsApi_GetActiveIndoorMapFloorCount\", \"number\", [\"number\"]);\r\n    var _indoorsApi_GetActiveIndoorMapUserData = cwrap(\"indoorsApi_GetActiveIndoorMapUserData\", \"string\", [\"number\"]);\r\n    var _indoorsApi_GetSelectedFloorIndex = cwrap(\"indoorsApi_GetSelectedFloorIndex\", \"number\", [\"number\"]);\r\n    var _indoorsApi_SetSelectedFloorIndex = cwrap(\"indoorsApi_SetSelectedFloorIndex\", \"number\", [\"number\", \"number\"]);\r\n    var _indoorsApi_GetFloorName = cwrap(\"indoorsApi_GetFloorName\", \"string\", [\"number\", \"number\"]);\r\n    var _indoorsApi_GetFloorShortName = cwrap(\"indoorsApi_GetFloorShortName\", \"string\", [\"number\", \"number\"]);\r\n    var _indoorsApi_GetFloorNumber = cwrap(\"indoorsApi_GetFloorNumber\", \"number\", [\"number\", \"number\"]);\r\n    var _indoorsApi_GetFloorHeightAboveSeaLevel = cwrap(\"indoorsApi_GetFloorHeightAboveSeaLevel\", \"number\", [\"number\", \"number\"]);\r\n\r\n    var _indoorsApi_TryGetReadableNameBufferSize = cwrap(\"indoorsApi_TryGetReadableNameBufferSize\", \"number\", [\"number\", \"string\", \"number\", \"number\"]);\r\n    var _indoorsApi_TryGetReadableName = cwrap(\"indoorsApi_TryGetReadableName\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_TryGetFloorReadableNameBufferSize = cwrap(\"indoorsApi_TryGetFloorReadableNameBufferSize\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_TryGetFloorReadableName = cwrap(\"indoorsApi_TryGetFloorReadableName\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_TryGetFloorShortNameBufferSize = cwrap(\"indoorsApi_TryGetFloorShortNameBufferSize\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_TryGetFloorShortName = cwrap(\"indoorsApi_TryGetFloorShortName\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_SetBackgroundColor = cwrap(\"indoorsApi_SetBackgroundColor\", null, [\"number\", \"number\"]);\r\n    var _indoorsApi_HideLabelsForEntities = cwrap(\"indoorsApi_HideLabelsForEntities\", null, [\"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_ShowLabelsForEntities = cwrap(\"indoorsApi_ShowLabelsForEntities\", null, [\"number\", \"number\", \"number\"]);\r\n    var _indoorsApi_ShowAllLabels = cwrap(\"indoorsApi_ShowAllLabels\", null, [\"number\"]);\r\n\r\n    var _onIndoorMapEntered = null;\r\n    var _onIndoorMapEnterFailed = null;\r\n    var _onIndoorMapExited = null;\r\n    var _onIndoorMapFloorChanged = null;\r\n    var _onIndoorMapEntryMarkerAdded = null;\r\n    var _onIndoorMapEntryMarkerRemoved = null;\r\n    var _onIndoorMapLoaded = null;\r\n    var _onIndoorMapUnloaded = null;\r\n\r\n    var _indoorMapEnteredHandler = () => {\r\n        if (_onIndoorMapEntered !== null) {\r\n            _onIndoorMapEntered();\r\n        }\r\n    };\r\n\r\n    var _indoorMapEntryFailedHandler = () => {\r\n        if (_onIndoorMapEnterFailed !== null) {\r\n            _onIndoorMapEnterFailed();\r\n        }\r\n    };\r\n\r\n    var _indoorMapExitedHandler = () => {\r\n        if (_onIndoorMapExited !== null) {\r\n            _onIndoorMapExited();\r\n        }\r\n    };\r\n\r\n    var _indoorMapFloorChangedHandler = () => {\r\n        if (_onIndoorMapFloorChanged !== null) {\r\n            _onIndoorMapFloorChanged();\r\n        }\r\n    };\r\n\r\n    var _executeEntryMarkerCallback = (callback, indoorMapIdPtr, indoorMapNamePtr, indoorMapLatLngPtr) => {\r\n        var indoorMapId = _emscriptenMemory.stringifyPointer(indoorMapIdPtr);\r\n        var indoorMapName = _emscriptenMemory.stringifyPointer(indoorMapNamePtr);\r\n        var latLngArray = _emscriptenMemory.readDoubles(indoorMapLatLngPtr, 3);\r\n        var markerLatLng = L.latLng(latLngArray);\r\n        callback(indoorMapId, indoorMapName, markerLatLng);\r\n    };\r\n\r\n    var _indoorMapEntryMarkerAddedHandler = (indoorMapIdPtr, indoorMapNamePtr, indoorMapLatLngPtr) => {\r\n        if (_onIndoorMapEntryMarkerAdded !== null) {\r\n            _executeEntryMarkerCallback(_onIndoorMapEntryMarkerAdded, indoorMapIdPtr, indoorMapNamePtr, indoorMapLatLngPtr);\r\n        }\r\n    };\r\n\r\n    var _indoorMapEntryMarkerRemovedHandler = (indoorMapIdPtr, indoorMapNamePtr, indoorMapLatLngPtr) => {\r\n        if (_onIndoorMapEntryMarkerRemoved !== null) {\r\n            _executeEntryMarkerCallback(_onIndoorMapEntryMarkerRemoved, indoorMapIdPtr, indoorMapNamePtr, indoorMapLatLngPtr);\r\n        }\r\n    };\r\n\r\n    var _indoorMapLoadedHandler = (indoorMapIdPtr) => {\r\n        if (_onIndoorMapLoaded !== null) {\r\n            var indoorMapId = _emscriptenMemory.stringifyPointer(indoorMapIdPtr);\r\n            _onIndoorMapLoaded(indoorMapId);\r\n        }\r\n    };\r\n\r\n    var _indoorMapUnloadedHandler = (indoorMapIdPtr) => {\r\n        if (_onIndoorMapUnloaded !== null) {\r\n            var indoorMapId = _emscriptenMemory.stringifyPointer(indoorMapIdPtr);\r\n            _onIndoorMapUnloaded(indoorMapId);\r\n        }\r\n    };\r\n\r\n    this.onInitialized = () => {\r\n        _indoorsApi_RegisterIndoorMapCallbacks(\r\n            _emscriptenApiPointer,\r\n            emscriptenModule.addFunction(_indoorMapEnteredHandler),\r\n            emscriptenModule.addFunction(_indoorMapEntryFailedHandler),\r\n            emscriptenModule.addFunction(_indoorMapExitedHandler),\r\n            emscriptenModule.addFunction(_indoorMapFloorChangedHandler),\r\n            emscriptenModule.addFunction(_indoorMapEntryMarkerAddedHandler),\r\n            emscriptenModule.addFunction(_indoorMapEntryMarkerRemovedHandler),\r\n            emscriptenModule.addFunction(_indoorMapLoadedHandler),\r\n            emscriptenModule.addFunction(_indoorMapUnloadedHandler)\r\n        );\r\n    };\r\n\r\n    this.setNotificationCallbacks = (\r\n        indoorMapEnteredCallback,\r\n        indoorMapEnterFailedCallback,\r\n        indoorMapExitedCallback,\r\n        indoorMapFloorChangedCallback,\r\n        indoorMapEntryMarkerAddedCallback,\r\n        indoorMapEntryMarkerRemovedCallback,\r\n        indoorMapLoadedCallback,\r\n        indoorMapUnloadedCallback\r\n    ) => {\r\n        _onIndoorMapEntered = indoorMapEnteredCallback;\r\n        _onIndoorMapEnterFailed = indoorMapEnterFailedCallback;\r\n        _onIndoorMapExited = indoorMapExitedCallback;\r\n        _onIndoorMapFloorChanged = indoorMapFloorChangedCallback;\r\n        _onIndoorMapEntryMarkerAdded = indoorMapEntryMarkerAddedCallback;\r\n        _onIndoorMapEntryMarkerRemoved = indoorMapEntryMarkerRemovedCallback;\r\n        _onIndoorMapLoaded = indoorMapLoadedCallback;\r\n        _onIndoorMapUnloaded = indoorMapUnloadedCallback;\r\n    };\r\n\r\n    this.enterIndoorMap = (indoorMapId) => {\r\n        return _indoorsApi_EnterIndoorMap(_emscriptenApiPointer, indoorMapId);\r\n    };\r\n\r\n    this.exitIndoorMap = () => {\r\n        _indoorsApi_ExitIndoorMap(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.hasActiveIndoorMap = () => {\r\n        return !!_indoorsApi_HasActiveIndoorMap(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.getActiveIndoorMapId = () => {\r\n        return _indoorsApi_GetActiveIndoorMapId(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.getActiveIndoorMapName = () => {\r\n        return _indoorsApi_GetActiveIndoorMapName(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.getActiveIndoorMapSourceVendor = () => {\r\n        return _indoorsApi_GetActiveIndoorMapSourceVendor(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.getActiveIndoorMapFloorCount = () => {\r\n        return _indoorsApi_GetActiveIndoorMapFloorCount(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.getActiveIndoorMapUserData = () => {\r\n        return _indoorsApi_GetActiveIndoorMapUserData(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.getSelectedFloorIndex = () => {\r\n        return _indoorsApi_GetSelectedFloorIndex(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.setSelectedFloorIndex = (floorIndex) => {\r\n        return !!_indoorsApi_SetSelectedFloorIndex(_emscriptenApiPointer, floorIndex);\r\n    };\r\n\r\n    this.getFloorName = (floorIndex) => {\r\n        return _indoorsApi_GetFloorName(_emscriptenApiPointer, floorIndex);\r\n    };\r\n\r\n    this.getFloorShortName = (floorIndex) => {\r\n        return _indoorsApi_GetFloorShortName(_emscriptenApiPointer, floorIndex);\r\n    };\r\n\r\n    this.getFloorNumber = (floorIndex) => {\r\n        return _indoorsApi_GetFloorNumber(_emscriptenApiPointer, floorIndex);\r\n    };\r\n\r\n    this.getFloorHeightAboveSeaLevel = (floorIndex) => {\r\n        return _indoorsApi_GetFloorHeightAboveSeaLevel(_emscriptenApiPointer, floorIndex);\r\n    };\r\n\r\n    this.tryGetReadableName = (indoorMapId) => {\r\n        var bufferSizeBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n        var success = _indoorsApi_TryGetReadableNameBufferSize(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            bufferSizeBuf.ptr\r\n        );\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var bufferSize = _emscriptenMemory.consumeBufferToArray(bufferSizeBuf)[0];\r\n        var stringBuffer = _emscriptenMemory.createInt8Buffer(bufferSize);\r\n\r\n        success = _indoorsApi_TryGetReadableName(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            stringBuffer.ptr,\r\n            bufferSize\r\n        );\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var indoorMapReadableName = _emscriptenMemory.consumeUtf8BufferToString(stringBuffer);\r\n        return indoorMapReadableName;\r\n    };\r\n\r\n    var _tryGetNativeIndoorMapFloorString = (indoorMapId, indoorMapFloorId, nativeGetBufferSizeFunc, nativeGetStringFunc) => {\r\n        var bufferSizeBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n        var success = nativeGetBufferSizeFunc(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            indoorMapFloorId,\r\n            bufferSizeBuf.ptr\r\n        );\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var bufferSize = _emscriptenMemory.consumeBufferToArray(bufferSizeBuf)[0];\r\n        var stringBuffer = _emscriptenMemory.createInt8Buffer(bufferSize);\r\n\r\n        success = nativeGetStringFunc(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            indoorMapFloorId,\r\n            stringBuffer.ptr,\r\n            bufferSize\r\n        );\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var stringValue = _emscriptenMemory.consumeUtf8BufferToString(stringBuffer);\r\n        return stringValue;\r\n    };\r\n\r\n    this.tryGetFloorReadableName = (indoorMapId, indoorMapFloorId) => {\r\n        return _tryGetNativeIndoorMapFloorString(\r\n            indoorMapId,\r\n            indoorMapFloorId,\r\n            _indoorsApi_TryGetFloorReadableNameBufferSize,\r\n            _indoorsApi_TryGetFloorReadableName\r\n        );\r\n    };\r\n\r\n    this.tryGetFloorShortName = (indoorMapId, indoorMapFloorId) => {\r\n        return _tryGetNativeIndoorMapFloorString(\r\n            indoorMapId,\r\n            indoorMapFloorId,\r\n            _indoorsApi_TryGetFloorShortNameBufferSize,\r\n            _indoorsApi_TryGetFloorShortName\r\n        );\r\n    };\r\n\r\n    this.setBackgroundColor = (color) => {\r\n        var colorRGBA32 = colorToRgba32(color);\r\n        _indoorsApi_SetBackgroundColor(_emscriptenApiPointer, colorRGBA32);\r\n    };\r\n\r\n    this.hideLabelsForEntities = (entityNames) => {\r\n        _emscriptenMemory.passStrings(entityNames, (resultStrings, stringArraySize) => {\r\n            _indoorsApi_HideLabelsForEntities(_emscriptenApiPointer, resultStrings, stringArraySize);\r\n        });\r\n    };\r\n\r\n    this.showLabelsForEntities = (entityNames) => {\r\n        _emscriptenMemory.passStrings(entityNames, (resultStrings, stringArraySize) => {\r\n            _indoorsApi_ShowLabelsForEntities(_emscriptenApiPointer, resultStrings, stringArraySize);\r\n        });\r\n    };\r\n\r\n    this.showAllLabels = () => {\r\n        _indoorsApi_ShowAllLabels(_emscriptenApiPointer);\r\n    };\r\n}\r\n\r\nexport default EmscriptenIndoorsApi;\r\n","export function EmscriptenPrecacheApi(emscriptenApiPointer, cwrap, emscriptenModule) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _beginPrecacheOperation = null;\r\n    var _cancelPrecacheOperation = null;\r\n    var _setPrecacheCallbacks = null;\r\n    var _cancelCallback = null;\r\n    var _completeCallback = null;\r\n\r\n    this.registerCallbacks = (completeCallback, cancelCallback) => {\r\n        if (_completeCallback !== null) {\r\n            emscriptenModule.removeFunction(_completeCallback);\r\n        }\r\n        _completeCallback = emscriptenModule.addFunction(completeCallback);\r\n        if (_cancelCallback !== null) {\r\n            emscriptenModule.removeFunction(_cancelCallback);\r\n        }\r\n        _cancelCallback = emscriptenModule.addFunction(cancelCallback);\r\n\r\n        _setPrecacheCallbacks = _setPrecacheCallbacks || cwrap(\"precacheApi_setPrecacheCallbacks\", null, [\"number\", \"number\", \"number\"]);\r\n        _setPrecacheCallbacks(_emscriptenApiPointer, _completeCallback, _cancelCallback);\r\n    };\r\n\r\n    this.beginPrecacheOperation = (operation) => {\r\n        _beginPrecacheOperation = _beginPrecacheOperation || cwrap(\"precacheApi_beginPrecacheOperation\", \"number\", [\"number\", \"number\", \"number\", \"number\"]);\r\n\r\n        var latlong = operation.getCentre();\r\n        return _beginPrecacheOperation(_emscriptenApiPointer, latlong.lat, latlong.lng, operation.getRadius());\r\n    };\r\n\r\n    this.cancelPrecacheOperation = (operationId) => {\r\n        _cancelPrecacheOperation = _cancelPrecacheOperation || cwrap(\"precacheApi_cancelPrecacheOperation\", null, [\"number\", \"number\"]);\r\n        _cancelPrecacheOperation(_emscriptenApiPointer, operationId);\r\n    };\r\n}\r\n\r\nexport default EmscriptenPrecacheApi;\r\n","import L from \"leaflet\";\r\nimport { Vector3 } from \"../../public/space\";\r\n\r\nexport function EmscriptenSpacesApi(eegeoApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _eegeoApiPointer = eegeoApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n    var _worldToScreenWrap = null;\r\n    var _screenToTerrainPointWrap = null;\r\n    var _screenToIndoorPointWrap = null;\r\n    var _getAltitudeAtLatLngWrap = null;\r\n    var _getUpdatedAltitudeAtLatLngWrap = null;\r\n    var _getMortonKeyAtLatLngWrap = null;\r\n    var _getMortonKeyCenterWrap = null;\r\n    var _getMortonKeyCornersWrap = null;\r\n\r\n    var _spacesApi_ScreenPointToRay = cwrap(\"spacesApi_ScreenPointToRay\", null, [\"number\", \"number\", \"number\", \"number\"]);\r\n    var _spacesApi_LatLongToVerticallyDownRay = cwrap(\"spacesApi_LatLongToVerticallyDownRay\", null, [\"number\", \"number\", \"number\", \"number\"]);\r\n\r\n    var _worldToScreen = (lat, long, alt) => {\r\n        _worldToScreenWrap = _worldToScreenWrap || cwrap(\"worldToScreen\", null, [\"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n        var screenPos = [0, 0, 0];\r\n        _emscriptenMemory.passDoubles(screenPos, function (resultArray, arraySize) {\r\n            _worldToScreenWrap(_eegeoApiPointer, lat, long, alt, resultArray);\r\n            screenPos = _emscriptenMemory.readDoubles(resultArray, 3);\r\n        });\r\n        return new Vector3(screenPos);\r\n    };\r\n\r\n    var _screenToLatLng = (screenX, screenY, raycastFunc) => {\r\n        var latLngAltArray = [0, 0, 0];\r\n        var foundWorldPoint = false;\r\n        _emscriptenMemory.passDoubles(latLngAltArray, function (resultArray, arraySize) {\r\n            var success = raycastFunc(_eegeoApiPointer, screenX, screenY, resultArray);\r\n            foundWorldPoint = !!success;\r\n            latLngAltArray = _emscriptenMemory.readDoubles(resultArray, 3);\r\n        });\r\n        return (foundWorldPoint) ? L.latLng(latLngAltArray) : null;\r\n    };\r\n\r\n    var _screenToTerrainPoint = (screenX, screenY) => {\r\n        _screenToTerrainPointWrap = _screenToTerrainPointWrap || cwrap(\"screenToTerrainPoint\", \"number\", [\"number\", \"number\", \"number\", \"number\"]);\r\n        return _screenToLatLng(screenX, screenY, _screenToTerrainPointWrap);\r\n    };\r\n\r\n    var _screenToIndoorPoint = (screenX, screenY) => {\r\n        _screenToIndoorPointWrap = _screenToIndoorPointWrap || cwrap(\"screenToIndoorPoint\", \"number\", [\"number\", \"number\", \"number\", \"number\"]);\r\n        return _screenToLatLng(screenX, screenY, _screenToIndoorPointWrap);\r\n    };\r\n\r\n    var _getAltitudeAtLatLng = (lat, long) => {\r\n        _getAltitudeAtLatLngWrap = _getAltitudeAtLatLngWrap || cwrap(\"getAltitudeAtLatLng\", \"number\", [\"number\", \"number\", \"number\"]);\r\n        return _getAltitudeAtLatLngWrap(_eegeoApiPointer, lat, long);\r\n    };\r\n\r\n    var _getUpdatedAltitudeAtLatLng = (lat, long, previousHeight, previousLevel) => {\r\n        _getUpdatedAltitudeAtLatLngWrap = _getUpdatedAltitudeAtLatLngWrap || cwrap(\"getUpdatedAltitudeAtLatLng\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n        var results = [0, 0];\r\n        var altitudeUpdated = false;\r\n        _emscriptenMemory.passDoubles(results, (resultArray, arraySize) => {\r\n            var success = _getUpdatedAltitudeAtLatLngWrap(_eegeoApiPointer, lat, long, previousHeight, previousLevel, resultArray);\r\n            altitudeUpdated = !!success;\r\n            if (altitudeUpdated) {\r\n                results = _emscriptenMemory.readDoubles(resultArray, 2);\r\n            }\r\n        });\r\n        return altitudeUpdated ? results : null;\r\n    };\r\n\r\n    var _getMortonKeyAtLatLng = (lat, long) => {\r\n        _getMortonKeyAtLatLngWrap = _getMortonKeyAtLatLngWrap || cwrap(\"getMortonKeyAtLatLng\", null, [\"number\", \"number\", \"number\"]);\r\n        var mortonKey = \"\";\r\n        _emscriptenMemory.passString(mortonKey, (resultString) => {\r\n            _getMortonKeyAtLatLngWrap(lat, long, resultString);\r\n            mortonKey = _emscriptenMemory.stringifyPointer(resultString);\r\n        });\r\n        return mortonKey;\r\n    };\r\n\r\n    var _getMortonKeyCenter = (mortonKey) => {\r\n        _getMortonKeyCenterWrap = _getMortonKeyCenterWrap || cwrap(\"getMortonKeyCenter\", null, [\"string\", \"number\"]);\r\n        var latLngCenterArray = [0, 0];\r\n        _emscriptenMemory.passDoubles(latLngCenterArray, (resultArray, arraySize) => {\r\n            _getMortonKeyCenterWrap(mortonKey, resultArray);\r\n            latLngCenterArray = _emscriptenMemory.readDoubles(resultArray, 2);\r\n        });\r\n        latLngCenterArray.forEach((value, index) => {\r\n            if (isNaN(value)) {\r\n                latLngCenterArray[index] = 0;\r\n            }\r\n        });\r\n        return L.latLng(latLngCenterArray);\r\n    };\r\n\r\n    var _getMortonKeyCorners = (mortonKey, insetMeters) => {\r\n        _getMortonKeyCornersWrap = _getMortonKeyCornersWrap || cwrap(\"getMortonKeyCorners\", null, [\"string\", \"number\", \"number\"]);\r\n        var latLngCornersArray = [0, 0, 0, 0, 0, 0, 0, 0];\r\n        _emscriptenMemory.passDoubles(latLngCornersArray, (resultArray, arraySize) => {\r\n            _getMortonKeyCornersWrap(mortonKey, insetMeters, resultArray);\r\n            latLngCornersArray = _emscriptenMemory.readDoubles(resultArray, 8);\r\n        });\r\n        latLngCornersArray.forEach((value, index) => {\r\n            if (isNaN(value)) {\r\n                latLngCornersArray[index] = 0;\r\n            }\r\n        });\r\n        return [\r\n            L.latLng(latLngCornersArray.slice(0, 2)),\r\n            L.latLng(latLngCornersArray.slice(2, 4)),\r\n            L.latLng(latLngCornersArray.slice(4, 6)),\r\n            L.latLng(latLngCornersArray.slice(6))\r\n        ];\r\n    };\r\n\r\n    this.worldToScreen = (position) => {\r\n        var point = L.latLng(position);\r\n        return _worldToScreen(point.lat, point.lng, point.alt || 0);\r\n    };\r\n\r\n    this.screenToTerrainPoint = (screenPoint) => {\r\n        var point = L.point(screenPoint);\r\n        return _screenToTerrainPoint(point.x, point.y);\r\n    };\r\n\r\n    this.screenToIndoorPoint = (screenPoint) => {\r\n        var point = L.point(screenPoint);\r\n        return _screenToIndoorPoint(point.x, point.y);\r\n    };\r\n\r\n    this.screenToWorldPoint = (screenPoint) => {\r\n        return this.screenToIndoorPoint(screenPoint) || this.screenToTerrainPoint(screenPoint);\r\n    };\r\n\r\n    this.getAltitudeAtLatLng = (latLng) => {\r\n        latLng = L.latLng(latLng);\r\n        return _getAltitudeAtLatLng(latLng.lat, latLng.lng);\r\n    };\r\n\r\n    this.getUpdatedAltitudeAtLatLng = (latLng, previousHeight, previousLevel) =>\r\n        _getUpdatedAltitudeAtLatLng(latLng.lat, latLng.lng, previousHeight, previousLevel);\r\n\r\n\r\n    this.screenPointToRay = (screenPoint) => {\r\n        var point = L.point(screenPoint);\r\n        var resultRayBuffer = _emscriptenMemory.createDoubleBuffer(6);\r\n        _spacesApi_ScreenPointToRay(_eegeoApiPointer, point.x, point.y, resultRayBuffer.ptr);\r\n        var resultArray = _emscriptenMemory.consumeBufferToArray(resultRayBuffer);\r\n        var rayOrigin = new Vector3(resultArray[0], resultArray[1], resultArray[2]);\r\n        var rayDirection = new Vector3(resultArray[3], resultArray[4], resultArray[5]);\r\n        return {\r\n            origin: rayOrigin,\r\n            direction: rayDirection\r\n        };\r\n    };\r\n\r\n    this.latLongToVerticallyDownRay = (latLng) => {\r\n        var resultRayBuffer = _emscriptenMemory.createDoubleBuffer(6);\r\n        _spacesApi_LatLongToVerticallyDownRay(_eegeoApiPointer, latLng.lat, latLng.lng, resultRayBuffer.ptr);\r\n        var resultArray = _emscriptenMemory.consumeBufferToArray(resultRayBuffer);\r\n        var rayOrigin = new Vector3(resultArray[0], resultArray[1], resultArray[2]);\r\n        var rayDirection = new Vector3(resultArray[3], resultArray[4], resultArray[5]);\r\n        return {\r\n            origin: rayOrigin,\r\n            direction: rayDirection\r\n        };\r\n    };\r\n\r\n    this.getMortonKeyAtLatLng = (latLng) => {\r\n        var _latLng = L.latLng(latLng);\r\n        return _getMortonKeyAtLatLng(_latLng.lat, _latLng.lng);\r\n    };\r\n\r\n    this.getMortonKeyCenter = (mortonKey) => _getMortonKeyCenter(mortonKey);\r\n\r\n    this.getMortonKeyCorners = (mortonKey, insetMeters) => _getMortonKeyCorners(mortonKey, insetMeters || 0.0);\r\n}\r\n\r\nexport default EmscriptenSpacesApi;\r\n","export function EmscriptenThemesApi(eegeoApiPointer, cwrap, emscriptenModule) {\r\n\r\n    var _eegeoApiPointer = eegeoApiPointer;\r\n    var _setTheme = null;\r\n    var _setState = null;\r\n    var _setThemeManifest = null;\r\n    var _setCallback = null;\r\n\r\n    this.setTheme = (themeName) => {\r\n        _setTheme = _setTheme || cwrap(\"setTheme\", null, [\"number\", \"string\"]);\r\n        _setTheme(_eegeoApiPointer, themeName);\r\n    };\r\n\r\n    this.setState = (stateName, transitionTime) => {\r\n        _setState = _setState || cwrap(\"setState\", null, [\"number\", \"string\", \"number\"]);\r\n        _setState(_eegeoApiPointer, stateName, transitionTime);\r\n    };\r\n\r\n    this.setThemeManifest = (themeManifest) => {\r\n        _setThemeManifest = _setThemeManifest || cwrap(\"setThemeManifest\", null, [\"number\", \"string\"]);\r\n        _setThemeManifest(_eegeoApiPointer, themeManifest);\r\n    };\r\n\r\n    this.registerStreamingCompletedCallback = (callback) => {\r\n        _setCallback = _setCallback || cwrap(\"setStreamingCompletedCallback\", null, [\"number\", \"number\"]);\r\n        _setCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n}\r\n\r\nexport default EmscriptenThemesApi;","import L from \"leaflet\";\r\n\r\nexport function EmscriptenCameraApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n    var _cameraApi_setViewUsingZenithAngle = cwrap(\"cameraApi_setViewUsingZenithAngle\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\" ]);\r\n    var _cameraApi_setViewToBounds = cwrap(\"cameraApi_setViewToBounds\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n    var _cameraApi_getDistanceToInterest = cwrap(\"cameraApi_getDistanceToInterest\", \"number\", [\"number\"]);\r\n    var _cameraApi_getInterestLatLong = cwrap(\"cameraApi_getInterestLatLong\", null, [\"number\", \"number\"]);\r\n    var _cameraApi_getPitchDegrees = cwrap(\"cameraApi_getPitchDegrees\", \"number\", [\"number\"]);\r\n    var _cameraApi_getHeadingDegrees = cwrap(\"cameraApi_getHeadingDegrees\", \"number\", [\"number\"]);\r\n    var _cameraApi_setEventCallback = cwrap(\"cameraApi_setEventCallback\", null, [\"number\", \"number\"]);\r\n    var _cameraApi_getDistanceFromZoomLevel = cwrap(\"cameraApi_getDistanceFromZoomLevel\", \"number\", [\"number\", \"number\"]);\r\n    var _cameraApi_getZoomLevel = cwrap(\"cameraApi_getZoomLevel\", \"number\", [\"number\"]);\r\n    var _cameraApi_setVerticallyLocked = cwrap(\"cameraApi_setVerticallyLocked\", null, [\"number\", \"number\"]);\r\n\r\n    var _setView = (animated, location, distance, headingDegrees, tiltDegrees, durationSeconds, jumpIfFarAway, allowInterruption) => {\r\n\r\n        var modifyLocation = true;\r\n        if (location === null) {\r\n            location = { lat: 0, lng: 0, alt: 0 };\r\n            modifyLocation = false;\r\n        }\r\n\r\n        return _cameraApi_setViewUsingZenithAngle(\r\n            _emscriptenApiPointer,\r\n            animated,\r\n            location.lat || 0, location.lng || 0, location.alt || 0, modifyLocation,\r\n            distance || 0, distance !== null,\r\n            headingDegrees || 0, headingDegrees !== null,\r\n            tiltDegrees || 0, tiltDegrees !== null,\r\n            durationSeconds || 0, durationSeconds !== null,\r\n            jumpIfFarAway,\r\n            allowInterruption\r\n        );\r\n    };\r\n\r\n    var _setViewToBounds = (northEast, southWest, animated, allowInterruption) => {\r\n        _cameraApi_setViewToBounds(\r\n            _emscriptenApiPointer,\r\n            northEast.lat, northEast.lng, northEast.alt || 0,\r\n            southWest.lat, southWest.lng, southWest.alt || 0,\r\n            animated,\r\n            allowInterruption\r\n        );\r\n    };\r\n\r\n    this.setView = (config) => {\r\n        var animated = \"animate\" in config ? config[\"animate\"] : true;\r\n        var location = \"location\" in config ? L.latLng(config[\"location\"]): null;\r\n        var distance = \"zoom\" in config ? this.getDistanceFromZoomLevel(config[\"zoom\"]) : \"distance\" in config ? config[\"distance\"] : null;\r\n        var headingDegrees = \"headingDegrees\" in config ? config[\"headingDegrees\"] : null;\r\n        var tiltDegrees = \"tiltDegrees\" in config ? config[\"tiltDegrees\"] : null;\r\n        var durationSeconds = \"durationSeconds\" in config ? config[\"durationSeconds\"] : null;\r\n        var alwaysAnimate = \"animate\" in config && config[\"animate\"] === true;\r\n        var jumpIfFarAway = !alwaysAnimate;\r\n        var allowInterruption = \"allowInterruption\" in config ? config[\"allowInterruption\"] : true;\r\n\r\n        return _setView(animated, location, distance, headingDegrees, tiltDegrees, durationSeconds, jumpIfFarAway, allowInterruption);\r\n    };\r\n\r\n    this.setViewToBounds = (config) => {\r\n        var bounds = L.latLngBounds(config[\"bounds\"]);\r\n        var animated = \"animate\" in config ? config[\"animate\"] : true;\r\n        var allowInterruption = \"allowInterruption\" in config ? config[\"allowInterruption\"] : true;\r\n\r\n        return _setViewToBounds(\r\n            bounds._northEast,\r\n            bounds._southWest,\r\n            animated,\r\n            allowInterruption\r\n        );\r\n    };\r\n\r\n    this.getDistanceToInterest = () => _cameraApi_getDistanceToInterest(_emscriptenApiPointer);\r\n\r\n    this.getInterestLatLong = () => {\r\n        var latLong = [0, 0];\r\n        _emscriptenMemory.passDoubles(latLong, (resultArray, arraySize) => {\r\n                _cameraApi_getInterestLatLong(_emscriptenApiPointer, resultArray);\r\n                latLong = _emscriptenMemory.readDoubles(resultArray, 2);\r\n            });\r\n\r\n        return latLong;\r\n    };\r\n\r\n    this.getPitchDegrees = () => _cameraApi_getPitchDegrees(_emscriptenApiPointer);\r\n\r\n    this.getHeadingDegrees = () => _cameraApi_getHeadingDegrees(_emscriptenApiPointer);\r\n\r\n    this.setEventCallback = (callback) => {\r\n        _cameraApi_setEventCallback(_emscriptenApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.getDistanceFromZoomLevel = (zoomLevel) => _cameraApi_getDistanceFromZoomLevel(_emscriptenApiPointer, zoomLevel);\r\n\r\n    this.getZoomLevel = () => _cameraApi_getZoomLevel(_emscriptenApiPointer);\r\n\r\n    this.setVerticallyLocked = (isVerticallyLocked) => {\r\n        _cameraApi_setVerticallyLocked(_emscriptenApiPointer, isVerticallyLocked);\r\n    };\r\n}\r\n\r\nexport default EmscriptenCameraApi;\r\n","export function EmscriptenExpandFloorsApi(eegeoApiPointer, cwrap, emscriptenModule) {\r\n\r\n    var _eegeoApiPointer = eegeoApiPointer;\r\n    \r\n    var _getFloorParam = null;\r\n    var _setFloorParam = null;\r\n    var _expandIndoorMap = null;\r\n    var _collapseIndoorMap = null;\r\n    var _setCollapseStartCallback = null;\r\n    var _setCollapseCallback = null;\r\n    var _setCollapseEndCallback = null;\r\n    var _setExpandStartCallback = null;\r\n    var _setExpandCallback = null;\r\n    var _setExpandEndCallback = null;\r\n\r\n    this.expandIndoorMap = () => {\r\n        _expandIndoorMap = _expandIndoorMap || cwrap(\"expandIndoorMap\", \"number\", [\"number\"]);\r\n        return _expandIndoorMap(_eegeoApiPointer);\r\n    };\r\n\r\n    this.collapseIndoorMap = () => {\r\n        _collapseIndoorMap = _collapseIndoorMap || cwrap(\"collapseIndoorMap\", null, [\"number\"]);\r\n        return _collapseIndoorMap(_eegeoApiPointer);\r\n    };\r\n\r\n    this.getFloorParam = () => {\r\n        _getFloorParam = _getFloorParam || cwrap(\"getFloorParam\", null, [\"number\"]);\r\n        return _getFloorParam(_eegeoApiPointer);\r\n    };\r\n\r\n    this.setFloorParam = (value) => {\r\n        _setFloorParam = _setFloorParam || cwrap(\"setFloorParam\", null, [\"number\", \"number\"]);\r\n        return _setFloorParam(_eegeoApiPointer, value);\r\n    };\r\n\r\n    this.setCollapseStartCallback = (callback) => {\r\n        _setCollapseStartCallback = _setCollapseStartCallback || cwrap(\"setCollapseStartCallback\", null, [\"number\", \"number\"]);\r\n        _setCollapseStartCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.setCollapseCallback = (callback) => {\r\n        _setCollapseCallback = _setCollapseCallback || cwrap(\"setCollapseCallback\", null, [\"number\", \"number\"]);\r\n        _setCollapseCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.setCollapseEndCallback = (callback) => {\r\n        _setCollapseEndCallback = _setCollapseEndCallback || cwrap(\"setCollapseEndCallback\", null, [\"number\", \"number\"]);\r\n        _setCollapseEndCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.setExpandStartCallback = (callback) => {\r\n        _setExpandStartCallback = _setExpandStartCallback || cwrap(\"setExpandStartCallback\", null, [\"number\", \"number\"]);\r\n        _setExpandStartCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.setExpandCallback = (callback) => {\r\n        _setExpandCallback = _setExpandCallback || cwrap(\"setExpandCallback\", null, [\"number\", \"number\"]);\r\n        _setExpandCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.setExpandEndCallback = (callback) => {\r\n        _setExpandEndCallback = _setExpandEndCallback || cwrap(\"setExpandEndCallback\", null, [\"number\", \"number\"]);\r\n        _setExpandEndCallback(_eegeoApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n}\r\n\r\nexport default EmscriptenExpandFloorsApi;\r\n","export function EmscriptenIndoorEntityApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n    var _indoorEntityApi_SetIndoorEntityPickedCallback = cwrap(\"indoorEntityApi_SetIndoorEntityPickedCallback\", null, [\"number\", \"number\"]);\r\n    var _indoorEntityApi_SetHighlightsWithBorderThickness = cwrap(\"indoorEntityApi_SetHighlightsWithBorderThickness\", null, [\"number\", \"string\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _indoorEntityApi_ClearHighlights = cwrap(\"indoorEntityApi_ClearHighlights\", null, [\"number\", \"string\", \"number\", \"number\"]);\r\n    var _indoorEntityApi_ClearAllHighlights = cwrap(\"indoorEntityApi_ClearAllHighlights\", null, [\"number\"]);\r\n    \r\n    var _indoorEntityPickedCallback = null;\r\n    \r\n\r\n    var _onIndoorEntityPicked = (idsPtr) => {\r\n        if (_indoorEntityPickedCallback !== null) {\r\n            var ids = _emscriptenMemory.stringifyPointer(idsPtr);\r\n            _indoorEntityPickedCallback(ids);\r\n        }\r\n    };\r\n\r\n    var _setHighlights = (ids, color, indoorMapId, borderThickness) => {\r\n        _emscriptenMemory.passStrings(ids, (resultStrings, stringArraySize) => {\r\n        _emscriptenMemory.passDoubles(color, (doubleArray, arraySize) => {\r\n                _indoorEntityApi_SetHighlightsWithBorderThickness(_emscriptenApiPointer, indoorMapId, resultStrings, stringArraySize, doubleArray, borderThickness);\r\n            });\r\n        });\r\n    };\r\n\r\n    var _clearHighlights = (ids, indoorMapId) => {\r\n        _emscriptenMemory.passStrings(ids, (resultStrings, stringArraySize) => {\r\n            _indoorEntityApi_ClearHighlights(_emscriptenApiPointer, indoorMapId, resultStrings, stringArraySize);\r\n        });\r\n    };\r\n\r\n    var _clearAllHighlights = () => {\r\n        _indoorEntityApi_ClearAllHighlights(_emscriptenApiPointer);\r\n    };\r\n\r\n\r\n    this.onInitialized = () => {\r\n        // register emscripten callbacks\r\n        _indoorEntityApi_SetIndoorEntityPickedCallback(_emscriptenApiPointer, emscriptenModule.addFunction(_onIndoorEntityPicked));\r\n    };\r\n\r\n    this.registerIndoorEntityPickedCallback = (callback) => {\r\n        _indoorEntityPickedCallback = callback;\r\n    };\r\n\r\n    this.setHighlights = (ids, color, indoorMapId, borderThickness) => {\r\n        if (indoorMapId === null || indoorMapId === undefined) {\r\n            return;\r\n        }\r\n\r\n        if (typeof ids === \"string\") {\r\n            ids = [ids];\r\n        }\r\n        _setHighlights(ids, color, indoorMapId, borderThickness);\r\n    };\r\n    \r\n    this.clearHighlights = (ids, indoorMapId) => {\r\n        if (ids === undefined) {\r\n            _clearAllHighlights();\r\n        }\r\n        else {\r\n            if (indoorMapId === null || indoorMapId === undefined) {\r\n                return;\r\n            }\r\n\r\n            if (typeof ids === \"string\") {\r\n                ids = [ids];\r\n            }\r\n            _clearHighlights(ids, indoorMapId);\r\n        }\r\n    };\r\n}\r\n\r\nexport default EmscriptenIndoorEntityApi;\r\n","import { factoryFor } from \"../../private/factoryFor\";\r\nimport { Vector4 } from \"../space\";\r\nimport type { BuildingHighlightOptions } from \"./building_highlight_options\";\r\nimport type { BuildingInformation } from \"./building_information\";\r\nimport type Map from \"../map\";\r\nimport { ColorArray } from \"../../types/color\";\r\n\r\nexport class BuildingHighlight {\r\n  private _options: BuildingHighlightOptions;\r\n  private _id: number | null;\r\n  private _map: Map | null;\r\n  private _color: Vector4;\r\n  private _buildingInformation: BuildingInformation | null;\r\n\r\n  constructor(options: BuildingHighlightOptions) {\r\n    this._options = options;\r\n    this._id = null;\r\n    this._map = null;\r\n    this._color = options.getColor();\r\n    this._buildingInformation = null;\r\n  }\r\n\r\n  getColor = (): Vector4 => new Vector4(this._color);\r\n\r\n  getOptions = (): BuildingHighlightOptions => this._options;\r\n\r\n  setColor = (color: ColorArray | Vector4): this => {\r\n    this._color = new Vector4(color as Vector4); // Both types work individually, not sure why the union is not accepted 🤷🏻‍♂️\r\n    if (this._map !== null) {\r\n      this._map.buildings._getImpl().notifyBuildingHighlightChanged(this);\r\n    }\r\n    return this;\r\n  };\r\n\r\n  getId = (): number | null => this._id;\r\n\r\n  addTo = (map: Map): this => {\r\n    if (this._map !== null) {\r\n      this.remove();\r\n    }\r\n    this._map = map;\r\n    this._map.buildings._getImpl().addBuildingHighlight(this);\r\n    return this;\r\n  };\r\n\r\n  remove = (): this => {\r\n    if (this._map !== null) {\r\n      this._map.buildings._getImpl().removeBuildingHighlight(this);\r\n      this._map = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  getBuildingInformation = (): BuildingInformation | null => this._buildingInformation;\r\n\r\n  /** @internal */\r\n  _setNativeHandle = (nativeId: number | null): void => {\r\n    this._id = nativeId;\r\n  };\r\n\r\n  /** @internal */\r\n  _setBuildingInformation = (buildingInformation: BuildingInformation): void => {\r\n    this._buildingInformation = buildingInformation;\r\n  };\r\n}\r\n\r\nexport const buildingHighlight = factoryFor(BuildingHighlight);\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../../private/factoryFor\";\r\nimport { ColorArray } from \"../../types/color\";\r\nimport { Vector4 } from \"../space\";\r\n\r\nexport enum BuildingHighlightSelectionType {\r\n  SELECT_AT_LOCATION = \"selectAtLocation\",\r\n  SELECT_AT_SCREEN_POINT = \"selectAtScreenPoint\",\r\n}\r\n\r\nexport class BuildingHighlightOptions {\r\n  private _selectionLocationLatLng: L.LatLng;\r\n  private _selectionScreenPoint: L.Point;\r\n  private _selectionMode: BuildingHighlightSelectionType;\r\n  private _color: ColorArray;\r\n  private _informationOnly: boolean;\r\n\r\n  constructor() {\r\n    this._selectionLocationLatLng = L.latLng([0.0, 0.0]);\r\n    this._selectionScreenPoint = L.point(0.0, 0.0);\r\n    this._selectionMode = BuildingHighlightSelectionType.SELECT_AT_LOCATION;\r\n    this._color = [255, 255, 0, 128];\r\n    this._informationOnly = false;\r\n  }\r\n\r\n  highlightBuildingAtLocation = (latLng: L.LatLng): this => {\r\n    this._selectionMode = BuildingHighlightSelectionType.SELECT_AT_LOCATION;\r\n    this._selectionLocationLatLng = L.latLng(latLng);\r\n    return this;\r\n  };\r\n\r\n  highlightBuildingAtScreenPoint = (screenPoint: L.Point): this => {\r\n    this._selectionMode = BuildingHighlightSelectionType.SELECT_AT_SCREEN_POINT;\r\n    this._selectionScreenPoint = L.point(screenPoint);\r\n    return this;\r\n  };\r\n\r\n  color = (color: ColorArray): this => {\r\n    this._color = color;\r\n    return this;\r\n  };\r\n\r\n  informationOnly = (): this => {\r\n    this._informationOnly = true;\r\n    return this;\r\n  };\r\n\r\n  getSelectionMode = (): BuildingHighlightSelectionType => {\r\n    return this._selectionMode;\r\n  };\r\n\r\n  getSelectionLocation = (): L.LatLng => {\r\n    return this._selectionLocationLatLng;\r\n  };\r\n\r\n  getSelectionScreenPoint = (): L.Point => {\r\n    return this._selectionScreenPoint;\r\n  };\r\n\r\n  getColor = (): Vector4 => {\r\n    return new Vector4(this._color);\r\n  };\r\n\r\n  getIsInformationOnly = (): boolean => {\r\n    return this._informationOnly;\r\n  };\r\n}\r\n\r\nexport const buildingHighlightOptions = factoryFor(BuildingHighlightOptions);\r\n","import type { BuildingContour } from \"./building_contour\";\r\nimport type { BuildingDimensions } from \"./building_dimensions\";\r\n\r\nexport class BuildingInformation {\r\n  private _buildingId: string;\r\n  private _buildingDimensions: BuildingDimensions;\r\n  private _buildingContours: BuildingContour[];\r\n\r\n  constructor(buildingId: string, buildingDimensions: BuildingDimensions, buildingContours: BuildingContour[]) {\r\n    this._buildingId = buildingId;\r\n    this._buildingDimensions = buildingDimensions;\r\n    this._buildingContours = buildingContours;\r\n  }\r\n\r\n  getBuildingId = (): string => this._buildingId;\r\n\r\n  getBuildingDimensions = (): BuildingDimensions => this._buildingDimensions;\r\n\r\n  getBuildingContours = (): BuildingContour[] => this._buildingContours;\r\n\r\n  toJson = (): {\r\n    building_id: string;\r\n    building_dimensions: ReturnType<BuildingDimensions[\"toJson\"]>;\r\n    building_contours: ReturnType<BuildingContour[\"toJson\"]>[];\r\n  } => ({\r\n    building_id: this._buildingId,\r\n    building_dimensions: this._buildingDimensions.toJson(),\r\n    building_contours: this._buildingContours.map((_x) => _x.toJson()),\r\n  });\r\n}\r\n","export class BuildingDimensions {\r\n  private _baseAltitude: number;\r\n  private _topAltitude: number;\r\n  private _centroid: L.LatLng;\r\n\r\n  constructor(baseAltitude: number, topAltitude: number, centroid: L.LatLng) {\r\n    this._baseAltitude = baseAltitude;\r\n    this._topAltitude = topAltitude;\r\n    this._centroid = centroid;\r\n  }\r\n\r\n  getBaseAltitude = (): number => this._baseAltitude;\r\n\r\n  getTopAltitude = (): number => this._topAltitude;\r\n\r\n  getCentroid = (): L.LatLng => this._centroid;\r\n\r\n  toJson = (): { base_altitude: number; top_altitude: number; centroid: L.LatLng } => ({\r\n    base_altitude: this._baseAltitude,\r\n    top_altitude: this._topAltitude,\r\n    centroid: this._centroid,\r\n  });\r\n}\r\n","export class BuildingContour {\r\n  private _bottomAltitude: number;\r\n  private _topAltitude: number;\r\n  private _points: L.LatLng[];\r\n\r\n  constructor(bottomAltitude: number, topAltitude: number, points: L.LatLng[]) {\r\n    this._bottomAltitude = bottomAltitude;\r\n    this._topAltitude = topAltitude;\r\n    this._points = points;\r\n  }\r\n\r\n  getBottomAltitude = (): number => this._bottomAltitude;\r\n\r\n  getTopAltitude = (): number => this._topAltitude;\r\n\r\n  getPoints = (): L.LatLng[] => this._points;\r\n\r\n  toJson = (): { bottom_altitude: number; top_altitude: number; points: L.LatLng[] } => ({\r\n    bottom_altitude: this._bottomAltitude,\r\n    top_altitude: this._topAltitude,\r\n    points: this._points,\r\n  });\r\n}\r\n","import { factoryFor } from \"../../private/factoryFor\";\r\nimport type Map from \"../map\";\r\nimport { MapId } from \"../map\";\r\nimport type { IndoorMapEntity } from \"./indoor_map_entity\";\r\n\r\nenum IndoorMapEntityInformationLoadStateType {\r\n  NONE = \"None\",\r\n  PARTIAL = \"Partial\",\r\n  COMPLETE = \"Complete\",\r\n}\r\n\r\nexport class IndoorMapEntityInformation {\r\n  private _nativeId: number | null;\r\n  private _map: Map | null;\r\n  private _indoorMapId: MapId;\r\n  private _indoorMapEntities: IndoorMapEntity[];\r\n  private _loadState: IndoorMapEntityInformationLoadStateType;\r\n\r\n  constructor(indoorMapId: MapId) {\r\n    this._nativeId = null;\r\n    this._map = null;\r\n    this._indoorMapId = indoorMapId;\r\n    this._indoorMapEntities = [];\r\n    this._loadState = IndoorMapEntityInformationLoadStateType.NONE;\r\n  }\r\n\r\n  getIndoorMapId = (): string => this._indoorMapId;\r\n\r\n  getIndoorMapEntities = (): IndoorMapEntity[] => this._indoorMapEntities;\r\n\r\n  getLoadState = (): IndoorMapEntityInformationLoadStateType => this._loadState;\r\n\r\n  /**\r\n   * Returns the auto-incrementing unique id of this IndoorMapEntityInformation object.\r\n   */\r\n  getId = (): number | null => this._nativeId;\r\n\r\n  /**\r\n   * Returns the auto-incrementing unique id of this IndoorMapEntityInformation object.\r\n   * @deprecated use {@link IndoorMapEntityInformation.getId}\r\n   * @returns {number}\r\n   */\r\n  getNativeId = (): number | null => this._nativeId;\r\n\r\n  addTo = (map: Map): this => {\r\n    if (this._map !== null) {\r\n      this.remove();\r\n    }\r\n    this._map = map;\r\n    this._map.indoorMapEntities._getImpl().addIndoorMapEntityInformation(this);\r\n    return this;\r\n  };\r\n\r\n  remove = (): this => {\r\n    if (this._map !== null) {\r\n      this._map.indoorMapEntities._getImpl().removeIndoorMapEntityInformation(this);\r\n      this._map = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /** @internal */\r\n  _setNativeHandle = (nativeId: number): void => {\r\n    this._nativeId = nativeId;\r\n  };\r\n\r\n  /** @internal */\r\n  _setData = (data: { IndoorMapEntities: IndoorMapEntity[]; LoadState: 0 | 1 | 2 }): void => {\r\n    this._indoorMapEntities = data.IndoorMapEntities;\r\n\r\n    switch (data.LoadState) {\r\n      case 0:\r\n        this._loadState = IndoorMapEntityInformationLoadStateType.NONE;\r\n        break;\r\n      case 1:\r\n        this._loadState = IndoorMapEntityInformationLoadStateType.PARTIAL;\r\n        break;\r\n      case 2:\r\n        this._loadState = IndoorMapEntityInformationLoadStateType.COMPLETE;\r\n        break;\r\n    }\r\n  };\r\n}\r\n\r\nexport const indoorMapEntityInformation = factoryFor(IndoorMapEntityInformation);\r\n","import L from \"leaflet\";\r\nimport { BuildingHighlightSelectionType, BuildingDimensions, BuildingContour, BuildingInformation } from \"../../public/buildings\";\r\n\r\nexport function EmscriptenBuildingsApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n    var _buildingsApi_SetBuildingHighlightChangedCallback = cwrap(\"buildingsApi_SetBuildingHighlightChangedCallback\", null, [\"number\", \"number\"]);\r\n    var _buildingsApi_CreateHighlightAtLocation = cwrap(\"buildingsApi_CreateHighlightAtLocation\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _buildingsApi_CreateHighlightAtScreenPoint = cwrap(\"buildingsApi_CreateHighlightAtScreenPoint\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _buildingsApi_DestroyHighlight = cwrap(\"buildingsApi_DestroyHighlight\", null, [\"number\", \"number\"]);\r\n    var _buildingsApi_SetHighlightColor = cwrap(\"buildingsApi_SetHighlightColor\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _buildingsApi_TryGetBuildingInformationBufferSizes = cwrap(\"buildingsApi_TryGetBuildingInformationBufferSizes\", \"number\", [\"number\", \"number\", \"number\", \"number\"]);\r\n    var _buildingsApi_TryGetBuildingInformation = cwrap(\"buildingsApi_TryGetBuildingInformation\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _buildingsApi_TryFindIntersectionWithBuilding = cwrap(\"buildingsApi_TryFindIntersectionWithBuilding\", \"number\", [\"number\", \"number\", \"number\"]);\r\n\r\n    this.registerBuildingInformationReceivedCallback = (callback) => {\r\n        _buildingsApi_SetBuildingHighlightChangedCallback(_emscriptenApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.createBuildingHighlight = (buildingHighlight) => {\r\n        var buildingHighlightId = 0;\r\n        var options = buildingHighlight.getOptions();\r\n        var color = buildingHighlight.getColor();\r\n\r\n        var shouldCreateView = options.getIsInformationOnly() ? 0 : 1;\r\n\r\n        if (options.getSelectionMode() === BuildingHighlightSelectionType.SELECT_AT_LOCATION) {\r\n            var latLng = options.getSelectionLocation();\r\n            buildingHighlightId = _buildingsApi_CreateHighlightAtLocation(\r\n                _emscriptenApiPointer,\r\n                latLng.lat,\r\n                latLng.lng,\r\n                color.x / 255,\r\n                color.y / 255,\r\n                color.z / 255,\r\n                color.w / 255,\r\n                shouldCreateView\r\n            );\r\n        }\r\n        else {\r\n            var point = options.getSelectionScreenPoint();\r\n            buildingHighlightId = _buildingsApi_CreateHighlightAtScreenPoint(\r\n                _emscriptenApiPointer,\r\n                point.x,\r\n                point.y,\r\n                color.x / 255,\r\n                color.y / 255,\r\n                color.z / 255,\r\n                color.w / 255,\r\n                shouldCreateView\r\n            );\r\n        }\r\n\r\n        return buildingHighlightId;\r\n    };\r\n\r\n\r\n    this.destroyBuildingHighlight = (buildingHighlightId) => {\r\n        _buildingsApi_DestroyHighlight(_emscriptenApiPointer, buildingHighlightId);\r\n    };\r\n\r\n    this.setHighlightColor = (buildingHighlightId, color) => {\r\n        _buildingsApi_SetHighlightColor(_emscriptenApiPointer, buildingHighlightId, color.x / 255, color.y / 255, color.z / 255, color.w / 255);\r\n    };\r\n\r\n    this.tryGetBuildingInformation = (buildingHighlightId) => {\r\n        var buildingIdSizeBuf = _emscriptenMemory.createInt32Buffer(1);\r\n        var contourPointsSizeBuf = _emscriptenMemory.createInt32Buffer(1);\r\n        var buildingContoursSizeBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n        var success = _buildingsApi_TryGetBuildingInformationBufferSizes(_emscriptenApiPointer, buildingHighlightId, buildingIdSizeBuf.ptr, contourPointsSizeBuf.ptr, buildingContoursSizeBuf.ptr);\r\n\r\n        var buildingIdSize = _emscriptenMemory.consumeBufferToArray(buildingIdSizeBuf)[0];\r\n        var contourPointsSize = _emscriptenMemory.consumeBufferToArray(contourPointsSizeBuf)[0];\r\n        var buildingContoursSize = _emscriptenMemory.consumeBufferToArray(buildingContoursSizeBuf)[0];\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var buildingIdBuf = _emscriptenMemory.createInt8Buffer(buildingIdSize);\r\n        var baseAltitudeBuf = _emscriptenMemory.createDoubleBuffer(1);\r\n        var topAltitudeBuf = _emscriptenMemory.createDoubleBuffer(1);\r\n        var centroidBuf = _emscriptenMemory.createBufferFromArray([0.0, 0.0], _emscriptenMemory.createDoubleBuffer);\r\n\r\n        // building contours fetched as struct of arrays\r\n        var contourPointsLatLngDoublesBuf = _emscriptenMemory.createDoubleBuffer(contourPointsSize * 2);\r\n        var contourPointCountsBuf = _emscriptenMemory.createInt32Buffer(buildingContoursSize);\r\n        var contourBottomAltitudeBuf = _emscriptenMemory.createDoubleBuffer(buildingContoursSize);\r\n        var contourTopAltitudeBuf = _emscriptenMemory.createDoubleBuffer(buildingContoursSize);\r\n\r\n\r\n        success = _buildingsApi_TryGetBuildingInformation(\r\n            _emscriptenApiPointer,\r\n            buildingHighlightId,\r\n            buildingIdBuf.ptr,\r\n            buildingIdSize,\r\n            baseAltitudeBuf.ptr,\r\n            topAltitudeBuf.ptr,\r\n            centroidBuf.ptr,\r\n            contourPointsLatLngDoublesBuf.ptr,\r\n            contourPointsLatLngDoublesBuf.element_count,\r\n            contourPointCountsBuf.ptr,\r\n            contourPointCountsBuf.element_count,\r\n            contourBottomAltitudeBuf.ptr,\r\n            contourBottomAltitudeBuf.element_count,\r\n            contourTopAltitudeBuf.ptr,\r\n            contourTopAltitudeBuf.element_count\r\n        );\r\n\r\n        var buildingId = _emscriptenMemory.consumeUtf8BufferToString(buildingIdBuf);\r\n        var baseAltitude = _emscriptenMemory.consumeBufferToArray(baseAltitudeBuf);\r\n        var topAltitude = _emscriptenMemory.consumeBufferToArray(topAltitudeBuf);\r\n        var centroid = L.latLng(_emscriptenMemory.consumeBufferToArray(centroidBuf));\r\n\r\n        var buildingDimensions = new BuildingDimensions(baseAltitude, topAltitude, centroid);\r\n\r\n        var contourPointsLatLngDoubles = _emscriptenMemory.consumeBufferToArray(contourPointsLatLngDoublesBuf);\r\n        var contourPointCounts = _emscriptenMemory.consumeBufferToArray(contourPointCountsBuf);\r\n        var contourBottomAltitudes = _emscriptenMemory.consumeBufferToArray(contourBottomAltitudeBuf);\r\n        var contourTopAltitudes = _emscriptenMemory.consumeBufferToArray(contourTopAltitudeBuf);\r\n\r\n        var buildingContours = [];\r\n        var pointBufferIndex = 0;\r\n        for (var contourIndex = 0; contourIndex < contourPointCountsBuf.element_count; ++contourIndex) {\r\n            var pointCount = contourPointCounts[contourIndex];\r\n            var points = [];\r\n            for (var i = 0; i < pointCount; ++i) {\r\n                var lat = contourPointsLatLngDoubles[pointBufferIndex++];\r\n                var lng = contourPointsLatLngDoubles[pointBufferIndex++];\r\n                points.push(L.latLng(lat, lng));\r\n            }\r\n            var contour = new BuildingContour(\r\n                contourBottomAltitudes[contourIndex],\r\n                contourTopAltitudes[contourIndex],\r\n                points);\r\n            buildingContours.push(contour);\r\n        }\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        return new BuildingInformation(buildingId, buildingDimensions, buildingContours);\r\n    };\r\n\r\n    this.findIntersectionWithBuilding = (ray) => {\r\n        var rayElements = [ray.origin.x, ray.origin.y, ray.origin.z, ray.direction.x, ray.direction.y, ray.direction.z];\r\n\r\n        var rayBuffer = _emscriptenMemory.createBufferFromArray(rayElements, _emscriptenMemory.createDoubleBuffer);\r\n\r\n        var intersectionLatLngAltBuffer = _emscriptenMemory.createDoubleBuffer(3);\r\n\r\n        var didIntersect = _buildingsApi_TryFindIntersectionWithBuilding(_emscriptenApiPointer, rayBuffer.ptr, intersectionLatLngAltBuffer.ptr);\r\n\r\n        _emscriptenMemory.freeBuffer(rayBuffer);\r\n\r\n        var resultArray = _emscriptenMemory.consumeBufferToArray(intersectionLatLngAltBuffer);\r\n\r\n        return {\r\n            found: didIntersect,\r\n            point: L.latLng(resultArray)\r\n        };\r\n    };\r\n}\r\n\r\nexport default EmscriptenBuildingsApi;\r\n","import { Vector3 } from \"../../public/space\";\r\nimport { colorToRgba32 } from \"./emscripten_interop_utils.js\";\r\n\r\nexport function EmscriptenRenderingApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _renderingApi_SetMapCollapsed = cwrap(\"renderingApi_SetMapCollapsed\", null, [\"number\", \"number\"]);\r\n    var _renderingApi_SetClearColor = cwrap(\"renderingApi_SetClearColor\", null, [\"number\", \"number\"]);\r\n    var _renderingApi_GetCameraRelativePosition = cwrap(\"renderingApi_GetCameraRelativePosition\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _renderingApi_GetCameraProjectionMatrix = cwrap(\"renderingApi_GetCameraProjectionMatrix\", null, [\"number\", \"number\", \"number\"]);\r\n    var _renderingApi_GetCameraOrientationMatrix = cwrap(\"renderingApi_GetCameraOrientationMatrix\", null, [\"number\", \"number\", \"number\"]);\r\n    var _renderingApi_GetLightingData = cwrap(\"renderingApi_GetLightingData\", null, [\"number\", \"number\", \"number\"]);\r\n    var _renderingApi_GetNorthFacingOrientationMatrix = cwrap(\"renderingApi_GetNorthFacingOrientationMatrix\", null, [\"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n\r\n    this.setMapCollapsed = (isMapCollapsed) => {\r\n        _renderingApi_SetMapCollapsed(_emscriptenApiPointer, isMapCollapsed ? 1 : 0);\r\n    };\r\n\r\n    this.setClearColor = (clearColor) => {\r\n        var clearColorRGBA32 = colorToRgba32(clearColor);\r\n        _renderingApi_SetClearColor(_emscriptenApiPointer, clearColorRGBA32);\r\n    };\r\n\r\n    this.getCameraRelativePosition = (latLng) => {\r\n        var renderPosition = new Array(3);\r\n        _emscriptenMemory.passDoubles(renderPosition, (resultArray, arraySize) => {\r\n            _renderingApi_GetCameraRelativePosition(_emscriptenApiPointer, latLng.lat, latLng.lng, latLng.alt || 0.0, arraySize, resultArray);\r\n            renderPosition = _emscriptenMemory.readDoubles(resultArray, arraySize);\r\n        });\r\n        return new Vector3(renderPosition);\r\n    };\r\n\r\n    this.getNorthFacingOrientationMatrix = (latLng) => {\r\n        var orientation = new Array(16);\r\n        _emscriptenMemory.passDoubles(orientation, (resultArray, arraySize) => {\r\n            _renderingApi_GetNorthFacingOrientationMatrix(_emscriptenApiPointer, latLng.lat, latLng.lng, arraySize, resultArray);\r\n            orientation = _emscriptenMemory.readDoubles(resultArray, arraySize);\r\n        });\r\n        return orientation;\r\n    };\r\n\r\n    this.getCameraProjectionMatrix = () => {\r\n        var projection = new Array(16);\r\n        _emscriptenMemory.passDoubles(projection, (resultArray, arraySize) => {\r\n            _renderingApi_GetCameraProjectionMatrix(_emscriptenApiPointer, arraySize, resultArray);\r\n            projection = _emscriptenMemory.readDoubles(resultArray, arraySize);\r\n        });\r\n        return projection;\r\n    };\r\n\r\n    this.getCameraOrientationMatrix = () => {\r\n        var orientation = new Array(16);\r\n        _emscriptenMemory.passDoubles(orientation, (resultArray, arraySize) => {\r\n            _renderingApi_GetCameraOrientationMatrix(_emscriptenApiPointer, arraySize, resultArray);\r\n            orientation = _emscriptenMemory.readDoubles(resultArray, arraySize);\r\n        });\r\n        return orientation;\r\n    };\r\n\r\n    this.getLightingData = () => {\r\n        var lightingData = new Array(21);\r\n        _emscriptenMemory.passDoubles(lightingData, (resultArray, arraySize) => {\r\n            _renderingApi_GetLightingData(_emscriptenApiPointer, arraySize, resultArray);\r\n            lightingData = _emscriptenMemory.readDoubles(resultArray, arraySize);\r\n        });\r\n\r\n        var lighting = {\r\n            key: {\r\n                direction: new Vector3(lightingData[0], lightingData[1], lightingData[2]),\r\n                color: new Vector3(lightingData[9], lightingData[10], lightingData[11])\r\n            },\r\n            back: {\r\n                direction: new Vector3(lightingData[3], lightingData[4], lightingData[5]),\r\n                color: new Vector3(lightingData[12], lightingData[13], lightingData[14])\r\n            },\r\n            fill: {\r\n                direction: new Vector3(lightingData[6], lightingData[7], lightingData[8]),\r\n                color: new Vector3(lightingData[15], lightingData[16], lightingData[17])\r\n            },\r\n            ambient: {\r\n                color: new Vector3(lightingData[18], lightingData[19], lightingData[20])\r\n            }\r\n        };\r\n        return lighting;\r\n    };\r\n}\r\n\r\nexport default EmscriptenRenderingApi;\r\n","import L from \"leaflet\";\r\nexport function EmscriptenLayerPointMappingApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n    \r\n    var _createPointMapping = null;\r\n    var _createPointMappingWithFloorIndex = null;\r\n    var _removePointMapping = null;\r\n    var _getPointsOnMapForLayer = null;\r\n\r\n    this._createLatLngsNumberArray = function(latLngs) {\r\n        var latLngsNumberArray = new Array(latLngs.length * 2);\r\n\r\n        for(var i = 0; i < latLngs.length; i++) {\r\n            var latLng = latLngs[i];\r\n\r\n            var destBaseIndex = i * 2;\r\n            latLngsNumberArray[destBaseIndex] = latLng.lat;\r\n            latLngsNumberArray[destBaseIndex + 1] = latLng.lng;\r\n        }\r\n\r\n        return latLngsNumberArray;\r\n    };\r\n\r\n    this.createPointMapping = (layerId, elevation, elevationModeInt, indoorMapId, indoorMapFloorId, latLngs) => {\r\n        _createPointMapping = _createPointMapping || cwrap(\"createLayerMapping\", null, [\"number\", \"number\", \"number\", \"number\", \"string\", \"number\", \"number\", \"number\", \"number\"]);\r\n              \r\n        var latLngsNumberArray = this._createLatLngsNumberArray(latLngs);\r\n        \r\n        _emscriptenMemory.passDoubles(latLngsNumberArray, (resultArray, arraySize) => {\r\n            _createPointMapping(\r\n                _emscriptenApiPointer, layerId, elevation, elevationModeInt, indoorMapId, indoorMapId.length, indoorMapFloorId, resultArray, arraySize);\r\n        });\r\n    };\r\n\r\n    this.createPointMappingWithFloorIndex = (layerId, elevation, elevationModeInt, indoorMapId, indoorMapFloorIndex, latLngs) => {\r\n        _createPointMappingWithFloorIndex = _createPointMappingWithFloorIndex || \r\n            cwrap(\"createLayerMappingWithFloorIndex\", null, [\"number\", \"number\", \"number\", \"number\", \"string\", \"number\", \"number\", \"number\", \"number\"]);\r\n              \r\n        var latLngsNumberArray = this._createLatLngsNumberArray(latLngs);\r\n        \r\n        _emscriptenMemory.passDoubles(latLngsNumberArray, (resultArray, arraySize) => {\r\n            _createPointMappingWithFloorIndex(\r\n                _emscriptenApiPointer, layerId, elevation, elevationModeInt, indoorMapId, indoorMapId.length, indoorMapFloorIndex, resultArray, arraySize);\r\n        });        \r\n    };\r\n\r\n    this.removePointMapping = (layerId) => {\r\n        _removePointMapping = _removePointMapping || cwrap(\"removeLayerMapping\", null, [\"number\", \"number\"]);\r\n\r\n        _removePointMapping(_emscriptenApiPointer, layerId);\r\n    };\r\n\r\n    this.getLatLngsForLayer = (layerId, latLngCount) => {\r\n        _getPointsOnMapForLayer = _getPointsOnMapForLayer || cwrap(\"getPointsOnMapForLayer\", \"number\", [\"number\", \"number\", \"number\"]);\r\n        var resultLatLngAltDoubles = new Array(latLngCount * 3);\r\n\r\n        _emscriptenMemory.passDoubles(resultLatLngAltDoubles, (resultArray, arraySize) => {\r\n            var expectedArrayLength = _getPointsOnMapForLayer(_emscriptenApiPointer, layerId, resultArray);\r\n\r\n            if (resultLatLngAltDoubles.length !== expectedArrayLength) {\r\n                throw new Error(\"_getPointsOnMapForLayer : unexpected array length. Expected '\" + expectedArrayLength + \"' but was '\" + resultLatLngAltDoubles.length + \"'.\");\r\n            }\r\n\r\n            resultLatLngAltDoubles = _emscriptenMemory.readDoubles(resultArray, expectedArrayLength);\r\n        });\r\n\r\n        var resultLatLngAlts = new Array(latLngCount);\r\n        var resultIndex = 0;\r\n\r\n        for(var i = 0; i < resultLatLngAltDoubles.length; i += 3) {\r\n            var lat = resultLatLngAltDoubles[i];\r\n            var lng = resultLatLngAltDoubles[i + 1];\r\n            var alt = resultLatLngAltDoubles[i + 2];\r\n            \r\n            resultLatLngAlts[resultIndex++] = L.latLng(lat, lng, alt);\r\n        }\r\n\r\n        return resultLatLngAlts;\r\n    };\r\n}\r\n\r\nexport default EmscriptenLayerPointMappingApi;\r\n","import { factoryFor } from \"../private/factoryFor\";\r\nimport elevationMode, { ElevationMode } from \"../types/elevationMode\";\r\nimport type { MapId, MapFloorId } from \"./map\";\r\n\r\nexport class IndoorMapEntitySetProp {\r\n  private _indoorMapId: MapId;\r\n  private _floorId: MapFloorId;\r\n  private _name: string;\r\n  private _geometryId: string;\r\n  private _location: L.LatLng;\r\n  private _elevation: number;\r\n  private _elevationMode: elevationMode;\r\n  private _headingDegrees: number;\r\n\r\n  constructor(\r\n    indoorMapId: MapId,\r\n    floorId: MapFloorId,\r\n    name: string,\r\n    geometryId: string,\r\n    location: L.LatLng,\r\n    elevation: number,\r\n    elevationMode: ElevationMode,\r\n    headingDegrees: number\r\n  ) {\r\n    this._indoorMapId = indoorMapId;\r\n    this._floorId = floorId;\r\n    this._name = name;\r\n    this._geometryId = geometryId;\r\n    this._location = location;\r\n    this._elevation = elevation;\r\n    this._elevationMode = elevationMode;\r\n    this._headingDegrees = headingDegrees;\r\n  }\r\n\r\n  getIndoorMapId(): MapId {\r\n    return this._indoorMapId;\r\n  }\r\n\r\n  getIndoorMapFloorId(): MapFloorId {\r\n    return this._floorId;\r\n  }\r\n\r\n  getName(): string {\r\n    return this._name;\r\n  }\r\n\r\n  getGeometryId(): string {\r\n    return this._geometryId;\r\n  }\r\n\r\n  getLocation(): L.LatLng {\r\n    return this._location;\r\n  }\r\n\r\n  getElevation(): number {\r\n    return this._elevation;\r\n  }\r\n\r\n  getElevationMode(): elevationMode {\r\n    return this._elevationMode;\r\n  }\r\n\r\n  getHeadingDegrees(): number {\r\n    return this._headingDegrees;\r\n  }\r\n}\r\n\r\nexport const indoorMapEntitySetProp = factoryFor(IndoorMapEntitySetProp);\r\n","import L from \"leaflet\";\r\nimport { getElevationModeInt, ElevationModeType } from \"../elevation_mode\";\r\nimport { IndoorMapEntitySetProp } from \"../../public/entity_set_prop\";\r\n\r\nexport function EmscriptenPropsApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _propsApi_createProp = null;\r\n    var _propsApi_createProps = null;\r\n    var _propsApi_destroyProp = null;\r\n    var _propsApi_destroyProps = null;\r\n    var _propsApi_propExists = null;\r\n    var _propsApi_setLocation = null;\r\n    var _propsApi_setElevation = null;\r\n    var _propsApi_setElevationMode = null;\r\n    var _propsApi_setGeometryId = null;\r\n    var _propsApi_setHeadingDegrees = null;\r\n    var _propsApi_setAutomaticIndoorMapPopulationEnabled = null;\r\n    var _propsApi_isAutomaticIndoorMapPopulationEnabled = null;\r\n    var _propsApi_getIndoorMapPropCount = null;\r\n    var _propsApi_tryGetIndoorMapPropDataBufferSizes = null;\r\n    var _propsApi_tryGetIndoorMapPropData = null;\r\n    var _propsApi_setIndoorMapPopulationServiceUrl = null;\r\n    var _propsApi_setIndoorMapEntitySetPropsLoadedCallback = null;\r\n    var _propsApi_setIndoorMapPopulationRequestCompletedCallback = null;\r\n\r\n    var _indoorMapEntitySetPropsLoadedCallback = null;\r\n\r\n    this.onInitialized = () => {\r\n        this.registerIndoorMapEntitySetPropsLoadedHandler(indoorMapEntitySetPropsLoadedHandler);\r\n    };\r\n\r\n    this.createProp = (indoorMapId, floorId, name, latitude, longitude, elevation, elevationModeString, headingDegrees, geometryId) => {\r\n        _propsApi_createProp = _propsApi_createProp || cwrap(\"propsApi_createProp\", \"number\", [\"number\", \"string\", \"number\", \"string\", \"number\", \"number\", \"number\", \"number\", \"number\", \"string\"]);\r\n        var elevationModeInt = getElevationModeInt(elevationModeString);\r\n        var propId = _propsApi_createProp(_emscriptenApiPointer, indoorMapId, floorId, name, latitude, longitude, elevation, elevationModeInt, headingDegrees, geometryId);\r\n        return propId;\r\n    };\r\n\r\n    this.createProps = (indoorMapIdArray, floorIdArray, nameArray, latitudeArray, longitudeArray, elevationArray, elevationModeArray, headingDegreesArray, geometryIdArray) => {\r\n        var propCount = indoorMapIdArray.length;\r\n\r\n        if (floorIdArray.length !== propCount ||\r\n            nameArray.length !== propCount ||\r\n            latitudeArray.length !== propCount ||\r\n            longitudeArray.length !== propCount ||\r\n            elevationArray.length !== propCount ||\r\n            elevationModeArray.length !== propCount ||\r\n            headingDegreesArray.length !== propCount ||\r\n            geometryIdArray.length !== propCount) {\r\n            throw new Error(\"Unequal array element counts in call to createProps.\");\r\n        }\r\n\r\n        _propsApi_createProps = _propsApi_createProps || cwrap(\"propsApi_createProps\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n        var out_propIdsBuffer = _emscriptenMemory.createInt32Buffer(propCount);\r\n\r\n        var elevationModeIntArray = [];\r\n        elevationModeArray.forEach(function (elevationModeString) { elevationModeIntArray.push(getElevationModeInt(elevationModeString)); });\r\n\r\n        var floorIdBuffer = _emscriptenMemory.createBufferFromArray(floorIdArray, _emscriptenMemory.createInt32Buffer);\r\n        var latitudeBuffer = _emscriptenMemory.createBufferFromArray(latitudeArray, _emscriptenMemory.createDoubleBuffer);\r\n        var longitudeBuffer = _emscriptenMemory.createBufferFromArray(longitudeArray, _emscriptenMemory.createDoubleBuffer);\r\n        var elevationBuffer = _emscriptenMemory.createBufferFromArray(elevationArray, _emscriptenMemory.createDoubleBuffer);\r\n        var elevationModeBuffer = _emscriptenMemory.createBufferFromArray(elevationModeIntArray, _emscriptenMemory.createInt32Buffer);\r\n        var headingDegreesBuffer = _emscriptenMemory.createBufferFromArray(headingDegreesArray, _emscriptenMemory.createDoubleBuffer);\r\n\r\n        _emscriptenMemory.passStrings(indoorMapIdArray, (indoorMapIdArrayPtr, indoorMapIdArraySize) => {\r\n            _emscriptenMemory.passStrings(nameArray, (nameArrayPtr, nameArraySize) => {\r\n                _emscriptenMemory.passStrings(geometryIdArray, (geometryIdArrayPtr, geometryIdArraySize) => {\r\n                    _propsApi_createProps(\r\n                        _emscriptenApiPointer,\r\n                        propCount,\r\n                        indoorMapIdArrayPtr,\r\n                        floorIdBuffer.ptr,\r\n                        nameArrayPtr,\r\n                        latitudeBuffer.ptr,\r\n                        longitudeBuffer.ptr,\r\n                        elevationBuffer.ptr,\r\n                        elevationModeBuffer.ptr,\r\n                        headingDegreesBuffer.ptr,\r\n                        geometryIdArrayPtr,\r\n                        out_propIdsBuffer.ptr\r\n                    );\r\n                });\r\n            });\r\n        });\r\n\r\n        _emscriptenMemory.freeBuffer(headingDegreesBuffer);\r\n        _emscriptenMemory.freeBuffer(elevationModeBuffer);\r\n        _emscriptenMemory.freeBuffer(elevationBuffer);\r\n        _emscriptenMemory.freeBuffer(latitudeBuffer);\r\n        _emscriptenMemory.freeBuffer(longitudeBuffer);\r\n        _emscriptenMemory.freeBuffer(floorIdBuffer);\r\n\r\n        return _emscriptenMemory.consumeBufferToArray(out_propIdsBuffer);\r\n    };\r\n\r\n    this.destroyProp = (propId) => {\r\n        _propsApi_destroyProp = _propsApi_destroyProp || cwrap(\"propsApi_destroyProp\", null, [\"number\", \"number\"]);\r\n        _propsApi_destroyProp(_emscriptenApiPointer, propId);\r\n    };\r\n\r\n    this.destroyProps = (propIdArray) => {\r\n        _propsApi_destroyProps = _propsApi_destroyProps || cwrap(\"propsApi_destroyProps\", null, [\"number\", \"number\", \"number\"]);\r\n\r\n        _emscriptenMemory.passInt32s(propIdArray, (propIdArrayPtr, propIdArraySize) => {\r\n            _propsApi_destroyProps(_emscriptenApiPointer, propIdArrayPtr, propIdArraySize);\r\n        });\r\n    };\r\n\r\n    this.propExists = (propId) => {\r\n        _propsApi_propExists = _propsApi_propExists || cwrap(\"propsApi_propExists\", \"number\", [\"number\", \"number\"]);\r\n        return _propsApi_propExists(_emscriptenApiPointer, propId);\r\n    };\r\n\r\n    this.setLocation = (propId, latitudeDegrees, longitudeDegrees) => {\r\n        _propsApi_setLocation = _propsApi_setLocation || cwrap(\"propsApi_setLocation\", null, [\"number\", \"number\", \"number\", \"number\"]);\r\n        _propsApi_setLocation(_emscriptenApiPointer, propId, latitudeDegrees, longitudeDegrees);\r\n    };\r\n\r\n    this.setElevation = (propId, elevation) => {\r\n        _propsApi_setElevation = _propsApi_setElevation || cwrap(\"propsApi_setElevation\", null, [\"number\", \"number\", \"number\"]);\r\n        _propsApi_setElevation(_emscriptenApiPointer, propId, elevation);\r\n    };\r\n\r\n    this.setElevationMode = (propId, elevationModeString) => {\r\n        _propsApi_setElevationMode = _propsApi_setElevationMode || cwrap(\"propsApi_setElevationMode\", null, [\"number\", \"number\", \"number\"]);\r\n        var elevationModeInt = getElevationModeInt(elevationModeString);\r\n        _propsApi_setElevationMode(_emscriptenApiPointer, propId, elevationModeInt);\r\n    };\r\n\r\n    this.setGeometryId = (propId, geometryId) => {\r\n        _propsApi_setGeometryId = _propsApi_setGeometryId || cwrap(\"propsApi_setGeometryId\", null, [\"number\", \"number\", \"string\"]);\r\n        _propsApi_setGeometryId(_emscriptenApiPointer, propId, geometryId);\r\n    };\r\n\r\n    this.setHeadingDegrees = (propId, headingDegrees) => {\r\n        _propsApi_setHeadingDegrees = _propsApi_setHeadingDegrees || cwrap(\"propsApi_setHeadingDegrees\", null, [\"number\", \"number\", \"number\", \"number\"]);\r\n        _propsApi_setHeadingDegrees(_emscriptenApiPointer, propId, headingDegrees);\r\n    };\r\n\r\n    this.setAutomaticIndoorMapPopulationEnabled = (enabled) => {\r\n        _propsApi_setAutomaticIndoorMapPopulationEnabled = _propsApi_setAutomaticIndoorMapPopulationEnabled || cwrap(\"propsApi_setAutomaticIndoorMapPopulationEnabled\", null, [\"number\", \"number\"]);\r\n        _propsApi_setAutomaticIndoorMapPopulationEnabled(_emscriptenApiPointer, enabled);\r\n    };\r\n\r\n    this.isAutomaticIndoorMapPopulationEnabled = () => {\r\n        _propsApi_isAutomaticIndoorMapPopulationEnabled = _propsApi_isAutomaticIndoorMapPopulationEnabled || cwrap(\"propsApi_isAutomaticIndoorMapPopulationEnabled\", \"number\", [\"number\"]);\r\n        return _propsApi_isAutomaticIndoorMapPopulationEnabled(_emscriptenApiPointer);\r\n    };\r\n\r\n    this.tryGetIndoorMapEntitySetProps = (indoorMapId, floorId) => {\r\n        _propsApi_getIndoorMapPropCount = _propsApi_getIndoorMapPropCount || cwrap(\"propsApi_getIndoorMapPropCount\", \"number\", [\"number\", \"string\", \"number\"]);\r\n        var propCount = _propsApi_getIndoorMapPropCount(_emscriptenApiPointer, indoorMapId, floorId);\r\n\r\n        var indoorMapPerPropNameSizesBuf = _emscriptenMemory.createInt32Buffer(propCount);\r\n        var indoorMapPerPropModelSizesBuf = _emscriptenMemory.createInt32Buffer(propCount);\r\n        var indoorMapPropBufferSizesBuf = _emscriptenMemory.createInt32Buffer(2);\r\n\r\n        _propsApi_tryGetIndoorMapPropDataBufferSizes = _propsApi_tryGetIndoorMapPropDataBufferSizes || cwrap(\"propsApi_tryGetIndoorMapPropDataBufferSizes\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n        var success = _propsApi_tryGetIndoorMapPropDataBufferSizes(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            floorId,\r\n            propCount,\r\n            indoorMapPerPropNameSizesBuf.ptr,\r\n            indoorMapPerPropModelSizesBuf.ptr,\r\n            indoorMapPropBufferSizesBuf.ptr);\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var indoorMapPerPropNameSizes = _emscriptenMemory.consumeBufferToArray(indoorMapPerPropNameSizesBuf);\r\n        var indoorMapPerPropModelSizes = _emscriptenMemory.consumeBufferToArray(indoorMapPerPropModelSizesBuf);\r\n        var indoorMapPropBufferSizes = _emscriptenMemory.consumeBufferToArray(indoorMapPropBufferSizesBuf);\r\n\r\n        var indoorMapPropNameTotalSize = indoorMapPropBufferSizes[0];\r\n        var indoorMapPropModelTotalSize = indoorMapPropBufferSizes[1];\r\n\r\n        var indoorMapPropStringNamesBuf = _emscriptenMemory.createInt8Buffer(indoorMapPropNameTotalSize);\r\n        var indoorMapPropStringModelsBuf = _emscriptenMemory.createInt8Buffer(indoorMapPropModelTotalSize);\r\n        var indoorMapPropLatLngBuf = _emscriptenMemory.createDoubleBuffer(propCount * 2);\r\n        var indoorMapPropHeightBuf = _emscriptenMemory.createDoubleBuffer(propCount);\r\n        var indoorMapPropOrientationBuf = _emscriptenMemory.createDoubleBuffer(propCount);\r\n\r\n        _propsApi_tryGetIndoorMapPropData = _propsApi_tryGetIndoorMapPropData || cwrap(\"propsApi_tryGetIndoorMapPropData\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n        success = _propsApi_tryGetIndoorMapPropData(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            floorId,\r\n            propCount,\r\n            indoorMapPropStringNamesBuf.ptr,\r\n            indoorMapPropStringModelsBuf.ptr,\r\n            indoorMapPropLatLngBuf.ptr,\r\n            indoorMapPropHeightBuf.ptr,\r\n            indoorMapPropOrientationBuf.ptr\r\n        );\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var indoorMapPropStringNames = _emscriptenMemory.consumeUtf8BufferToString(indoorMapPropStringNamesBuf);\r\n        var indoorMapPropStringModels = _emscriptenMemory.consumeUtf8BufferToString(indoorMapPropStringModelsBuf);\r\n        var indoorMapPropLatLngs = _emscriptenMemory.consumeBufferToArray(indoorMapPropLatLngBuf);\r\n        var indoorMapPropHeights = _emscriptenMemory.consumeBufferToArray(indoorMapPropHeightBuf);\r\n        var indoorMapPropOrientation = _emscriptenMemory.consumeBufferToArray(indoorMapPropOrientationBuf);\r\n\r\n        var indoorMapEntityPropList = [];\r\n\r\n        var nameBufferHead = 0;\r\n        var modelBufferHead = 0;\r\n        for (var i = 0; i < propCount; i++) {\r\n            var numCharsInName = indoorMapPerPropNameSizes[i];\r\n            var nameBufferEnd = nameBufferHead + numCharsInName;\r\n            var name = indoorMapPropStringNames.slice(nameBufferHead, nameBufferEnd);\r\n            nameBufferHead = nameBufferEnd;\r\n\r\n            var numCharsInModel = indoorMapPerPropModelSizes[i];\r\n            var modelBufferEnd = modelBufferHead + numCharsInModel;\r\n            var model = indoorMapPropStringModels.slice(modelBufferHead, modelBufferEnd);\r\n            modelBufferHead = modelBufferEnd;\r\n\r\n            var posLat = indoorMapPropLatLngs[2 * i];\r\n            var posLng = indoorMapPropLatLngs[2 * i + 1];\r\n            var position = L.latLng(posLat, posLng);\r\n\r\n            var height = indoorMapPropHeights[i];\r\n            var orientation = indoorMapPropOrientation[i];\r\n\r\n            var prop = new IndoorMapEntitySetProp(indoorMapId, floorId, name, model, position, height, ElevationModeType.HEIGHT_ABOVE_GROUND, orientation);\r\n            indoorMapEntityPropList.push(prop);\r\n        }\r\n\r\n        return indoorMapEntityPropList;\r\n    };\r\n\r\n    this.setIndoorMapPopulationServiceUrl = (serviceUrl) => {\r\n        _propsApi_setIndoorMapPopulationServiceUrl = _propsApi_setIndoorMapPopulationServiceUrl || cwrap(\"propsApi_setIndoorMapPopulationServiceUrl\", null, [\"number\", \"string\"]);\r\n        _propsApi_setIndoorMapPopulationServiceUrl(_emscriptenApiPointer, serviceUrl);\r\n    };\r\n\r\n    var indoorMapEntitySetPropsLoadedHandler = (indoorMapIdPtr, floorId) => {\r\n        if (_indoorMapEntitySetPropsLoadedCallback !== null) {\r\n            var indoorMapId = _emscriptenMemory.stringifyPointer(indoorMapIdPtr);\r\n            _indoorMapEntitySetPropsLoadedCallback(indoorMapId, floorId);\r\n        }\r\n    };\r\n\r\n    this.setIndoorMapEntitySetPropsLoadedCallback = (callback) => {\r\n        _indoorMapEntitySetPropsLoadedCallback = callback;\r\n    };\r\n\r\n    this.registerIndoorMapEntitySetPropsLoadedHandler = (callback) => {\r\n        _propsApi_setIndoorMapEntitySetPropsLoadedCallback = _propsApi_setIndoorMapEntitySetPropsLoadedCallback || cwrap(\"propsApi_setIndoorMapEntitySetPropsLoadedCallback\", null, [\"number\", \"number\"]);\r\n        _propsApi_setIndoorMapEntitySetPropsLoadedCallback(_emscriptenApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.setIndoorMapPopulationRequestCompletedCallback = (callback) => {\r\n        _propsApi_setIndoorMapPopulationRequestCompletedCallback = _propsApi_setIndoorMapPopulationRequestCompletedCallback || cwrap(\"propsApi_setIndoorMapPopulationRequestCompletedCallback\", null, [\"number\", \"number\", \"number\"]);\r\n        _propsApi_setIndoorMapPopulationRequestCompletedCallback(_emscriptenApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n}\r\n\r\nexport default EmscriptenPropsApi;\r\n","import { MapFloorId } from \"../map\";\r\nexport class IndoorMapEntity {\r\n  private _indoorMapEntityId: string;\r\n  private _indoorMapFloorId: number;\r\n  private _position: L.LatLng;\r\n  private _outline: L.LatLngTuple[][];\r\n\r\n  constructor(indoorMapEntityId: string, indoorMapFloorId: number, position: L.LatLng, outline: L.LatLngTuple[][]) {\r\n    this._indoorMapEntityId = indoorMapEntityId;\r\n    this._indoorMapFloorId = indoorMapFloorId;\r\n    this._position = position;\r\n    this._outline = outline;\r\n  }\r\n\r\n  getIndoorMapEntityId(): string {\r\n    return this._indoorMapEntityId;\r\n  }\r\n\r\n  getIndoorMapFloorId(): MapFloorId {\r\n    return this._indoorMapFloorId;\r\n  }\r\n\r\n  getPosition(): L.LatLng {\r\n    return this._position;\r\n  }\r\n\r\n  getOutline(): L.LatLngTuple[][] {\r\n    return this._outline;\r\n  }\r\n}\r\n","import L from \"leaflet\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport type Color from \"../types/color\";\r\nimport type ElevationMode from \"../types/elevationMode\";\r\nimport type { Map, MapFloorId, MapId } from \"./map\";\r\n\r\nconst RESOLUTION_PIXELS_MIN = 64.0;\r\nconst RESOLUTION_PIXELS_MAX = 2048;\r\n\r\nexport enum HeatmapOcclusionMapFeature {\r\n  GROUND = \"ground\",\r\n  BUILDINGS = \"buildings\",\r\n  TREES = \"trees\",\r\n  TRANSPORT = \"transport\",\r\n}\r\n\r\nexport type OcclusionMapFeature = \"ground\" | \"buildings\" | \"trees\" | \"transport\";\r\n\r\nexport type WeightedPoint = {\r\n  latLng?: L.LatLngExpression;\r\n  weight?: number;\r\n};\r\n\r\nexport type CustomPoint = {\r\n  [property: string]: L.LatLngExpression | number;\r\n};\r\n\r\nexport type PointData = [number, number] | [number, number, number] | WeightedPoint | CustomPoint;\r\n\r\nexport type DensityStop = {\r\n  stop: number;\r\n  radius: number;\r\n  gain: number;\r\n};\r\n\r\nexport type DensityStopArray = [number, number, number];\r\n\r\nexport type ColorStop = {\r\n  stop: number;\r\n  color: Color;\r\n};\r\n\r\nexport type ColorStopArray = [number, Color];\r\n\r\nexport type HeatmapOptions = {\r\n  densityStops?: DensityStop[];\r\n  densityBlend?: number;\r\n  interpolateDensityByZoom?: boolean;\r\n  zoomMin?: number;\r\n  zoomMax?: number;\r\n  weightMin?: number;\r\n  weightMax?: number;\r\n  colorGradient?: ColorStopArray | ColorStop[] | ColorStopArray[];\r\n  opacity?: number;\r\n  resolutionPixels?: number;\r\n  intensityBias?: number;\r\n  intensityScale?: number;\r\n  indoorMapId?: MapId;\r\n  indoorMapFloorId?: MapFloorId;\r\n  elevation?: number;\r\n  elevationMode?: ElevationMode;\r\n  occludedMapFeatures?: OcclusionMapFeature[];\r\n  occludedAlpha?: number;\r\n  occludedSaturation?: number;\r\n  occludedBrightness?: number;\r\n  polygonPoints?: L.LatLngTuple[];\r\n  dataCoordProperty?: string;\r\n  dataWeightProperty?: string;\r\n  textureBorderPercent?: number;\r\n  useApproximation?: boolean;\r\n};\r\n\r\ndeclare class HeatmapType extends L.Layer {\r\n  options: Required<HeatmapOptions>;\r\n  protected _map: Map;\r\n  protected _pointData: WeightedPoint[];\r\n  protected _changedFlags: {\r\n    data: boolean;\r\n    indoorMap: boolean;\r\n    elevation: boolean;\r\n    densityBlend: boolean;\r\n    interpolateDensityByZoom: boolean;\r\n    intensityBias: boolean;\r\n    intensityScale: boolean;\r\n    opacity: boolean;\r\n    colorGradient: boolean;\r\n    resolution: boolean;\r\n    densityStops: boolean;\r\n    useApproximation: boolean;\r\n    polygon: boolean;\r\n  };\r\n  constructor(pointData: PointData[], options?: HeatmapOptions);\r\n  getData(): WeightedPoint[];\r\n  getDensityStops(): DensityStop[];\r\n  getDensityBlend(): number;\r\n  getInterpolateDensityByZoom(): boolean;\r\n  getZoomMin(): number;\r\n  getZoomMax(): number;\r\n  getWeightMin(): number;\r\n  getWeightMax(): number;\r\n  getColorGradient(): ColorStop[];\r\n  getOpacity(): number;\r\n  getResolutionPixels(): number;\r\n  getIntensityBias(): number;\r\n  getIntensityScale(): number;\r\n  getIndoorMapId(): MapId;\r\n  getIndoorMapFloorId(): MapFloorId;\r\n  getElevation(): number;\r\n  getElevationMode(): ElevationMode;\r\n  getOccludedMapFeatures(): OcclusionMapFeature[];\r\n  getOccludedAlpha(): number;\r\n  getOccludedSaturation(): number;\r\n  getOccludedBrightness(): number;\r\n  getPolygonPoints(): L.LatLngTuple;\r\n  getTextureBorderPercent(): number;\r\n  getUseApproximation(): boolean;\r\n\r\n  setData(pointData: PointData[]): this;\r\n  setOptions(options: HeatmapOptions): this;\r\n  setDensityStops(densityStops: DensityStop[]): this;\r\n  setDensityBlend(densityBlend: number): this;\r\n  setInterpolateDensityByZoom(interpolateDensityByZoom: boolean): this;\r\n  setZoomMin(zoomMin: number): this;\r\n  setZoomMax(zoomMax: number): this;\r\n  setWeightMin(weightMin: number): this;\r\n  setWeightMax(weightMax: number): this;\r\n  setColorGradient(colorGradient: ColorStopArray | ColorStop[] | ColorStopArray[]): this;\r\n  setOpacity(opacity: number): this;\r\n  setResolution(resolutionPixels: number): this;\r\n  setIntensityBias(intensityBias: number): this;\r\n  setIntensityScale(intensityScale: number): this;\r\n  setIndoorMapWithFloorId(indoorMapId: MapId, indoorMapFloorId: MapFloorId): this;\r\n  setElevation(elevation: number): this;\r\n  setElevationMode(mode: ElevationMode): this;\r\n  setPolygonPoints(polygonPoints: L.LatLngTuple[] | L.LatLngTuple[][]): this;\r\n  setUseApproximation(useApproximation: boolean): this;\r\n\r\n  protected _getArrayDepth(array: unknown[] | unknown): number;\r\n  protected _loadLatLngAlts(coords: L.LatLngExpression[]): L.LatLngTuple[];\r\n  protected _loadPolygonRings(coordsArray: L.LatLngTuple[] | L.LatLngTuple[][]): L.LatLngTuple[];\r\n  protected _loadDensityParams(densityParams: DensityStop | DensityStopArray): DensityStop;\r\n  protected _loadDensityStops(\r\n    densityStopsArray: (DensityStop | DensityStopArray) | (DensityStop | DensityStopArray)[]\r\n  ): DensityStop[];\r\n  protected _loadPointData(pointData: PointData[]): WeightedPoint[];\r\n  protected _loadColorGradient(colorGradient: ColorStopArray | ColorStop[] | ColorStopArray[]): ColorStop[];\r\n  protected _loadColorStop(colorStop: ColorStop | ColorStopArray): ColorStop;\r\n}\r\n\r\nexport type Heatmap = HeatmapType;\r\n\r\nexport const Heatmap: typeof HeatmapType = (L.Layer ? L.Layer : L.Class).extend({\r\n  options: {\r\n    dataCoordProperty: \"latLng\",\r\n    dataWeightProperty: \"weight\",\r\n    elevation: 0.0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n    indoorMapId: \"\",\r\n    indoorMapFloorId: 0,\r\n    polygonPoints: [],\r\n\r\n    weightMin: 0.0,\r\n    weightMax: 1.0,\r\n    resolutionPixels: 512.0,\r\n    textureBorderPercent: 0.05,\r\n    useApproximation: true,\r\n\r\n    densityStops: [\r\n      { stop: 0.0, radius: 5.0, gain: 1.0 },\r\n      { stop: 1.0, radius: 15.0, gain: 1.0 },\r\n    ],\r\n    densityBlend: 0.0,\r\n    interpolateDensityByZoom: false,\r\n    zoomMin: 15.0,\r\n    zoomMax: 18.0,\r\n\r\n    // Default gradient suitable for sequential data, with transparency near zero, similar to\r\n    // http://colorbrewer2.org/#type=sequential&scheme=YlOrRd&n=5\r\n    colorGradient: [\r\n      { stop: 0.0, color: \"#ffffff00\" },\r\n      { stop: 0.2, color: \"#ffffb2ff\" },\r\n      { stop: 0.4, color: \"#fecc5cff\" },\r\n      { stop: 0.6, color: \"#fd8d3cff\" },\r\n      { stop: 0.8, color: \"#f03b20ff\" },\r\n      { stop: 1.0, color: \"#bd0026ff\" },\r\n    ],\r\n    opacity: 1.0,\r\n    intensityBias: 0.0,\r\n    intensityScale: 1.0,\r\n    occludedMapFeatures: [HeatmapOcclusionMapFeature.BUILDINGS, HeatmapOcclusionMapFeature.TREES],\r\n    occludedAlpha: 0.85,\r\n    occludedSaturation: 0.7,\r\n    occludedBrightness: 0.7,\r\n  } as HeatmapOptions,\r\n\r\n  _loadPointData: function (this: Heatmap, pointData: PointData[]) {\r\n    const weightedCoords: WeightedPoint[] = [];\r\n    const dataCoordProperty = this.options.dataCoordProperty;\r\n    const dataWeightProperty = this.options.dataWeightProperty;\r\n    pointData.forEach((pointDatum) => {\r\n      let weight = 1.0;\r\n      let latLng: L.LatLng;\r\n      if (dataCoordProperty in pointDatum) {\r\n        const _pointDatum = pointDatum as CustomPoint;\r\n        latLng = L.latLng(_pointDatum[dataCoordProperty] as L.LatLngExpression);\r\n\r\n        if (dataWeightProperty in pointDatum) {\r\n          weight = _pointDatum[dataWeightProperty] as number;\r\n        }\r\n      } else if (Array.isArray(pointDatum)) {\r\n        latLng = L.latLng(pointDatum[0], pointDatum[1]);\r\n        if (pointDatum.length > 2) {\r\n          weight = pointDatum[2] as number;\r\n        }\r\n      } else {\r\n        throw new Error(\"Expected {latLng, weight} or [<lat>, lng, weight] when parsing pointData.\");\r\n      }\r\n\r\n      weightedCoords.push({\r\n        latLng: latLng,\r\n        weight: weight,\r\n      });\r\n    });\r\n    return weightedCoords;\r\n  },\r\n\r\n  _getArrayDepth: function (this: Heatmap, array: unknown[]) {\r\n    let arrayDepth = 0;\r\n    let testElement: unknown[] | unknown = array;\r\n    do {\r\n      testElement = (testElement as unknown[])[0];\r\n      arrayDepth++;\r\n    } while (Array.isArray(testElement));\r\n    return arrayDepth;\r\n  },\r\n\r\n  _loadLatLngAlts: function (this: Heatmap, coords: L.LatLngExpression[]) {\r\n    return coords.map(L.latLng);\r\n  },\r\n\r\n  _loadPolygonRings: function (this: Heatmap, coordsArray: L.LatLngTuple[] | L.LatLngTuple[][]) {\r\n    let polygonRings: L.LatLngTuple[][] = [];\r\n    const arrayDepth = this._getArrayDepth(coordsArray);\r\n\r\n    if (arrayDepth === 2) {\r\n      coordsArray = coordsArray as L.LatLngTuple[];\r\n      polygonRings.push(this._loadLatLngAlts(coordsArray));\r\n    } else if (arrayDepth === 3) {\r\n      coordsArray = coordsArray as L.LatLngTuple[][];\r\n      coordsArray.forEach((holeCoords) => {\r\n        polygonRings.push(this._loadLatLngAlts(holeCoords));\r\n      }, this);\r\n    } else if (coordsArray.length === 0) {\r\n      polygonRings = [];\r\n    } else {\r\n      throw new Error(\"Incorrect array depth for heatmap options.polygonPoints.\");\r\n    }\r\n    return polygonRings;\r\n  },\r\n\r\n  _loadDensityParams: function (this: Heatmap, densityParams: DensityStop | DensityStopArray) {\r\n    let stop = 0.0;\r\n    let radius = 0.0;\r\n    let gain = 0.0;\r\n\r\n    if (Array.isArray(densityParams)) {\r\n      if (densityParams.length < 2) {\r\n        throw new Error(\"Expected array [<stop>, <radius>, <(optional) gain>] when parsing options.densityStops\");\r\n      }\r\n      stop = densityParams[0];\r\n      radius = densityParams[1];\r\n      gain = densityParams.length > 2 ? densityParams[2] : 1.0;\r\n    } else {\r\n      if (densityParams.stop === undefined || densityParams.radius === undefined) {\r\n        throw new Error(\r\n          \"Expected object {stop:<stop>, radius:<radius>, (optional) gain:<gain>} when parsing options.densityStops\"\r\n        );\r\n      }\r\n\r\n      stop = densityParams.stop;\r\n      radius = densityParams.radius;\r\n      gain = densityParams.gain || 1.0;\r\n    }\r\n\r\n    if (isNaN(stop)) {\r\n      throw new Error(\"Expected Number for heatmap density stop parameter: \" + String(stop));\r\n    }\r\n    if (isNaN(radius)) {\r\n      throw new Error(\"Expected Number for heatmap radius parameter: \" + String(radius));\r\n    }\r\n    if (isNaN(gain)) {\r\n      throw new Error(\"Expected Number for heatmap gain parameter: \" + String(gain));\r\n    }\r\n\r\n    return {\r\n      stop: stop,\r\n      radius: radius,\r\n      gain: gain,\r\n    };\r\n  },\r\n\r\n  _loadDensityStops: function (\r\n    this: Heatmap,\r\n    densityStopsArray: DensityStop | DensityStopArray | DensityStop[] | DensityStopArray[]\r\n  ): DensityStop[] {\r\n    const densityStops: DensityStop[] = [];\r\n    const arrayDepth = this._getArrayDepth(densityStopsArray);\r\n\r\n    if (arrayDepth === 1 && Array.isArray(densityStopsArray) && typeof densityStopsArray[0] === \"number\") {\r\n      densityStops.push(this._loadDensityParams(densityStopsArray as DensityStopArray));\r\n    } else if (arrayDepth <= 2) {\r\n      (densityStopsArray as DensityStop[]).forEach((densityStopsSet) => {\r\n        densityStops.push(this._loadDensityParams(densityStopsSet));\r\n      }, this);\r\n    } else {\r\n      throw new Error(\"Incorrect array depth for heatmap options.densityStops.\");\r\n    }\r\n    return densityStops;\r\n  },\r\n\r\n  _loadColorStop: function (this: Heatmap, colorStopParams: ColorStop | ColorStopArray): ColorStop {\r\n    let stop = 0.0;\r\n    let color: Color = \"#ffffffff\";\r\n\r\n    if (Array.isArray(colorStopParams)) {\r\n      if (colorStopParams.length < 2) {\r\n        throw new Error(\"Expected array [<stop>, <color>] when parsing options.colorGradient\");\r\n      }\r\n      stop = colorStopParams[0];\r\n      color = colorStopParams[1];\r\n    } else {\r\n      if (colorStopParams.stop === undefined || colorStopParams.color === undefined) {\r\n        throw new Error(\"Expected object {stop:<stop>, color:<color>} when parsing options.colorGradient\");\r\n      }\r\n\r\n      stop = colorStopParams.stop;\r\n      color = colorStopParams.color;\r\n    }\r\n\r\n    if (isNaN(stop)) {\r\n      throw new Error(\"Expected Number for color stop parameter: \" + String(stop));\r\n    }\r\n\r\n    return {\r\n      stop: stop,\r\n      color: color,\r\n    };\r\n  },\r\n\r\n  _loadColorGradient: function (\r\n    this: Heatmap,\r\n    gradientStopsArray: ColorStopArray | ColorStop[] | ColorStopArray[]\r\n  ): ColorStop[] {\r\n    const colorGradient: ColorStop[] = [];\r\n    const arrayDepth = this._getArrayDepth(gradientStopsArray);\r\n\r\n    if (arrayDepth === 1 && typeof gradientStopsArray[0] === \"number\") {\r\n      gradientStopsArray = gradientStopsArray as ColorStopArray;\r\n      colorGradient.push(this._loadColorStop(gradientStopsArray));\r\n    } else if (arrayDepth <= 2 && Array.isArray(gradientStopsArray)) {\r\n      gradientStopsArray = gradientStopsArray as ColorStop[] | ColorStopArray[];\r\n      gradientStopsArray.forEach((gradientStop: ColorStop | ColorStopArray) => {\r\n        colorGradient.push(this._loadColorStop(gradientStop));\r\n      }, this);\r\n    } else {\r\n      throw new Error(\"Incorrect array depth for heatmap options.colorGradient.\");\r\n    }\r\n    return colorGradient;\r\n  },\r\n\r\n  initialize: function (this: Heatmap, pointData: PointData[], options?: HeatmapOptions) {\r\n    this.setOptions(options || {});\r\n    this._pointData = this._loadPointData(pointData);\r\n  },\r\n\r\n  getData: function (this: Heatmap) {\r\n    return this._pointData;\r\n  },\r\n\r\n  setData: function (this: Heatmap, pointData: PointData[]) {\r\n    this._pointData = this._loadPointData(pointData);\r\n    this._changedFlags.data = true;\r\n    return this;\r\n  },\r\n\r\n  getPolygonPoints: function (this: Heatmap) {\r\n    return this.options.polygonPoints;\r\n  },\r\n\r\n  getIndoorMapId: function (this: Heatmap) {\r\n    return this.options.indoorMapId;\r\n  },\r\n\r\n  getIndoorMapFloorId: function (this: Heatmap) {\r\n    return this.options.indoorMapFloorId;\r\n  },\r\n\r\n  getElevation: function (this: Heatmap) {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  getElevationMode: function (this: Heatmap) {\r\n    return this.options.elevationMode;\r\n  },\r\n\r\n  getWeightMin: function (this: Heatmap) {\r\n    return this.options.weightMin;\r\n  },\r\n\r\n  getWeightMax: function (this: Heatmap) {\r\n    return this.options.weightMax;\r\n  },\r\n\r\n  getResolutionPixels: function (this: Heatmap) {\r\n    return this.options.resolutionPixels;\r\n  },\r\n\r\n  getTextureBorderPercent: function (this: Heatmap) {\r\n    return this.options.textureBorderPercent;\r\n  },\r\n\r\n  getUseApproximation: function (this: Heatmap) {\r\n    return this.options.useApproximation;\r\n  },\r\n\r\n  getDensityStops: function (this: Heatmap) {\r\n    return this.options.densityStops;\r\n  },\r\n\r\n  getDensityBlend: function (this: Heatmap) {\r\n    return this.options.densityBlend;\r\n  },\r\n\r\n  getInterpolateDensityByZoom: function (this: Heatmap) {\r\n    return this.options.interpolateDensityByZoom;\r\n  },\r\n\r\n  getZoomMin: function (this: Heatmap) {\r\n    return this.options.zoomMin;\r\n  },\r\n\r\n  getZoomMax: function (this: Heatmap) {\r\n    return this.options.zoomMax;\r\n  },\r\n\r\n  getColorGradient: function (this: Heatmap) {\r\n    return this.options.colorGradient;\r\n  },\r\n\r\n  getOpacity: function (this: Heatmap) {\r\n    return this.options.opacity;\r\n  },\r\n\r\n  getIntensityBias: function (this: Heatmap) {\r\n    return this.options.intensityBias;\r\n  },\r\n\r\n  getIntensityScale: function (this: Heatmap) {\r\n    return this.options.intensityScale;\r\n  },\r\n\r\n  getOccludedMapFeatures: function (this: Heatmap) {\r\n    return this.options.occludedMapFeatures;\r\n  },\r\n\r\n  getOccludedAlpha: function (this: Heatmap) {\r\n    return this.options.occludedAlpha;\r\n  },\r\n\r\n  getOccludedSaturation: function (this: Heatmap) {\r\n    return this.options.occludedSaturation;\r\n  },\r\n\r\n  getOccludedBrightness: function (this: Heatmap) {\r\n    return this.options.occludedBrightness;\r\n  },\r\n\r\n  ////\r\n\r\n  setIndoorMapWithFloorId: function (this: Heatmap, indoorMapId: MapId, indoorMapFloorId: MapFloorId) {\r\n    if (isNaN(indoorMapFloorId)) {\r\n      throw new Error(\"Heatmap indoorMapFloorId cannot be NaN\");\r\n    }\r\n    this.options.indoorMapId = indoorMapId || Heatmap.prototype.options.indoorMapId;\r\n    this.options.indoorMapFloorId = indoorMapFloorId;\r\n    this._changedFlags.indoorMap = true;\r\n    return this;\r\n  },\r\n\r\n  setElevation: function (this: Heatmap, elevation: number) {\r\n    if (isNaN(elevation)) {\r\n      throw new Error(\"Heatmap elevation cannot be NaN\");\r\n    }\r\n    this.options.elevation = elevation;\r\n    this._changedFlags.elevation = true;\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (this: Heatmap, mode: ElevationMode) {\r\n    if (!isValidElevationMode(mode)) {\r\n      throw new Error(\"Heatmap elevationMode must be valid\");\r\n    }\r\n    this.options.elevationMode = mode;\r\n    this._changedFlags.elevation = true;\r\n    return this;\r\n  },\r\n\r\n  setDensityBlend: function (this: Heatmap, densityBlend: number) {\r\n    if (isNaN(densityBlend)) {\r\n      throw new Error(\"Heatmap densityBlend cannot be NaN\");\r\n    }\r\n    this.options.densityBlend = Math.min(Math.max(densityBlend, 0.0), 1.0);\r\n    this._changedFlags.densityBlend = true;\r\n    return this;\r\n  },\r\n\r\n  setInterpolateDensityByZoom: function (this: Heatmap, interpolateDensityByZoom: boolean) {\r\n    this.options.interpolateDensityByZoom = interpolateDensityByZoom ? true : false;\r\n    this._changedFlags.interpolateDensityByZoom = true;\r\n    return this;\r\n  },\r\n\r\n  setZoomMin: function (this: Heatmap, zoomMin: number) {\r\n    if (isNaN(zoomMin)) {\r\n      throw new Error(\"Heatmap zoomMin cannot be NaN\");\r\n    }\r\n    this.options.zoomMin = Math.max(zoomMin, 0.0);\r\n    this._changedFlags.interpolateDensityByZoom = true;\r\n    return this;\r\n  },\r\n\r\n  setZoomMax: function (this: Heatmap, zoomMax: number) {\r\n    if (isNaN(zoomMax)) {\r\n      throw new Error(\"Heatmap zoomMax cannot be NaN\");\r\n    }\r\n    this.options.zoomMax = Math.max(zoomMax, 0.0);\r\n    this._changedFlags.interpolateDensityByZoom = true;\r\n    return this;\r\n  },\r\n\r\n  setIntensityBias: function (this: Heatmap, intensityBias: number) {\r\n    if (isNaN(intensityBias)) {\r\n      throw new Error(\"Heatmap intensityBias cannot be NaN\");\r\n    }\r\n    this.options.intensityBias = Math.min(Math.max(intensityBias, 0.0), 1.0);\r\n    this._changedFlags.intensityBias = true;\r\n    return this;\r\n  },\r\n\r\n  setIntensityScale: function (this: Heatmap, intensityScale: number) {\r\n    if (isNaN(intensityScale)) {\r\n      throw new Error(\"Heatmap intensityScale cannot be NaN\");\r\n    }\r\n    this.options.intensityScale = Math.max(intensityScale, 0.0);\r\n    this._changedFlags.intensityScale = true;\r\n    return this;\r\n  },\r\n\r\n  setOpacity: function (this: Heatmap, opacity: number) {\r\n    if (isNaN(opacity)) {\r\n      throw new Error(\"Heatmap opacity cannot be NaN\");\r\n    }\r\n    this.options.opacity = Math.min(Math.max(opacity, 0.0), 1.0);\r\n    this._changedFlags.opacity = true;\r\n    return this;\r\n  },\r\n\r\n  setColorGradient: function (this: Heatmap, colorGradient: ColorStopArray | ColorStop[] | ColorStopArray[]) {\r\n    this.options.colorGradient = this._loadColorGradient(colorGradient);\r\n    this._changedFlags.colorGradient = true;\r\n    return this;\r\n  },\r\n\r\n  setResolution: function (this: Heatmap, resolutionPixels: number) {\r\n    if (isNaN(resolutionPixels)) {\r\n      throw new Error(\"Heatmap resolutionPixels cannot be NaN\");\r\n    }\r\n    this.options.resolutionPixels = Math.max(Math.min(resolutionPixels, RESOLUTION_PIXELS_MAX), RESOLUTION_PIXELS_MIN);\r\n\r\n    this._changedFlags.resolution = true;\r\n    return this;\r\n  },\r\n\r\n  setDensityStops: function (\r\n    this: Heatmap,\r\n    densityStops: (DensityStop | DensityStopArray) | (DensityStop | DensityStopArray)[]\r\n  ) {\r\n    this.options.densityStops = this._loadDensityStops(densityStops);\r\n    this._changedFlags.densityStops = true;\r\n    return this;\r\n  },\r\n\r\n  setUseApproximation: function (this: Heatmap, useApproximation: boolean) {\r\n    this.options.useApproximation = useApproximation ? true : false;\r\n    this._changedFlags.useApproximation = true;\r\n    return this;\r\n  },\r\n\r\n  setWeightMin: function (this: Heatmap, weightMin: number) {\r\n    if (isNaN(weightMin)) {\r\n      throw new Error(\"Heatmap weightMin cannot be NaN\");\r\n    }\r\n    this.options.weightMin = weightMin;\r\n    this._changedFlags.data = true;\r\n    return this;\r\n  },\r\n\r\n  setWeightMax: function (this: Heatmap, weightMax: number) {\r\n    if (isNaN(weightMax)) {\r\n      throw new Error(\"Heatmap weightMax cannot be NaN\");\r\n    }\r\n    this.options.weightMax = weightMax;\r\n    this._changedFlags.data = true;\r\n    return this;\r\n  },\r\n\r\n  setPolygonPoints: function (this: Heatmap, polygonPoints: L.LatLngTuple[] | L.LatLngTuple[][]) {\r\n    this.options.polygonPoints = this._loadPolygonRings(polygonPoints);\r\n    this._changedFlags.polygon = true;\r\n    return this;\r\n  },\r\n\r\n  setOptions: function (this: Heatmap, options: HeatmapOptions) {\r\n    // merge options into this.options\r\n    L.setOptions(this, options);\r\n\r\n    // only call mutation method (which validates and sets dirty flag) if property exists in param\r\n    if (\"indoorMapId\" in options || \"indooindoorMapFloorIdMapId\" in options) {\r\n      this.setIndoorMapWithFloorId(this.options.indoorMapId, this.options.indoorMapFloorId);\r\n    }\r\n    if (\"elevation\" in options) {\r\n      this.setElevation(this.options.elevation);\r\n    }\r\n    if (\"elevationMode\" in options) {\r\n      this.setElevationMode(this.options.elevationMode);\r\n    }\r\n    if (\"densityBlend\" in options) {\r\n      this.setDensityBlend(this.options.densityBlend);\r\n    }\r\n    if (\"interpolateDensityByZoom\" in options) {\r\n      this.setInterpolateDensityByZoom(this.options.interpolateDensityByZoom);\r\n    }\r\n    if (\"zoomMin\" in options) {\r\n      this.setZoomMin(this.options.zoomMin);\r\n    }\r\n    if (\"zoomMax\" in options) {\r\n      this.setZoomMax(this.options.zoomMax);\r\n    }\r\n    if (\"intensityBias\" in options) {\r\n      this.setIntensityBias(this.options.intensityBias);\r\n    }\r\n    if (\"intensityScale\" in options) {\r\n      this.setIntensityScale(this.options.intensityScale);\r\n    }\r\n    if (\"opacity\" in options) {\r\n      this.setOpacity(this.options.opacity);\r\n    }\r\n    if (\"colorGradient\" in options) {\r\n      this.setColorGradient(this.options.colorGradient);\r\n    }\r\n    if (\"resolutionPixels\" in options) {\r\n      this.setResolution(this.options.resolutionPixels);\r\n    }\r\n    if (\"densityStops\" in options) {\r\n      this.setDensityStops(this.options.densityStops);\r\n    }\r\n    if (\"useApproximation\" in options) {\r\n      this.setUseApproximation(this.options.useApproximation);\r\n    }\r\n    if (\"weightMin\" in options) {\r\n      this.setWeightMin(this.options.weightMin);\r\n    }\r\n    if (\"weightMax\" in options) {\r\n      this.setWeightMax(this.options.weightMax);\r\n    }\r\n    if (\"polygonPoints\" in options) {\r\n      this.setPolygonPoints(this.options.polygonPoints);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  _update: function (this: Heatmap) {},\r\n\r\n  beforeAdd: function (this: Heatmap) {\r\n    // don't call base, avoid assigning this._renderer\r\n  },\r\n\r\n  onAdd: function (this: Heatmap) {\r\n    this._map.heatmaps.addHeatmap(this);\r\n  },\r\n\r\n  onRemove: function (this: Heatmap) {\r\n    this._map.heatmaps.removeHeatmap(this);\r\n  },\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  redraw: function (this: Heatmap) {},\r\n\r\n  _changedFlags: {\r\n    indoorMap: false,\r\n    elevation: false,\r\n    densityBlend: false,\r\n    interpolateDensityByZoom: false,\r\n    intensityBias: false,\r\n    intensityScale: false,\r\n    opacity: false,\r\n    colorGradient: false,\r\n    occludedStyle: false,\r\n    resolution: false,\r\n    densityStops: false,\r\n    useApproximation: false,\r\n    data: false,\r\n    polygon: false,\r\n  },\r\n\r\n  _anyChanged: function (this: Heatmap) {\r\n    return Object.values(this._changedFlags).some(Boolean);\r\n  },\r\n\r\n  _getChangedFlags: function (this: Heatmap) {\r\n    return this._changedFlags;\r\n  },\r\n\r\n  _clearChangedFlags: function (this: Heatmap) {\r\n    type Key = keyof typeof this._changedFlags;\r\n    (Object.keys(this._changedFlags) as Key[]).forEach((key) => {\r\n      this._changedFlags[key] = false;\r\n    }, this);\r\n  },\r\n});\r\n\r\nexport const heatmap = factoryFor(Heatmap);\r\n","import L from \"leaflet\";\r\nimport { IndoorMapEntity } from \"../../public/indoorMapEntities\";\r\n\r\nexport function EmscriptenIndoorMapEntityInformationApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _indoorEntityInformationApi_IndoorMapEntityInformationChangedCallback = cwrap(\"indoorEntityInformationApi_IndoorMapEntityInformationChangedCallback\", null, [\"number\", \"number\"]);\r\n    var _indoorEntityInformationApi_CreateIndoorMapEntityInformation = cwrap(\"indoorMapEntityInformation_CreateIndoorMapEntityInformation\", \"number\", [\"number\",\"string\"]);\r\n    var _indoorEntityInformationApi_DestroyIndoorMapEntityInformation = cwrap(\"indoorMapEntityInformation_DestroyIndoorMapEntityInformation\", null, [\"number\",\"number\"]);\r\n    var _indoorEntityInformationApi_TryGetIndoorMapEntityCountBuffer = cwrap(\"indoorEntityInformationApi_TryGetIndoorMapEntityCountBuffer\", \"number\", [\"number\",\"number\",\"number\"]);\r\n    var _indoorEntityInformationApi_TryGetIndoorMapEntityInformationLoadState = cwrap(\"indoorEntityInformationApi_TryGetIndoorMapEntityInformationLoadState\", \"number\", [\"number\",\"number\", \"number\"]);\r\n    \r\n    var _indoorEntityInformationApi_TryGetIndoorMapEntityBuffersSize = cwrap(\"indoorEntityInformationApi_TryGetIndoorMapEntityBuffersSize\", \"number\",  [\"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _indoorEntityInformationApi_TryGetIndoorMapEntityModels = cwrap(\"indoorEntityInformationApi_TryGetIndoorMapEntityModels\", \"number\" , [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n    this.registerIndoorMapEntityInformationChangedCallback = (callback) => {\r\n        _indoorEntityInformationApi_IndoorMapEntityInformationChangedCallback(_emscriptenApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.createIndoorMapEntityInformation = (indoorEntityInformation) => {\r\n        var indoorEntityInformationId = 0;\r\n\r\n        var indoorMapId = indoorEntityInformation.getIndoorMapId();\r\n\r\n        indoorEntityInformationId = _indoorEntityInformationApi_CreateIndoorMapEntityInformation(\r\n            _emscriptenApiPointer,\r\n            indoorMapId);\r\n\r\n        return indoorEntityInformationId;\r\n    };\r\n\r\n    this.destroyIndoorMapEntityInformation = (IndoorMapEntityInformationId) => {\r\n        _indoorEntityInformationApi_DestroyIndoorMapEntityInformation(_emscriptenApiPointer, IndoorMapEntityInformationId);\r\n    };\r\n\r\n    this.tryGetIndoorMapEntityInformation = (IndoorMapEntityInformationId) => {\r\n\r\n        //Get Current Load State\r\n        var loadStateBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n        var success = _indoorEntityInformationApi_TryGetIndoorMapEntityInformationLoadState(\r\n            _emscriptenApiPointer,\r\n            IndoorMapEntityInformationId,\r\n            loadStateBuf.ptr\r\n        );\r\n\r\n        var indoorMapEntityInformationLoadState = _emscriptenMemory.consumeBufferToArray(loadStateBuf);\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        //Get Count of IndoorMapEntities\r\n        var indoorMapEntitiesCountBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n        success = _indoorEntityInformationApi_TryGetIndoorMapEntityCountBuffer(\r\n            _emscriptenApiPointer,\r\n            IndoorMapEntityInformationId,\r\n            indoorMapEntitiesCountBuf.ptr\r\n        );\r\n\r\n        var indoorMapEntityCount = _emscriptenMemory.consumeBufferToArray(indoorMapEntitiesCountBuf)[0];\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var indoorMapEntityBufferSizesBuf = _emscriptenMemory.createInt32Buffer(3);\r\n        var indoorMapEntityIdsSizesBuf = _emscriptenMemory.createInt32Buffer(indoorMapEntityCount);\r\n        \r\n        success = _indoorEntityInformationApi_TryGetIndoorMapEntityBuffersSize(\r\n            _emscriptenApiPointer,\r\n            IndoorMapEntityInformationId,\r\n            indoorMapEntityCount,\r\n            indoorMapEntityIdsSizesBuf.ptr,\r\n            indoorMapEntityBufferSizesBuf.ptr);\r\n            \r\n        var indoorMapEntityBufferSize = _emscriptenMemory.consumeBufferToArray(indoorMapEntityBufferSizesBuf);\r\n        var indoorMapEntityStringIdSizes = _emscriptenMemory.consumeBufferToArray(indoorMapEntityIdsSizesBuf);\r\n        \r\n        var indoorMapEntityIdsTotalSize = indoorMapEntityBufferSize[0];\r\n        var latLngsPerContourSize = indoorMapEntityBufferSize[1];\r\n        var latLngsSize = indoorMapEntityBufferSize[2];\r\n        \r\n        if (!success) {\r\n            return null;\r\n        }\r\n        \r\n        var indoorMapEntityStringIdsBuf = _emscriptenMemory.createInt8Buffer(indoorMapEntityIdsTotalSize);\r\n        \r\n        var indoorMapFloorIdBuf = _emscriptenMemory.createInt32Buffer(indoorMapEntityCount);\r\n        var positionLatLngBuf= _emscriptenMemory.createDoubleBuffer(indoorMapEntityCount * 2);\r\n\r\n        var contoursPerPolygonBuf = _emscriptenMemory.createInt32Buffer(indoorMapEntityCount);\r\n        var latLngsPerContourBuf = _emscriptenMemory.createInt32Buffer(latLngsPerContourSize);\r\n        var latLngsBuf = _emscriptenMemory.createDoubleBuffer(latLngsSize);\r\n        \r\n        success = _indoorEntityInformationApi_TryGetIndoorMapEntityModels(\r\n            _emscriptenApiPointer,\r\n            IndoorMapEntityInformationId,\r\n            indoorMapEntityCount,\r\n            indoorMapEntityStringIdsBuf.ptr,\r\n            indoorMapEntityIdsTotalSize,\r\n            indoorMapFloorIdBuf.ptr,\r\n            positionLatLngBuf.ptr,\r\n            contoursPerPolygonBuf.ptr,\r\n            latLngsPerContourBuf.ptr,\r\n            latLngsPerContourSize,\r\n            latLngsBuf.ptr,\r\n            latLngsSize\r\n        );\r\n            \r\n        var indoorMapEntityStringIds = _emscriptenMemory.consumeUtf8BufferToString(indoorMapEntityStringIdsBuf);\r\n        var indoorMapEntityFloorIds = _emscriptenMemory.consumeBufferToArray(indoorMapFloorIdBuf);\r\n        var positionLatLng = _emscriptenMemory.consumeBufferToArray(positionLatLngBuf);\r\n        var contoursPerPolygon = _emscriptenMemory.consumeBufferToArray(contoursPerPolygonBuf);\r\n        var latLngsPerContour = _emscriptenMemory.consumeBufferToArray(latLngsPerContourBuf);\r\n        var latLngsDegrees = _emscriptenMemory.consumeBufferToArray(latLngsBuf);\r\n        \r\n        if (!success)\r\n        {\r\n            return null;\r\n        }\r\n        \r\n        var indoorMapEntitiesList = [];\r\n\r\n        var idBufferHead = 0;\r\n        var latLngsPerContourHead = 0;\r\n        var latLngsDegreesHead = 0;\r\n        for (var i = 0; i < indoorMapEntityCount; i++) {\r\n            var numCharsInId = indoorMapEntityStringIdSizes[i];\r\n            var idBufferEnd = idBufferHead + numCharsInId;\r\n            var indoorMapEntityId = indoorMapEntityStringIds.slice(idBufferHead, idBufferEnd);\r\n            idBufferHead = idBufferEnd;\r\n\r\n            var indoorMapEntityFloorId = indoorMapEntityFloorIds[i];\r\n\r\n            var posLat = positionLatLng[2*i];\r\n            var posLng = positionLatLng[2*i + 1];\r\n            var position = L.latLng(posLat, posLng);\r\n\r\n            var contourCount = contoursPerPolygon[i];\r\n            var polygonPoints = [];\r\n\r\n            var  latLngsPerContourEndIndex = latLngsPerContourHead + contourCount;\r\n            for (var latLngsPerContourIndex = latLngsPerContourHead; latLngsPerContourIndex < latLngsPerContourEndIndex;  latLngsPerContourIndex++)\r\n            {\r\n                var contourPoints = [];\r\n                \r\n                var latLngsDegreesCount = latLngsPerContour[latLngsPerContourIndex];\r\n                var latLngsDegreesEndIndex = latLngsDegreesHead + latLngsDegreesCount;\r\n\r\n                for(var pointIndex = latLngsDegreesHead; pointIndex < latLngsDegreesEndIndex; pointIndex++)\r\n                {\r\n                    var lat = latLngsDegrees[(pointIndex * 2)];\r\n                    var lng = latLngsDegrees[(pointIndex * 2) + 1];\r\n                    contourPoints.push(L.latLng(lat, lng));\r\n\r\n                    latLngsDegreesHead++;\r\n                }                \r\n                polygonPoints.push(contourPoints);\r\n\r\n                latLngsPerContourHead++;\r\n            }\r\n\r\n            var entity = new IndoorMapEntity(indoorMapEntityId, indoorMapEntityFloorId, position, polygonPoints);\r\n            indoorMapEntitiesList.push(entity);\r\n        }\r\n\r\n        var output = {\r\n            LoadState: indoorMapEntityInformationLoadState[0],\r\n            IndoorMapEntities: indoorMapEntitiesList\r\n        };\r\n\r\n        return output;\r\n    };\r\n}\r\n\r\nexport default EmscriptenIndoorMapEntityInformationApi;","import type IndoorMapFloorOutlinePolygonRing from \"./indoor_map_floor_outline_polygon_ring\";\r\n\r\nexport class IndoorMapFloorOutlinePolygon {\r\n  private _outerRing: IndoorMapFloorOutlinePolygonRing;\r\n  private _innerRings: IndoorMapFloorOutlinePolygonRing[];\r\n\r\n  constructor(outerRing: IndoorMapFloorOutlinePolygonRing, innerRings: IndoorMapFloorOutlinePolygonRing[]) {\r\n    this._outerRing = outerRing;\r\n    this._innerRings = innerRings;\r\n  }\r\n\r\n  getOuterRing(): IndoorMapFloorOutlinePolygonRing {\r\n    return this._outerRing;\r\n  }\r\n  getInnerRings(): IndoorMapFloorOutlinePolygonRing[] {\r\n    return this._innerRings;\r\n  }\r\n}\r\n\r\nexport default IndoorMapFloorOutlinePolygon;\r\n","export class IndoorMapFloorOutlinePolygonRing {\r\n  private _latLngPoints: L.LatLng[];\r\n\r\n  constructor(latLngPoints: L.LatLng[]) {\r\n    this._latLngPoints = latLngPoints;\r\n  }\r\n\r\n  getLatLngPoints(): L.LatLng[] {\r\n    return this._latLngPoints;\r\n  }\r\n}\r\n\r\nexport default IndoorMapFloorOutlinePolygonRing;\r\n","import L from \"leaflet\";\r\nimport IndoorMapFloorOutlinePolygon from \"../../public/indoorMapFloorOutlines/indoor_map_floor_outline_polygon\";\r\nimport IndoorMapFloorOutlinePolygonRing from \"../../public/indoorMapFloorOutlines/indoor_map_floor_outline_polygon_ring\";\r\n\r\nexport function EmscriptenIndoorMapFloorOutlineInformationApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _indoorMapFloorOutlineInformationApi_IndoorMapFloorOutlineInformationLoadedCallback = cwrap(\"indoorMapFloorOutlineInformationApi_IndoorMapFloorOutlineInformationLoadedCallback\", null, [\"number\", \"number\"]);\r\n    var _indoorMapFloorOutlineInformationApi_CreateIndoorMapFloorOutlineInformation = cwrap(\"indoorMapFloorOutlineInformationApi_CreateIndoorMapFloorOutlineInformation\", \"number\", [\"number\",\"string\", \"number\"]);\r\n    var _indoorMapFloorOutlineInformationApi_DestroyIndoorMapFloorOutlineInformation = cwrap(\"indoorMapFloorOutlineInformationApi_DestroyIndoorMapFloorOutlineInformation\", null, [\"number\",\"number\"]);\r\n    var _indoorMapFloorOutlineInformationApi_GetIndoorMapFloorOutlineInformationLoaded = cwrap(\"indoorMapFloorOutlineInformationApi_GetIndoorMapFloorOutlineInformationLoaded\", \"number\", [\"number\",\"number\"]);\r\n    var _indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlineBufferSize = cwrap(\"indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlineBufferSize\", \"number\", [\"number\",\"number\",\"number\"]);\r\n    var _indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygonBufferSizes = cwrap(\"indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygonBufferSizes\", \"number\", [\"number\",\"number\",\"number\",\"number\",\"number\",\"number\"]);\r\n    var _indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygon = cwrap(\"indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygon\", \"number\", [\"number\",\"number\",\"number\",\"number\",\"number\",\"number\",\"number\",\"number\"]);\r\n\r\n    this.registerIndoorMapFloorOutlineInformationLoadedCallback = (callback) => {\r\n        _indoorMapFloorOutlineInformationApi_IndoorMapFloorOutlineInformationLoadedCallback(_emscriptenApiPointer, emscriptenModule.addFunction(callback));\r\n    };\r\n\r\n    this.createIndoorMapFloorOutlineInformation = (indoorMapFloorOutlineInformation) => {\r\n        var indoorMapId = indoorMapFloorOutlineInformation.getIndoorMapId();\r\n        var indoorMapFloorId = indoorMapFloorOutlineInformation.getIndoorMapFloorId();\r\n\r\n        var indoorMapFloorOutlineInformationId = _indoorMapFloorOutlineInformationApi_CreateIndoorMapFloorOutlineInformation(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapFloorId);\r\n\r\n        return indoorMapFloorOutlineInformationId;\r\n    };\r\n\r\n    this.destroyIndoorMapFloorOutlineInformation = (indoorMapFloorOutlineInformationId) => {\r\n        _indoorMapFloorOutlineInformationApi_DestroyIndoorMapFloorOutlineInformation(_emscriptenApiPointer, indoorMapFloorOutlineInformationId);\r\n    };\r\n\r\n    this.getIndoorMapFloorOutlineInformationLoaded = (indoorMapFloorOutlineInformationId) => _indoorMapFloorOutlineInformationApi_GetIndoorMapFloorOutlineInformationLoaded(_emscriptenApiPointer, indoorMapFloorOutlineInformationId);\r\n\r\n    this.tryGetIndoorMapFloorOutlineInformation = (indoorMapFloorOutlineInformationId) => {\r\n        //Get Count of IndoorMapFloorOutlines\r\n        var indoorMapFloorOutlinesCountBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n        var success = _indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlineBufferSize(\r\n            _emscriptenApiPointer,\r\n            indoorMapFloorOutlineInformationId,\r\n            indoorMapFloorOutlinesCountBuf.ptr\r\n        );\r\n\r\n        var indoorMapFloorOutlinesCount = _emscriptenMemory.consumeBufferToArray(indoorMapFloorOutlinesCountBuf)[0];\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var outlinePolygons = [];\r\n        var i;\r\n        for (i = 0; i < indoorMapFloorOutlinesCount; i++) {\r\n            //Get Counts for each outline polygon\r\n            var outerRingPointCountBuf = _emscriptenMemory.createInt32Buffer(1);\r\n            var innerRingsCountBuf = _emscriptenMemory.createInt32Buffer(1);\r\n            var innerRingsTotalPointCountBuf = _emscriptenMemory.createInt32Buffer(1);\r\n\r\n            success = _indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygonBufferSizes(\r\n                _emscriptenApiPointer,\r\n                indoorMapFloorOutlineInformationId,\r\n                i,\r\n                outerRingPointCountBuf.ptr,\r\n                innerRingsCountBuf.ptr,\r\n                innerRingsTotalPointCountBuf.ptr\r\n            );\r\n\r\n            var outerRingPointCount = _emscriptenMemory.consumeBufferToArray(outerRingPointCountBuf)[0];\r\n            var innerRingsCount = _emscriptenMemory.consumeBufferToArray(innerRingsCountBuf)[0];\r\n            var innerRingsTotalPointCount = _emscriptenMemory.consumeBufferToArray(innerRingsTotalPointCountBuf)[0];\r\n\r\n            if (!success) {\r\n                return null;\r\n            }\r\n\r\n            var outerRingPointsLatLngDoublesBuf = _emscriptenMemory.createDoubleBuffer(outerRingPointCount * 2);\r\n            var innerRingsPointCountBuf = _emscriptenMemory.createInt32Buffer(innerRingsCount);\r\n            var innerRingPointsLatLngDoublesBuf = _emscriptenMemory.createDoubleBuffer(innerRingsTotalPointCount * 2);\r\n\r\n            success = _indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygon(\r\n                _emscriptenApiPointer,\r\n                indoorMapFloorOutlineInformationId,\r\n                i,\r\n                outerRingPointsLatLngDoublesBuf.ptr,\r\n                outerRingPointsLatLngDoublesBuf.element_count,\r\n                innerRingsPointCountBuf.ptr,\r\n                innerRingsPointCountBuf.element_count,\r\n                innerRingPointsLatLngDoublesBuf.ptr,\r\n                innerRingPointsLatLngDoublesBuf.element_count\r\n            );\r\n\r\n            var outerRingPointsLatLngDoubles = _emscriptenMemory.consumeBufferToArray(outerRingPointsLatLngDoublesBuf);\r\n            var innerRingsPointCount = _emscriptenMemory.consumeBufferToArray(innerRingsPointCountBuf);\r\n            var innerRingPointsLatLngDoubles = _emscriptenMemory.consumeBufferToArray(innerRingPointsLatLngDoublesBuf);\r\n\r\n            var outerRing = _getOutlinePolygonRing(outerRingPointsLatLngDoubles, 0, outerRingPointCount);\r\n\r\n            var innerRingBufferIndex = 0;\r\n            var innerRings = [];\r\n\r\n            for (var j = 0; j < innerRingsCount; j++) {\r\n                var pointCount = innerRingsPointCount[j];\r\n                var innerRing = _getOutlinePolygonRing(innerRingPointsLatLngDoubles, innerRingBufferIndex, pointCount);\r\n                innerRingBufferIndex = innerRingBufferIndex + (pointCount * 2);\r\n                innerRings.push(innerRing);\r\n            }\r\n\r\n            if (!success) {\r\n                return null;\r\n            }\r\n\r\n            var outlinePolygon = new IndoorMapFloorOutlinePolygon(outerRing, innerRings);\r\n            outlinePolygons.push(outlinePolygon);\r\n        }\r\n\r\n        return outlinePolygons;\r\n    };\r\n\r\n    var _getOutlinePolygonRing = (doublesLatLngArray, startIndex, pointCount) => {\r\n        var pointIndex = startIndex;\r\n        var ringPoints = [];\r\n\r\n        for (var i = 0; i < pointCount; ++i) {\r\n            var lat = doublesLatLngArray[pointIndex++];\r\n            var lng = doublesLatLngArray[pointIndex++];\r\n            ringPoints.push(L.latLng(lat, lng));\r\n        }\r\n\r\n        return new IndoorMapFloorOutlinePolygonRing(ringPoints);\r\n    };\r\n}\r\n\r\nexport default EmscriptenIndoorMapFloorOutlineInformationApi;\r\n","import { getElevationModeInt } from \"../elevation_mode\";\r\nimport { colorToRgba32 } from \"./emscripten_interop_utils.js\";\r\n\r\nexport function EmscriptenPolylineApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _polylineApi_createPolyline = cwrap(\"polylineApi_createPolyline\", \"number\", [\"number\", \"string\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _polylineApi_destroyPolyline = cwrap(\"polylineApi_destroyPolyline\", null, [\"number\", \"number\"]);\r\n    var _polylineApi_setIndoorMap = cwrap(\"polylineApi_setIndoorMap\", null, [\"number\", \"number\", \"string\", \"number\", \"number\"]);\r\n    var _polylineApi_setElevation = cwrap(\"polylineApi_setElevation\", null, [\"number\", \"number\", \"number\"]);\r\n    var _polylineApi_setStyleAttributes = cwrap(\"polylineApi_setStyleAttributes\", null, [\"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n    this.createPolyline = (polyline) => {\r\n        var coords = [];\r\n        var perPointElevations = [];\r\n        var anyAltitudes = false;\r\n        polyline.getLatLngs().forEach((latLng) => {\r\n            coords.push(latLng.lat);\r\n            coords.push(latLng.lng);\r\n            var altOrDefault = 0.0;\r\n            if (latLng.alt !== undefined) {\r\n                anyAltitudes = true;\r\n                altOrDefault = latLng.alt;\r\n            }\r\n            perPointElevations.push(altOrDefault);\r\n        });\r\n\r\n        if (!anyAltitudes) {\r\n            perPointElevations = [];\r\n        }\r\n\r\n        var coordsBuf = _emscriptenMemory.createBufferFromArray(coords, _emscriptenMemory.createDoubleBuffer);\r\n        var perPointElevationsBuf = _emscriptenMemory.createBufferFromArray(perPointElevations, _emscriptenMemory.createDoubleBuffer);\r\n\r\n        var indoorMapId = polyline.getIndoorMapId();\r\n        var indoorMapFloorId = polyline.getIndoorMapFloorId();\r\n        var elevation = polyline.getElevation();\r\n        var elevationModeInt = getElevationModeInt(polyline.getElevationMode());\r\n        var width = polyline.getWidth();\r\n        var colorRGBA32 = colorToRgba32(polyline.getColor());\r\n        var miterLimit = polyline.getMiterLimit();\r\n\r\n        var polylineId = _polylineApi_createPolyline(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            indoorMapFloorId,\r\n            elevation,\r\n            elevationModeInt,\r\n            coordsBuf.ptr,\r\n            coordsBuf.element_count,\r\n            perPointElevationsBuf.ptr,\r\n            perPointElevationsBuf.element_count,\r\n            width,\r\n            colorRGBA32,\r\n            miterLimit\r\n        );\r\n\r\n        _emscriptenMemory.freeBuffer(coordsBuf);\r\n        _emscriptenMemory.freeBuffer(perPointElevationsBuf);\r\n\r\n\r\n        return polylineId;\r\n    };\r\n\r\n    this.destroyPolyline = (polylineId) => {\r\n        _polylineApi_destroyPolyline(_emscriptenApiPointer, polylineId);\r\n    };\r\n\r\n    this.updateNativeState = (polylineId, polyline) => {\r\n        if (!polyline._needsNativeUpdate) {\r\n            return;\r\n        }\r\n        polyline._needsNativeUpdate = false;\r\n\r\n        var indoorMapId = polyline.getIndoorMapId();\r\n        var elevationModeInt = getElevationModeInt(polyline.getElevationMode());\r\n        var colorRGBA32 = colorToRgba32(polyline.getColor());\r\n\r\n        _polylineApi_setIndoorMap(\r\n            _emscriptenApiPointer,\r\n            polylineId,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            polyline.getIndoorMapFloorId()\r\n        );\r\n\r\n        _polylineApi_setElevation(\r\n            _emscriptenApiPointer,\r\n            polylineId,\r\n            polyline.getElevation(),\r\n            elevationModeInt\r\n        );\r\n\r\n        _polylineApi_setStyleAttributes(\r\n            _emscriptenApiPointer,\r\n            polylineId,\r\n            polyline.getWidth(),\r\n            colorRGBA32,\r\n            polyline.getMiterLimit()\r\n        );\r\n    };\r\n}\r\n\r\nexport default EmscriptenPolylineApi;\r\n","export function EmscriptenBlueSphereApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n\r\n    var _blueSphereApi_setEnabled = cwrap(\"blueSphereApi_setEnabled\", null, [\"number\", \"number\"]);\r\n    var _blueSphereApi_setCoordinate = cwrap(\"blueSphereApi_setCoordinate\", null, [\"number\", \"number\", \"number\"]);\r\n    var _blueSphereApi_setElevation = cwrap(\"blueSphereApi_setElevation\", null, [\"number\", \"number\"]);\r\n    var _blueSphereApi_setIndoorMap = cwrap(\"blueSphereApi_setIndoorMap\", null, [\"number\", \"string\", \"number\", \"number\"]);\r\n    var _blueSphereApi_setHeadingDegrees = cwrap(\"blueSphereApi_setHeadingDegrees\", null, [\"number\", \"number\"]);\r\n    var _blueSphereApi_showOrientation = cwrap(\"blueSphereApi_showOrientation\", null, [\"number\", \"number\"]);\r\n\r\n    this.updateNativeState = (blueSphereModule) => {\r\n        var location = blueSphereModule.getLocation();\r\n        var indoorMapId = blueSphereModule.getIndoorMapId();\r\n\r\n        if (!location) {\r\n            _blueSphereApi_setEnabled(\r\n                _emscriptenApiPointer,\r\n                false\r\n            );\r\n            return;\r\n        }\r\n\r\n        _blueSphereApi_setEnabled(\r\n            _emscriptenApiPointer,\r\n            blueSphereModule.isEnabled()\r\n        );\r\n\r\n        _blueSphereApi_setCoordinate(\r\n            _emscriptenApiPointer,\r\n            location.lat,\r\n            location.lng\r\n        );\r\n\r\n        _blueSphereApi_setElevation(\r\n            _emscriptenApiPointer,\r\n            blueSphereModule.getElevation()\r\n        );\r\n\r\n        _blueSphereApi_setIndoorMap(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            blueSphereModule.getIndoorMapFloorId()\r\n        );\r\n\r\n        _blueSphereApi_setHeadingDegrees(\r\n            _emscriptenApiPointer,\r\n            blueSphereModule.getHeadingDegrees()\r\n        );\r\n\r\n        _blueSphereApi_showOrientation(\r\n            _emscriptenApiPointer,\r\n            blueSphereModule.isOrientationVisible()\r\n        );\r\n\r\n    };\r\n}\r\n\r\nexport default EmscriptenBlueSphereApi;\r\n","export function EmscriptenMapRuntimeApi(eegeoApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _eegeoApiPointer = eegeoApiPointer;\r\n    var _pauseWebgl = cwrap(\"webglPause\", null, [\"number\"]);\r\n    var _resumeWebgl = cwrap(\"webglResume\", null, [\"number\"]);\r\n    var _removeWebgl = cwrap(\"webglRemove\", null, [\"number\"]);\r\n\r\n    this.onPause = () => {\r\n        _pauseWebgl(_eegeoApiPointer);\r\n    };\r\n\r\n    this.onResume = () => {\r\n        _resumeWebgl(_eegeoApiPointer);\r\n    };\r\n\r\n    this.onRemove = () => {\r\n        _removeWebgl(_eegeoApiPointer);\r\n    };\r\n\r\n}\r\n\r\nexport default EmscriptenMapRuntimeApi;\r\n","export function EmscriptenVersionApi(emscriptenApiPointer, cwrap, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n    \r\n    var _versionApi_GetPlatformVersionStringSize = cwrap(\"versionApi_GetPlatformVersionStringSize\", \"number\", [\"number\"]);\r\n    var _versionApi_TryGetPlatformVersionString = cwrap(\"versionApi_TryGetPlatformVersionString\", \"number\", [\"number\", \"number\", \"number\"]);\r\n\r\n    var _versionApi_GetPlatformHashStringSize = cwrap(\"versionApi_GetPlatformHashStringSize\", \"number\", [\"number\"]);\r\n    var _versionApi_TryGetPlatformHashString = cwrap(\"versionApi_TryGetPlatformHashString\", \"number\", [\"number\", \"number\", \"number\"]);\r\n\r\n    var _tryGetNativeVersionString = (nativeGetBufferSizeFunc, nativeGetStringFunc) => {\r\n        var bufferSize = nativeGetBufferSizeFunc(_emscriptenApiPointer);\r\n        var stringBuffer = _emscriptenMemory.createInt8Buffer(bufferSize);\r\n        var success = nativeGetStringFunc(\r\n            _emscriptenApiPointer,\r\n            stringBuffer.ptr,\r\n            bufferSize\r\n        );\r\n\r\n        if (!success) {\r\n            return null;\r\n        }\r\n\r\n        var stringValue = _emscriptenMemory.consumeUtf8BufferToString(stringBuffer);\r\n        return stringValue;\r\n    };\r\n\r\n    this.getPlatformVersion = () => _tryGetNativeVersionString(\r\n        _versionApi_GetPlatformVersionStringSize,\r\n        _versionApi_TryGetPlatformVersionString\r\n    );\r\n\r\n    this.getPlatformVersionHash = () => _tryGetNativeVersionString(\r\n        _versionApi_GetPlatformHashStringSize,\r\n        _versionApi_TryGetPlatformHashString\r\n    );\r\n}\r\n\r\nexport default EmscriptenVersionApi;\r\n","import { getElevationModeInt } from \"../elevation_mode\";\r\nimport { HeatmapOcclusionMapFeature } from \"../../public/heatmap\";\r\nimport { colorToRgba32 } from \"./emscripten_interop_utils\";\r\n\r\nexport function EmscriptenHeatmapApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n    var _emscriptenMemory = emscriptenMemory;\r\n\r\n    var _heatmapApi_createHeatmap = cwrap(\"heatmapApi_createHeatmap\", \"number\", [\r\n        \"number\", \"string\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\",\r\n        \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\",\r\n        \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\",\r\n        \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"\r\n    ]);\r\n    var _heatmapApi_destroyHeatmap = cwrap(\"heatmapApi_destroyHeatmap\", null, [\"number\", \"number\"]);\r\n    var _heatmapApi_setIndoorMap = cwrap(\"heatmapApi_setIndoorMap\", null, [\"number\", \"number\", \"string\", \"number\", \"number\"]);\r\n    var _heatmapApi_setElevation = cwrap(\"heatmapApi_setElevation\", null, [\"number\", \"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setDensityBlend = cwrap(\"heatmapApi_setDensityBlend\", null, [\"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setInterpolateDensityByZoom = cwrap(\"heatmapApi_setInterpolateDensityByZoom\", null, [\"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setIntensityBias = cwrap(\"heatmapApi_setIntensityBias\", null, [\"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setIntensityScale = cwrap(\"heatmapApi_setIntensityScale\", null, [\"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setOpacity = cwrap(\"heatmapApi_setOpacity\", null, [\"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setColorGradient = cwrap(\"heatmapApi_setColorGradient\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setResolution = cwrap(\"heatmapApi_setResolution\", null, [\"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setHeatmapDensities = cwrap(\"heatmapApi_setHeatmapDensities\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_useApproximation = cwrap(\"heatmapApi_useApproximation\", null, [\"number\", \"number\", \"number\"]);\r\n    var _heatmapApi_setData = cwrap(\"heatmapApi_setData\", null, [\"number\", \"number\", \"number\", \"number\", \"number\", \"number\"]);\r\n\r\n    const occludedMapFeaturesToInt = (occludedMapFeatures) => {\r\n        var occludedMapFeaturesInt = 0;\r\n\r\n        occludedMapFeatures.forEach(function (occlusionFeature) {\r\n            if (occlusionFeature === HeatmapOcclusionMapFeature.GROUND) {\r\n                occludedMapFeaturesInt = occludedMapFeaturesInt | 0x1;\r\n            }\r\n            else if (occlusionFeature === HeatmapOcclusionMapFeature.BUILDINGS) {\r\n                occludedMapFeaturesInt = occludedMapFeaturesInt | 0x2;\r\n            }\r\n            else if (occlusionFeature === HeatmapOcclusionMapFeature.TREES) {\r\n                occludedMapFeaturesInt = occludedMapFeaturesInt | 0x4;\r\n            }\r\n            else if (occlusionFeature === HeatmapOcclusionMapFeature.TRANSPORT) {\r\n                occludedMapFeaturesInt = occludedMapFeaturesInt | 0x8;\r\n            }\r\n        });\r\n\r\n        return occludedMapFeaturesInt;\r\n    };\r\n\r\n    const _buildFlatData = (pointData) => {\r\n        var dataFlat = [];\r\n        pointData.forEach((pointDatum) => {\r\n            dataFlat.push(pointDatum.latLng.lat);\r\n            dataFlat.push(pointDatum.latLng.lng);\r\n            var altOrDefault = 0.0;\r\n            if (pointDatum.latLng.alt !== undefined) {\r\n                altOrDefault = pointDatum.latLng.alt;\r\n            }\r\n            dataFlat.push(altOrDefault);\r\n            dataFlat.push(pointDatum.weight);\r\n        });\r\n\r\n        return dataFlat;\r\n    };\r\n\r\n    this.createHeatmap = (heatmap) => {\r\n        // polygon\r\n        var polygonCoords = [];\r\n        var polygonRingVertexCounts = [];\r\n\r\n        heatmap.getPolygonPoints().forEach((ring) => {\r\n            polygonRingVertexCounts.push(ring.length);\r\n            ring.forEach((point) => {\r\n                polygonCoords.push(point.lat);\r\n                polygonCoords.push(point.lng);\r\n                polygonCoords.push(point.alt ? point.alt : 0.0);\r\n            });\r\n            });\r\n\r\n        if (polygonCoords.length === 0) {\r\n            polygonRingVertexCounts.push(0);\r\n        }\r\n\r\n        var polygonVertexCoordsBuffer = _emscriptenMemory.createBufferFromArray(polygonCoords, _emscriptenMemory.createDoubleBuffer);\r\n        var polygonRingVertexCountsBuffer = _emscriptenMemory.createBufferFromArray(polygonRingVertexCounts, _emscriptenMemory.createInt32Buffer);\r\n\r\n        var indoorMapId = heatmap.getIndoorMapId();\r\n        var indoorMapFloorId = heatmap.getIndoorMapFloorId();\r\n        var elevation = heatmap.getElevation();\r\n        var elevationModeInt = getElevationModeInt(heatmap.getElevationMode());\r\n\r\n        // data\r\n        var dataFlat = _buildFlatData(heatmap.getData());\r\n        var pointDataBuf = _emscriptenMemory.createBufferFromArray(dataFlat, _emscriptenMemory.createDoubleBuffer);\r\n\r\n        var heatmapDensityStops = [];\r\n        var heatmapRadii = [];\r\n        var heatmapGains = [];\r\n        heatmap.getDensityStops().forEach((density) => {\r\n            heatmapDensityStops.push(density.stop);\r\n            heatmapRadii.push(density.radius);\r\n            heatmapGains.push(density.gain);\r\n        });\r\n\r\n        var gradientStops = [];\r\n        var gradientColors = [];\r\n        heatmap.getColorGradient().forEach((gradient) => {\r\n            gradientStops.push(gradient.stop);\r\n            gradientColors.push(colorToRgba32(gradient.color));\r\n        });\r\n\r\n        // heatmap_todo investigate supporting ES6 for Float32Array / typed arrays\r\n        var heatmapDensityStopsBuffer = _emscriptenMemory.createBufferFromArray(heatmapDensityStops, _emscriptenMemory.createDoubleBuffer);\r\n        var heatmapRadiiBuffer = _emscriptenMemory.createBufferFromArray(heatmapRadii, _emscriptenMemory.createDoubleBuffer);\r\n        var heatmapGainsBuffer = _emscriptenMemory.createBufferFromArray(heatmapGains, _emscriptenMemory.createDoubleBuffer);\r\n        var gradientStopsBuffer = _emscriptenMemory.createBufferFromArray(gradientStops, _emscriptenMemory.createDoubleBuffer);\r\n        var gradientColorsBuffer = _emscriptenMemory.createBufferFromArray(gradientColors, _emscriptenMemory.createInt32Buffer);\r\n        var occludedMapFeaturesInt = occludedMapFeaturesToInt(heatmap.getOccludedMapFeatures());\r\n\r\n        var heatmapId = _heatmapApi_createHeatmap(\r\n            _emscriptenApiPointer,\r\n            indoorMapId,\r\n            indoorMapId.length,\r\n            indoorMapFloorId,\r\n            elevation,\r\n            elevationModeInt,\r\n            polygonVertexCoordsBuffer.ptr,\r\n            polygonVertexCoordsBuffer.element_count,\r\n            polygonRingVertexCountsBuffer.ptr,\r\n            polygonRingVertexCountsBuffer.element_count,\r\n            pointDataBuf.ptr,\r\n            pointDataBuf.element_count,\r\n            heatmap.getWeightMin(),\r\n            heatmap.getWeightMax(),\r\n            heatmap.getResolutionPixels(),\r\n            heatmap.getTextureBorderPercent(),\r\n            heatmap.getUseApproximation() ? 1 : 0,\r\n            heatmapDensityStopsBuffer.ptr,\r\n            heatmapDensityStopsBuffer.element_count,\r\n            heatmapRadiiBuffer.ptr,\r\n            heatmapRadiiBuffer.element_count,\r\n            heatmapGainsBuffer.ptr,\r\n            heatmapGainsBuffer.element_count,\r\n            gradientStopsBuffer.ptr,\r\n            gradientStopsBuffer.element_count,\r\n            gradientColorsBuffer.ptr,\r\n            gradientColorsBuffer.element_count,\r\n            heatmap.getDensityBlend(),\r\n            heatmap.getInterpolateDensityByZoom(),\r\n            heatmap.getZoomMin(),\r\n            heatmap.getZoomMax(),\r\n            heatmap.getOpacity(),\r\n            heatmap.getIntensityBias(),\r\n            heatmap.getIntensityScale(),\r\n            occludedMapFeaturesInt,\r\n            heatmap.getOccludedAlpha(),\r\n            heatmap.getOccludedSaturation(),\r\n            heatmap.getOccludedBrightness()\r\n        );\r\n\r\n        _emscriptenMemory.freeBuffer(polygonVertexCoordsBuffer);\r\n        _emscriptenMemory.freeBuffer(polygonRingVertexCountsBuffer);\r\n        _emscriptenMemory.freeBuffer(pointDataBuf);\r\n        _emscriptenMemory.freeBuffer(heatmapDensityStopsBuffer);\r\n        _emscriptenMemory.freeBuffer(heatmapRadiiBuffer);\r\n        _emscriptenMemory.freeBuffer(heatmapGainsBuffer);\r\n        _emscriptenMemory.freeBuffer(gradientStopsBuffer);\r\n        _emscriptenMemory.freeBuffer(gradientColorsBuffer);\r\n\r\n        return heatmapId;\r\n    };\r\n\r\n    this.destroyHeatmap = (heatmapId) => {\r\n        _heatmapApi_destroyHeatmap(_emscriptenApiPointer, heatmapId);\r\n    };\r\n\r\n    this.updateNativeState = (heatmapId, heatmap) => {\r\n        if (!heatmap._anyChanged()) {\r\n            return;\r\n        }\r\n        var changedFlags = heatmap._getChangedFlags();\r\n\r\n        if (changedFlags.indoorMap) {\r\n            var indoorMapId = heatmap.getIndoorMapId();\r\n            _heatmapApi_setIndoorMap(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                indoorMapId,\r\n                indoorMapId.length,\r\n                heatmap.getIndoorMapFloorId()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.elevation) {\r\n            var elevationModeInt = getElevationModeInt(heatmap.getElevationMode());\r\n            _heatmapApi_setElevation(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getElevation(),\r\n                elevationModeInt\r\n            );\r\n        }\r\n\r\n        if (changedFlags.densityBlend) {\r\n            _heatmapApi_setDensityBlend(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getDensityBlend()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.densityBlend) {\r\n            _heatmapApi_setInterpolateDensityByZoom(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getInterpolateDensityByZoom(),\r\n                heatmap.getZoomMin(),\r\n                heatmap.getZoomMax()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.intensityBias) {\r\n            _heatmapApi_setIntensityBias(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getIntensityBias()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.intensityScale) {\r\n            _heatmapApi_setIntensityScale(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getIntensityScale()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.opacity) {\r\n            _heatmapApi_setOpacity(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getOpacity()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.colorGradient) {\r\n            var gradientStops = [];\r\n            var gradientColors = [];\r\n            heatmap.getColorGradient().forEach((gradient) => {\r\n                gradientStops.push(gradient.stop);\r\n                gradientColors.push(colorToRgba32(gradient.color));\r\n            });\r\n\r\n            var gradientStopsBuffer = _emscriptenMemory.createBufferFromArray(gradientStops, _emscriptenMemory.createDoubleBuffer);\r\n            var gradientColorsBuffer = _emscriptenMemory.createBufferFromArray(gradientColors, _emscriptenMemory.createInt32Buffer);\r\n\r\n            _heatmapApi_setColorGradient(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                gradientStopsBuffer.ptr,\r\n                gradientStopsBuffer.element_count,\r\n                gradientColorsBuffer.ptr,\r\n                gradientColorsBuffer.element_count\r\n            );\r\n\r\n            _emscriptenMemory.freeBuffer(gradientStopsBuffer);\r\n            _emscriptenMemory.freeBuffer(gradientColorsBuffer);\r\n        }\r\n\r\n        if (changedFlags.resolution) {\r\n            _heatmapApi_setResolution(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getResolutionPixels()\r\n            );\r\n        }\r\n\r\n        if (changedFlags.densityStops) {\r\n            var heatmapDensityStops = [];\r\n            var heatmapRadii = [];\r\n            var heatmapGains = [];\r\n            heatmap.getDensityStops().forEach((density) => {\r\n                heatmapDensityStops.push(density.stop);\r\n                heatmapRadii.push(density.radius);\r\n                heatmapGains.push(density.gain);\r\n            });\r\n\r\n            var heatmapDensityStopsBuffer = _emscriptenMemory.createBufferFromArray(heatmapDensityStops, _emscriptenMemory.createDoubleBuffer);\r\n            var heatmapRadiiBuffer = _emscriptenMemory.createBufferFromArray(heatmapRadii, _emscriptenMemory.createDoubleBuffer);\r\n            var heatmapGainsBuffer = _emscriptenMemory.createBufferFromArray(heatmapGains, _emscriptenMemory.createDoubleBuffer);\r\n\r\n            _heatmapApi_setHeatmapDensities(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmapDensityStopsBuffer.ptr,\r\n                heatmapDensityStopsBuffer.element_count,\r\n                heatmapRadiiBuffer.ptr,\r\n                heatmapRadiiBuffer.element_count,\r\n                heatmapGainsBuffer.ptr,\r\n                heatmapGainsBuffer.element_count\r\n            );\r\n\r\n            _emscriptenMemory.freeBuffer(heatmapDensityStopsBuffer);\r\n            _emscriptenMemory.freeBuffer(heatmapRadiiBuffer);\r\n            _emscriptenMemory.freeBuffer(heatmapGainsBuffer);\r\n        }\r\n\r\n        if (changedFlags.useApproximation) {\r\n            _heatmapApi_useApproximation(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                heatmap.getUseApproximation() ? 1 : 0\r\n            );\r\n        }\r\n\r\n        if (changedFlags.data) {\r\n\r\n            var dataFlat = _buildFlatData(heatmap.getData());\r\n            var pointDataBuf = _emscriptenMemory.createBufferFromArray(dataFlat, _emscriptenMemory.createDoubleBuffer);\r\n\r\n            _heatmapApi_setData(\r\n                _emscriptenApiPointer,\r\n                heatmapId,\r\n                pointDataBuf.ptr,\r\n                pointDataBuf.element_count,\r\n                heatmap.getWeightMin(),\r\n                heatmap.getWeightMax()\r\n            );\r\n\r\n            _emscriptenMemory.freeBuffer(pointDataBuf);\r\n        }\r\n\r\n\r\n        heatmap._clearChangedFlags();\r\n    };\r\n}\r\n\r\nexport default EmscriptenHeatmapApi;\r\n","export function EmscriptenFrameRateApi(emscriptenApiPointer, cwrap, emscriptenModule, emscriptenMemory) {\r\n\r\n    var _emscriptenApiPointer = emscriptenApiPointer;\r\n\r\n    var _frameRateApi_SetTargetVSyncInterval = cwrap(\"frameRateApi_SetTargetVSyncInterval\", null, [\"number\", \"number\"]);\r\n    var _frameRateApi_SetThrottledTargetFrameInterval = cwrap(\"frameRateApi_SetThrottledTargetFrameInterval\", null, [\"number\", \"number\"]);\r\n    var _frameRateApi_SetIdleSecondsBeforeThrottle = cwrap(\"frameRateApi_SetIdleSecondsBeforeThrottle\", null, [\"number\", \"number\"]);\r\n    var _frameRateApi_SetThrottleWhenIdleEnabled = cwrap(\"frameRateApi_SetThrottleWhenIdleEnabled\", null, [\"number\", \"number\"]);\r\n    var _frameRateApi_CancelThrottle = cwrap(\"frameRateApi_CancelThrottle\", null, [\"number\"]);\r\n\r\n    this.setTargetVSyncInterval = (targetVSyncInterval) => {\r\n        _frameRateApi_SetTargetVSyncInterval(_emscriptenApiPointer, targetVSyncInterval);\r\n    };\r\n\r\n    this.setThrottledTargetFrameInterval = (throttledTargetFrameIntervalMS) => {\r\n        _frameRateApi_SetThrottledTargetFrameInterval(_emscriptenApiPointer, throttledTargetFrameIntervalMS);\r\n    };\r\n\r\n    this.setIdleSecondsBeforeThrottle = (idleSecondsBeforeThrottle) => {\r\n        _frameRateApi_SetIdleSecondsBeforeThrottle(_emscriptenApiPointer, idleSecondsBeforeThrottle);\r\n    };\r\n\r\n    this.setThrottleWhenIdleEnabled = (enabled) => {\r\n        _frameRateApi_SetThrottleWhenIdleEnabled(_emscriptenApiPointer, enabled ? 1 : 0);\r\n    };\r\n\r\n    this.cancelThrottle = () => {\r\n        _frameRateApi_CancelThrottle(_emscriptenApiPointer);\r\n    };\r\n}\r\n\r\nexport default EmscriptenFrameRateApi;\r\n","import EmscriptenMemory from \"./emscripten_memory\";\r\nimport EmscriptenGeofenceApi from \"./emscripten_geofence_api.js\";\r\nimport EmscriptenIndoorsApi from \"./emscripten_indoors_api.js\";\r\nimport EmscriptenPrecacheApi from \"./emscripten_precache_api.js\";\r\nimport EmscriptenSpacesApi from \"./emscripten_spaces_api.js\";\r\nimport EmscriptenThemesApi from \"./emscripten_themes_api.js\";\r\nimport EmscriptenCameraApi from \"./emscripten_camera_api.js\";\r\nimport EmscriptenExpandFloorsApi from \"./emscripten_expand_floors_api.js\";\r\nimport EmscriptenIndoorEntityApi from \"./emscripten_indoor_entity_api.js\";\r\nimport EmscriptenBuildingsApi from \"./emscripten_buildings_api.js\";\r\nimport EmscriptenRenderingApi from \"./emscripten_rendering_api.js\";\r\nimport EmscriptenLayerPointMappingApi from \"./emscripten_layer_point_mapping_api.js\";\r\nimport EmscriptenPropsApi from \"./emscripten_props_api.js\";\r\nimport EmscriptenIndoorMapEntityInformationApi from \"./emscripten_indoor_map_entity_information_api.js\";\r\nimport EmscriptenIndoorMapFloorOutlineInformationApi from \"./emscripten_indoor_map_floor_outline_information_api.js\";\r\nimport EmscriptenPolylineApi from \"./emscripten_polyline_api.js\";\r\nimport EmscriptenBlueSphereApi from \"./emscripten_blue_sphere_api.js\";\r\nimport EmscriptenMapRuntimeApi from \"./emscripten_map_runtime_api.js\";\r\nimport EmscriptenVersionApi from \"./emscripten_version_api.js\";\r\nimport EmscriptenHeatmapApi from \"./emscripten_heatmap_api.js\";\r\nimport EmscriptenFrameRateApi from \"./emscripten_frame_rate_api.js\";\r\n\r\nexport function EmscriptenApi(emscriptenModule) {\r\n\r\n    var _emscriptenModule = emscriptenModule;\r\n    var _ready = false;\r\n    var _eegeoApiPointer = null;\r\n    var _emscriptenApiPointer = null;\r\n\r\n    this.geofenceApi = null;\r\n    this.indoorsApi = null;\r\n    this.precacheApi = null;\r\n    this.spacesApi = null;\r\n    this.themesApi = null;\r\n    this.cameraApi = null;\r\n    this.expandFloorsApi = null;\r\n    this.indoorEntityApi = null;\r\n    this.renderingApi = null;\r\n    this.buildingsApi = null;\r\n    this.layerPointMappingApi = null;\r\n    this.propsApi = null;\r\n    this.indoorMapEntityInformationApi = null;\r\n    this.indoorMapFloorOutlineInformationApi = null;\r\n    this.polylineApi = null;\r\n    this.blueSphereApi = null;\r\n    this.mapRuntimeApi = null;\r\n    this.versionApi = null;\r\n    this.heatmapApi = null;\r\n    this.frameRateApi = null;\r\n\r\n    this.onInitialized = (eegeoApiPointer, emscriptenApiPointer, onUpdateCallback, onDrawCallback, onInitialStreamingCompletedCallback) => {\r\n        _eegeoApiPointer = eegeoApiPointer;\r\n        _emscriptenApiPointer = emscriptenApiPointer;\r\n\r\n        var cwrap = _emscriptenModule.cwrap;\r\n\r\n        var emscriptenMemory = new EmscriptenMemory(_emscriptenModule);\r\n\r\n        // legacy - eegeo api usage via eegeo api pointer\r\n        this.geofenceApi = new EmscriptenGeofenceApi(_eegeoApiPointer, cwrap, _emscriptenModule);\r\n        this.spacesApi = new EmscriptenSpacesApi(_eegeoApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.themesApi = new EmscriptenThemesApi(_eegeoApiPointer, cwrap, _emscriptenModule);\r\n        this.expandFloorsApi = new EmscriptenExpandFloorsApi(_eegeoApiPointer, cwrap, _emscriptenModule);\r\n\r\n        // emscripten-specific api usage via emscripten api pointer\r\n        // New apis should follow this pattern\r\n        this.layerPointMappingApi = new EmscriptenLayerPointMappingApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.buildingsApi = new EmscriptenBuildingsApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.indoorsApi = new EmscriptenIndoorsApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.cameraApi = new EmscriptenCameraApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.indoorEntityApi = new EmscriptenIndoorEntityApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.precacheApi = new EmscriptenPrecacheApi(_emscriptenApiPointer, cwrap, _emscriptenModule);\r\n        this.indoorMapEntityInformationApi = new EmscriptenIndoorMapEntityInformationApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.indoorMapFloorOutlineInformationApi = new EmscriptenIndoorMapFloorOutlineInformationApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.polylineApi = new EmscriptenPolylineApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.blueSphereApi = new EmscriptenBlueSphereApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.mapRuntimeApi = new EmscriptenMapRuntimeApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.versionApi = new EmscriptenVersionApi(_emscriptenApiPointer, cwrap, emscriptenMemory);\r\n        this.heatmapApi = new EmscriptenHeatmapApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.renderingApi = new EmscriptenRenderingApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.frameRateApi = new EmscriptenFrameRateApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n        this.propsApi = new EmscriptenPropsApi(_emscriptenApiPointer, cwrap, _emscriptenModule, emscriptenMemory);\r\n\r\n        var _setTopLevelCallbacks = _emscriptenModule.cwrap(\"setTopLevelCallbacks\", null, [\"number\", \"number\", \"number\", \"number\"]);\r\n        _setTopLevelCallbacks(\r\n            _eegeoApiPointer,\r\n            _emscriptenModule.addFunction(onUpdateCallback),\r\n            _emscriptenModule.addFunction(onDrawCallback),\r\n            _emscriptenModule.addFunction(onInitialStreamingCompletedCallback)\r\n        );\r\n        _ready = true;\r\n    };\r\n\r\n    this.ready = () => _ready;\r\n}\r\n\r\nexport default EmscriptenApi;\r\n","import EegeoMapController from \"../private/eegeo_map_controller\";\nimport EmscriptenApi from \"../private/emscripten_api/emscripten_api\";\nimport { Module } from \"../types/module\";\nimport type { Map, MapOptions } from \"./map\";\nimport \"../types/window\"; // defines the overrides for the window global\n\n/*\n * This is a collection of related functions extracted from the `wrld.js` (now .ts) file.\n * It relies on unscoped variables to store various states, maybe this could be converted to a class/object instead?\n */\n\nconst _eeGeoWebGLVersion = \"public/v2117\";\nconst _baseUrl = `https://cdn-webgl.wrld3d.com/eegeojs/${_eeGeoWebGLVersion}/`;\nconst _appName = \"eeGeoWebGL.jgz\";\n\nconst _mapObjects: EegeoMapController[] = [];\nlet _emscriptenStartedLoading = false;\nlet _emscriptenFinishedLoading = false;\nlet _mapsWaitingInitialization: Module[] = [];\n\nconst onEmscriptenLoaded = () => {\n  _emscriptenFinishedLoading = true;\n  _mapsWaitingInitialization.forEach((module) => {\n    window.createWrldModule(module);\n  });\n  _mapsWaitingInitialization = [];\n};\n\nconst createEmscriptenModule = () => {\n  if (!_emscriptenStartedLoading) {\n    const script = document.createElement(\"script\");\n    script.src = `${_baseUrl}${_appName}`;\n    script.onload = onEmscriptenLoaded;\n    document.body.appendChild(script);\n    _emscriptenStartedLoading = true;\n  }\n\n  const Module: Module = {} as Module;\n  Module.locateFile = (url) => {\n    const absUrl = `${_baseUrl}${url}`;\n    return absUrl;\n  };\n  Module.onExit = (exitCode) => {\n    if (exitCode === 1) {\n      let message = \"Error: wrld.js failed to initialize\";\n      if (!Module.ctx) {\n        message = \"Error: WebGL unavailable in this browser\";\n      }\n      _mapObjects.forEach((map) => {\n        map.onError(message);\n      });\n    }\n  };\n  return Module;\n};\n\nconst initializeMap = (module: Module) => {\n  if (!_emscriptenFinishedLoading) {\n    _mapsWaitingInitialization.push(module);\n  }\n  else {\n    window.createWrldModule(module);\n  }\n};\n\nconst findMapContainerElement = (elementOrId: string | HTMLElement): HTMLElement => {\n  if (elementOrId instanceof HTMLElement) {\n    return elementOrId;\n  }\n\n  if (typeof elementOrId === \"string\") {\n    const element = document.getElementById(elementOrId);\n    if (element) return element;\n  }\n\n  const idError = (elementOrId === null) ? \"\" : (` with id \"${elementOrId}\"`);\n  throw \"No map container found\" + idError;\n};\n\nexport const map = (domElement: HTMLElement | string, apiKey: string, options?: MapOptions): Map => {\n  const wrldModule = createEmscriptenModule();\n\n  domElement = findMapContainerElement(domElement);\n\n  const browserDocument = document;\n  const browserWindow = window;\n  const mapId = _mapObjects.length;\n  const mapApiObject = new EmscriptenApi(wrldModule);\n  const mapOptions = options || {};\n  const onMapRemove = () => { delete _mapObjects[mapId]; };\n  const map = new EegeoMapController(mapId, mapApiObject, domElement, apiKey, browserWindow, browserDocument, wrldModule, mapOptions, onMapRemove);\n  _mapObjects.push(map);\n\n  initializeMap(wrldModule);\n\n  return map.leafletMap;\n};\n\nexport const getMapById = (mapId: number): EegeoMapController => _mapObjects[mapId];\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\nimport { ElevationMode } from \"../types/elevationMode\";\r\nimport { WrldOptions } from \"../types/wrldOptions\";\r\n\r\nexport type CircleOptions = L.CircleMarkerOptions & WrldOptions;\r\n\r\nexport declare class CircleType extends L.Circle {\r\n  options: CircleOptions;\r\n  constructor(latLng: L.LatLngExpression, options?: CircleOptions);\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n  getElevationMode(): ElevationMode;\r\n  setElevationMode(elevationMode: ElevationMode): this;\r\n}\r\n\r\nexport type Circle = CircleType;\r\n\r\nexport const Circle: typeof CircleType = L.Circle.extend({\r\n  options: {\r\n    elevation: 0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n  },\r\n\r\n  _project: function () {\r\n    // Circles are defined as a single LatLng, and consequently won't scale correctly when indoor maps are expanded\r\n    // (other prims like polygons 'just work', as all LatLngs are transformed on the C++ side).\r\n    // To fix this, we'd need to adjust the calculations below to take into account a scale transform, or similar\r\n    // (this is not currently exposed in the api).\r\n    const latLng = this._map.latLngsForLayer(this)[0];\r\n    const lat = latLng.lat;\r\n    const lng = latLng.lng;\r\n    const alt = latLng.alt || 0.0;\r\n\r\n    const map = this._map,\r\n      degToRad = Math.PI / 180,\r\n      earthRadius = 6378100;\r\n\r\n    const latR = this._mRadius / earthRadius / degToRad;\r\n    const a = Math.sin(lat * degToRad);\r\n    const b = Math.cos(lat * degToRad);\r\n    let lngR = Math.acos((Math.cos(latR * degToRad) - a * a) / (b * b)) / degToRad;\r\n\r\n    if (isNaN(lngR) || lngR === 0) {\r\n      lngR = latR / Math.cos(lat * degToRad);\r\n    }\r\n\r\n    const heading = map.getCameraHeadingDegrees() * degToRad;\r\n    const forwardLatLng = [lat + latR * Math.cos(heading), lng + lngR * Math.sin(heading), alt];\r\n    const rightLatLng = [lat - latR * Math.sin(heading), lng + lngR * Math.cos(heading), alt];\r\n    this._point = map.latLngToLayerPoint([lat, lng, alt]);\r\n    this._radius = isNaN(lngR)\r\n      ? 0\r\n      : Math.max(Math.round(this._point.distanceTo(map.latLngToLayerPoint(rightLatLng))), 1);\r\n    this._radiusY = Math.max(Math.round(this._point.distanceTo(map.latLngToLayerPoint(forwardLatLng))), 1);\r\n\r\n    this._updateBounds();\r\n  },\r\n\r\n  getElevation: function () {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  setElevation: function (elevation: number) {\r\n    this.options.elevation = elevation;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (mode: ElevationMode) {\r\n    if (isValidElevationMode(mode)) {\r\n      this.options.elevationMode = mode;\r\n\r\n      if (this._map !== null) {\r\n        this._map._createPointMapping(this);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  getElevationMode: function () {\r\n    return this.options.elevationMode;\r\n  },\r\n});\r\n\r\nexport const circle = factoryFor(Circle);\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\nimport { WrldOptions } from \"../types/wrldOptions\";\r\nimport { ElevationMode } from \"../types/elevationMode\";\r\nimport Map from \"./map\";\r\n\r\nexport type PolygonOptions = L.PolylineOptions & WrldOptions;\r\n\r\ndeclare class PolygonType extends L.Polygon {\r\n  options: PolygonOptions;\r\n  protected _map: Map;\r\n  constructor(\r\n    latlngs: L.LatLngExpression[] | L.LatLngExpression[][] | L.LatLngExpression[][][],\r\n    options?: PolygonOptions\r\n  );\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n  getElevationMode(): ElevationMode;\r\n  setElevationMode(elevationMode: ElevationMode): this;\r\n  protected _setLatLngs(latlngs: L.LatLng[]): this;\r\n}\r\n\r\nexport type Polygon = PolygonType;\r\n\r\nexport const Polygon: typeof PolygonType = L.Polygon.extend({\r\n  options: {\r\n    elevation: 0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n  },\r\n\r\n  _projectLatlngs: function (this: Polygon, latlngs: L.LatLng[], result: undefined, projectedBounds: L.LatLngBounds[]) {\r\n    if (!this._map._projectLatlngs(this, latlngs, result, projectedBounds)) {\r\n      // @ts-ignore we don't have a type definition for this\r\n      L.Polygon.prototype._projectLatlngs.call(this, latlngs, result, projectedBounds);\r\n    }\r\n  },\r\n\r\n  /** Replaces all the points in the polygon with the given array of geographical points. **/\r\n  setLatLngs: function (this: Polygon, latlngs: L.LatLng[]) {\r\n    this._setLatLngs(latlngs);\r\n\r\n    if (this._map) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this.redraw();\r\n  },\r\n\r\n  _convertLatLngs: function (this: Polygon, latlngs: L.LatLng[]) {\r\n    // @ts-ignore we don't have a type definition for this\r\n    const result = L.Polygon.prototype._convertLatLngs.call(this, latlngs);\r\n\r\n    if (this._map) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return result;\r\n  },\r\n\r\n  getElevation: function (this: Polygon) {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  setElevation: function (this: Polygon, elevation: number) {\r\n    this.options.elevation = elevation;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (this: Polygon, mode: ElevationMode) {\r\n    if (isValidElevationMode(mode)) {\r\n      this.options.elevationMode = mode;\r\n\r\n      if (this._map !== null) {\r\n        this._map._createPointMapping(this);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  getElevationMode: function () {\r\n    return this.options.elevationMode;\r\n  },\r\n});\r\n\r\nexport const polygon = factoryFor(Polygon);\r\n","import { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\nimport L from \"leaflet\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport { WrldOptions } from \"../types/wrldOptions\";\r\nimport { ElevationMode } from \"../types/elevationMode\";\r\nimport Map from \"./map\";\r\n\r\nexport type PolylineOptions = L.PolylineOptions & WrldOptions;\r\n\r\ndeclare class PolylineType extends L.Polyline {\r\n  options: PolylineOptions;\r\n  protected _map: Map;\r\n  constructor(\r\n    latlngs: L.LatLngExpression[] | L.LatLngExpression[][] | L.LatLngExpression[][][],\r\n    options?: PolylineOptions\r\n  );\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n  getElevationMode(): ElevationMode;\r\n  setElevationMode(elevationMode: ElevationMode): this;\r\n}\r\n\r\nexport type Polyline = PolylineType;\r\n\r\nexport const Polyline: typeof PolylineType = L.Polyline.extend({\r\n  options: {\r\n    elevation: 0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n  },\r\n\r\n  _projectLatlngs: function (this: Polyline, latlngs: L.LatLng[], result: unknown, projectedBounds: L.LatLngBounds[]) {\r\n    if (!this._map._projectLatlngs(this, latlngs, result, projectedBounds)) {\r\n      // @ts-ignore we don't have a type definition for this\r\n      L.Polyline.prototype._projectLatlngs.call(this, latlngs, result, projectedBounds);\r\n    }\r\n  },\r\n\r\n  /** Replaces all the points in the polyline with the given array of geographical points. */\r\n  setLatLngs: function (\r\n    this: Polyline,\r\n    latlngs: L.LatLngExpression[] | L.LatLngExpression[][] | L.LatLngExpression[][][]\r\n  ) {\r\n    const redraw = L.Polyline.prototype.setLatLngs.call(this, latlngs);\r\n\r\n    if (this._map) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return redraw;\r\n  },\r\n\r\n  addLatLng: function (this: Polyline, latlng: L.LatLngExpression | L.LatLngExpression[], latlngs?: L.LatLng[]) {\r\n    const redraw = L.Polyline.prototype.addLatLng.call(this, latlng, latlngs);\r\n\r\n    if (this._map) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return redraw;\r\n  },\r\n\r\n  getElevation: function (this: Polyline) {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  setElevation: function (this: Polyline, elevation: number) {\r\n    this.options.elevation = elevation;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (this: Polyline, mode: ElevationMode) {\r\n    if (isValidElevationMode(mode)) {\r\n      this.options.elevationMode = mode;\r\n\r\n      if (this._map !== null) {\r\n        this._map._createPointMapping(this);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  getElevationMode: function (this: Polyline) {\r\n    return this.options.elevationMode;\r\n  },\r\n});\r\n\r\nexport const polyline = factoryFor(Polyline);\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\n\r\nimport { WrldOptions } from \"../types/wrldOptions\";\r\nimport { ElevationMode } from \"../types/elevationMode\";\r\nimport Map from \"./map\";\r\n\r\nexport type RectangleOptions = L.PolylineOptions & WrldOptions;\r\n\r\ndeclare class RectangleType extends L.Rectangle {\r\n  options: RectangleOptions;\r\n  protected _map: Map;\r\n  constructor(latLngBounds: L.LatLngBoundsExpression, options?: RectangleOptions);\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n  getElevationMode(): ElevationMode;\r\n  setElevationMode(elevationMode: ElevationMode): this;\r\n}\r\n\r\nexport type Rectangle = RectangleType;\r\n\r\nexport const Rectangle: typeof RectangleType = L.Rectangle.extend({\r\n  options: {\r\n    elevation: 0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n  },\r\n\r\n  _projectLatlngs: function (\r\n    this: Rectangle,\r\n    latlngs: L.LatLng[],\r\n    result: undefined,\r\n    projectedBounds: L.LatLngBounds[]\r\n  ) {\r\n    if (!this._map._projectLatlngs(this, latlngs, result, projectedBounds)) {\r\n      // @ts-ignore we don't have a type definition for this\r\n      L.Rectangle.prototype._projectLatlngs.call(this, latlngs, result, projectedBounds);\r\n    }\r\n  },\r\n\r\n  // @method setLatLngs(latlngs: LatLng[]): this\r\n  // Replaces all the points in the polyline with the given array of geographical points.\r\n  setLatLngs: function (\r\n    this: Rectangle,\r\n    latlngs: L.LatLngExpression[] | L.LatLngExpression[][] | L.LatLngExpression[][][]\r\n  ) {\r\n    const redraw = L.Rectangle.prototype.setLatLngs.call(this, latlngs);\r\n\r\n    if (this._map) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return redraw;\r\n  },\r\n\r\n  getElevation: function (this: Rectangle) {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  setElevation: function (this: Rectangle, elevation: number) {\r\n    this.options.elevation = elevation;\r\n\r\n    if (this._map !== null) {\r\n      this._map._createPointMapping(this);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (this: Rectangle, mode: ElevationMode) {\r\n    if (isValidElevationMode(mode)) {\r\n      this.options.elevationMode = mode;\r\n\r\n      if (this._map !== null) {\r\n        this._map._createPointMapping(this);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  getElevationMode: function (this: Rectangle) {\r\n    return this.options.elevationMode;\r\n  },\r\n});\r\n\r\nexport const rectangle = factoryFor(Rectangle);\r\n","import L from \"leaflet\";\r\n\r\nimport { ElevationMode } from \"../types/elevationMode\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../private/elevation_mode\";\r\nimport { Map, MapId, MapFloorId } from \"../wrld.js\";\r\nimport { factoryFor } from \"../private/factoryFor\";\r\n\r\nexport type PropOptions = {\r\n  elevation?: number;\r\n  elevationMode?: ElevationMode;\r\n  indoorMapId?: MapId;\r\n  indoorMapFloorId?: MapFloorId;\r\n  headingDegrees?: number;\r\n};\r\n\r\ntype Location = Parameters<typeof L.latLng>[0];\r\n\r\nexport class Prop {\r\n  private _map: null | Map;\r\n  private _name: string;\r\n  private _geometryId: string;\r\n  private __geometryIdNeedsChanged: boolean;\r\n  private _location: L.LatLng;\r\n  private __locationNeedsChanged: boolean;\r\n  private _indoorMapId: MapId;\r\n  private _indoorMapFloorId: MapFloorId;\r\n  private _headingDegrees: number;\r\n  private __headingDegreesNeedsChanged: boolean;\r\n  private _elevation: number;\r\n  private __elevationNeedsChanged: boolean;\r\n  private _elevationMode: ElevationMode;\r\n  private __elevationModeNeedsChanged: boolean;\r\n\r\n  constructor(name: string, geometryId: string, location: Location, config: PropOptions = {}) {\r\n    this._map = null;\r\n    this._name = name;\r\n    this._geometryId = geometryId;\r\n    this.__geometryIdNeedsChanged = false;\r\n    this._location = L.latLng(location);\r\n    this.__locationNeedsChanged = false;\r\n    this._indoorMapId = config[\"indoorMapId\"] || \"\";\r\n    this._indoorMapFloorId = config[\"indoorMapFloorId\"] || 0;\r\n    this._headingDegrees = config[\"headingDegrees\"] || 0.0;\r\n    this.__headingDegreesNeedsChanged = false;\r\n    this._elevation = config[\"elevation\"] || 0.0;\r\n    this.__elevationNeedsChanged = false;\r\n    this._elevationMode = config[\"elevationMode\"] || ElevationModeType.HEIGHT_ABOVE_GROUND;\r\n    this.__elevationModeNeedsChanged = false;\r\n  }\r\n\r\n  getLocation = (): L.LatLng => this._location;\r\n\r\n  setLocation = (location: Location): this => {\r\n    this._location = L.latLng(location);\r\n    this.__locationNeedsChanged = true;\r\n    return this;\r\n  };\r\n\r\n  getIndoorMapId = (): MapId => this._indoorMapId;\r\n\r\n  getIndoorMapFloorId = (): MapFloorId => this._indoorMapFloorId;\r\n\r\n  getHeadingDegrees = (): number => this._headingDegrees;\r\n\r\n  setHeadingDegrees = (headingDegrees: number): this => {\r\n    this._headingDegrees = headingDegrees;\r\n    this.__headingDegreesNeedsChanged = true;\r\n    return this;\r\n  };\r\n\r\n  getElevation = (): number => this._elevation;\r\n\r\n  setElevation = (elevation: number): this => {\r\n    this._elevation = elevation;\r\n    this.__elevationNeedsChanged = true;\r\n    return this;\r\n  };\r\n\r\n  getElevationMode = (): ElevationMode => this._elevationMode;\r\n\r\n  setElevationMode = (elevationModeString: ElevationModeType): this => {\r\n    if (isValidElevationMode(elevationModeString)) {\r\n      this._elevationMode = elevationModeString;\r\n      this.__elevationModeNeedsChanged = true;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  getGeometryId = (): string => this._geometryId;\r\n\r\n  setGeometryId = (geometryId: string): this => {\r\n    this._geometryId = geometryId;\r\n    this.__geometryIdNeedsChanged = true;\r\n    return this;\r\n  };\r\n\r\n  getName = (): string => this._name;\r\n\r\n  addTo = (map: Map): this => {\r\n    if (this._map !== null) {\r\n      this.remove();\r\n    }\r\n    this._map = map;\r\n    map.props.addProp(this);\r\n    return this;\r\n  };\r\n\r\n  remove = (): this => {\r\n    if (this._map !== null) {\r\n      this._map.props.removeProp(this);\r\n      this._map = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /** @internal */\r\n  _geometryIdNeedsChanged = (): boolean => this.__geometryIdNeedsChanged;\r\n\r\n  /** @internal */\r\n  _onGeometryIdChanged = (): void => {\r\n    this.__geometryIdNeedsChanged = false;\r\n  };\r\n\r\n  /** @internal */\r\n  _locationNeedsChanged = (): boolean => this.__locationNeedsChanged;\r\n\r\n  /** @internal */\r\n  _onLocationChanged = (): void => {\r\n    this.__locationNeedsChanged = false;\r\n  };\r\n\r\n  /** @internal */\r\n  _headingDegreesNeedsChanged = (): boolean => this.__headingDegreesNeedsChanged;\r\n\r\n  /** @internal */\r\n  _onHeadingDegreesChanged = (): void => {\r\n    this.__headingDegreesNeedsChanged = false;\r\n  };\r\n\r\n  /** @internal */\r\n  _elevationNeedsChanged = (): boolean => this.__elevationNeedsChanged;\r\n\r\n  /** @internal */\r\n  _onElevationChanged = (): void => {\r\n    this.__elevationNeedsChanged = false;\r\n  };\r\n\r\n  /** @internal */\r\n  _elevationModeNeedsChanged = (): boolean => this.__elevationModeNeedsChanged;\r\n\r\n  /** @internal */\r\n  _onElevationModeChanged = (): void => {\r\n    this.__elevationModeNeedsChanged = false;\r\n  };\r\n}\r\n\r\nexport const prop = factoryFor(Prop);\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../../private/factoryFor\";\r\nimport { Color } from \"../../types/color\";\r\nimport { ElevationMode } from \"../../types/elevationMode\";\r\nimport { Map, MapId, MapFloorId } from \"./../map\";\r\n\r\nexport type PolygonOptions = L.PolylineOptions & {\r\n  color?: Color;\r\n  elevation?: number;\r\n  elevationMode?: ElevationMode;\r\n  indoorMapId?: MapId;\r\n  indoorMapFloorId?: MapFloorId;\r\n};\r\n\r\nexport class Polygon {\r\n  private _map: Map | null;\r\n  private _outerRing: L.LatLng[];\r\n  private _holes: L.LatLng[][];\r\n  private _config: PolygonOptions;\r\n  private _color: Color;\r\n  private __colorNeedsChanged: boolean;\r\n\r\n  constructor(latLngs: L.LatLngTuple[] | L.LatLngTuple[][], config?: PolygonOptions) {\r\n    this._map = null;\r\n    this._outerRing = [];\r\n    this._holes = [];\r\n    this._config = config || {};\r\n\r\n    let arrayDepth = 0;\r\n    let testElement: L.LatLngTuple[][] | L.LatLngTuple[] | L.LatLngTuple | number = latLngs;\r\n\r\n    do {\r\n      testElement = testElement[0];\r\n      arrayDepth++;\r\n    } while (Array.isArray(testElement));\r\n\r\n    if (arrayDepth === 2) {\r\n      this._outerRing = loadLatLngs(latLngs as L.LatLngTuple[]);\r\n    } else if (arrayDepth === 3) {\r\n      this._outerRing = loadLatLngs(latLngs[0] as L.LatLngTuple[]);\r\n      const holeLatLngs = latLngs.splice(1) as L.LatLngTuple[][];\r\n      holeLatLngs.forEach((holeLatLng) => {\r\n        this._holes.push(loadLatLngs(holeLatLng));\r\n      });\r\n    } else {\r\n      throw new Error(\"Incorrect array input format.\");\r\n    }\r\n\r\n    this._color = this._config[\"color\"] || [0, 0, 255, 128];\r\n    this.__colorNeedsChanged = true;\r\n  }\r\n\r\n  getColor = (): Color => this._color;\r\n\r\n  setColor = (color: Color): this => {\r\n    this._color = color;\r\n    this.__colorNeedsChanged = true;\r\n    return this;\r\n  };\r\n\r\n  addHole = (points: Parameters<typeof loadLatLngs>[0]): this => {\r\n    this._holes.push(loadLatLngs(points));\r\n    return this;\r\n  };\r\n\r\n  getHoles = (): L.LatLng[][] => this._holes;\r\n\r\n  getPoints = (): L.LatLng[] => this._outerRing;\r\n\r\n  addTo = (map: Map): this => {\r\n    if (this._map !== null) {\r\n      this.remove();\r\n    }\r\n    this._map = map;\r\n    map._polygonModule.addPolygon(this);\r\n    return this;\r\n  };\r\n\r\n  remove = (): this => {\r\n    if (this._map !== null) {\r\n      this._map._polygonModule.removePolygon(this);\r\n      this._map = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /** @internal */\r\n  _getConfig = (): PolygonOptions => this._config;\r\n\r\n  /** @internal */\r\n  _colorNeedsChanged = (): boolean => this.__colorNeedsChanged;\r\n\r\n  /** @internal */\r\n  _onColorChanged = (): void => {\r\n    this.__colorNeedsChanged = false;\r\n  };\r\n}\r\n\r\nconst loadLatLngs = (coords: Parameters<typeof L.latLng>[0][]): L.LatLng[] => {\r\n  const points: L.LatLng[] = [];\r\n  coords.forEach(function (coord) {\r\n    points.push(L.latLng(coord));\r\n  });\r\n  return points;\r\n};\r\n\r\nexport const polygon = factoryFor(Polygon);\r\n","import L from \"leaflet\";\r\nimport { factoryFor } from \"../../private/factoryFor\";\r\nimport { ElevationModeType, isValidElevationMode } from \"../../private/elevation_mode\";\r\nimport { Color } from \"../../types/color\";\r\nimport { ElevationMode } from \"../../types/elevationMode\";\r\nimport { MapId, MapFloorId } from \"../map\";\r\nimport { WrldOptions } from \"../../types/wrldOptions\";\r\n\r\nexport type PolylineOptions = WrldOptions & {\r\n  color?: Color;\r\n  weight?: number;\r\n  miterLimit?: number;\r\n};\r\n\r\nexport declare class PolylineType extends L.Polyline {\r\n  constructor(latlngs: L.LatLngExpression[], options?: PolylineOptions);\r\n  getPoints(): L.LatLng[];\r\n  getIndoorMapId(): MapId;\r\n  getIndoorMapFloorId(): MapFloorId;\r\n  setIndoorMapWithFloorId(indoorMapId: MapId, indoorMapFloorId: MapFloorId): this;\r\n  getElevation(): number;\r\n  setElevation(elevation: number): this;\r\n  getElevationMode(): ElevationMode;\r\n  setElevationMode(elevationMode: ElevationMode): this;\r\n  getWidth(): number;\r\n  getColor(): Color;\r\n  getMiterLimit(): number;\r\n  setOptions(options: PolylineOptions): this;\r\n  setStyle(options: PolylineOptions): this;\r\n}\r\n\r\nexport type Polyline = PolylineType;\r\n\r\nexport const Polyline: typeof PolylineType = L.Polyline.extend({\r\n  initialize: function (latLngs: L.LatLngExpression[], options?: PolylineOptions) {\r\n    L.Polyline.prototype.initialize.call(this, latLngs, options || {});\r\n  },\r\n\r\n  options: {\r\n    elevation: 0.0,\r\n    elevationMode: ElevationModeType.HEIGHT_ABOVE_GROUND,\r\n    indoorMapId: \"\",\r\n    indoorMapFloorId: 0,\r\n    weight: 3.0,\r\n    miterLimit: 10.0,\r\n  },\r\n\r\n  getPoints: function () {\r\n    return this.getLatLngs();\r\n  },\r\n\r\n  getIndoorMapId: function () {\r\n    return this.options.indoorMapId;\r\n  },\r\n\r\n  getIndoorMapFloorId: function () {\r\n    return this.options.indoorMapFloorId;\r\n  },\r\n\r\n  getElevation: function () {\r\n    return this.options.elevation;\r\n  },\r\n\r\n  getElevationMode: function () {\r\n    return this.options.elevationMode;\r\n  },\r\n\r\n  getWidth: function () {\r\n    return this.options.weight;\r\n  },\r\n\r\n  getColor: function () {\r\n    return this.options.color;\r\n  },\r\n\r\n  getMiterLimit: function () {\r\n    return this.options.miterLimit;\r\n  },\r\n\r\n  setIndoorMapWithFloorId: function (indoorMapId: MapId, indoorMapFloorId: MapFloorId) {\r\n    this.options.indoorMapId = indoorMapId;\r\n    this.options.indoorMapFloorId = indoorMapFloorId;\r\n    this._needsNativeUpdate = true;\r\n    return this;\r\n  },\r\n\r\n  setElevation: function (elevation: ElevationMode) {\r\n    this.options.elevation = elevation;\r\n    this._needsNativeUpdate = true;\r\n    return this;\r\n  },\r\n\r\n  setElevationMode: function (mode: ElevationMode) {\r\n    if (isValidElevationMode(mode)) {\r\n      this.options.elevationMode = mode;\r\n    }\r\n    this._needsNativeUpdate = true;\r\n    return this;\r\n  },\r\n\r\n  setOptions: function (options: PolylineOptions) {\r\n    return this.setStyle(options);\r\n  },\r\n\r\n  setStyle: function (style: L.PathOptions) {\r\n    L.Polyline.prototype.setStyle.call(this, style);\r\n    this._needsNativeUpdate = true;\r\n    return this;\r\n  },\r\n\r\n  // dirty flag, for polyline_module use\r\n  _needsNativeUpdate: false,\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  _update: function () {},\r\n\r\n  beforeAdd: function () {\r\n    // don't call base, avoid assigning this._renderer\r\n  },\r\n\r\n  onAdd: function () {\r\n    this._map._polylineModule.addPolyline(this);\r\n  },\r\n\r\n  onRemove: function () {\r\n    this._map._polylineModule.removePolyline(this);\r\n  },\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  redraw: function () {},\r\n});\r\n\r\nexport const polyline = factoryFor(Polyline);\r\n","import type IndoorMapFloorOutlinePolygon from \"./indoor_map_floor_outline_polygon\";\r\nimport type { Map, MapId, MapFloorId } from \"../map\";\r\nimport { factoryFor } from \"../../private/factoryFor\";\r\n\r\nexport class IndoorMapFloorOutlineInformation {\r\n  private _nativeId: string | null;\r\n  private _map: Map | null;\r\n  private _indoorMapId: MapId;\r\n  private _indoorMapFloorId: number;\r\n  private _outlinePolygons: IndoorMapFloorOutlinePolygon[];\r\n  private _isLoaded: boolean;\r\n\r\n  constructor(indoorMapId: MapId, indoorMapFloorId: MapFloorId) {\r\n    this._nativeId = null;\r\n    this._map = null;\r\n    this._indoorMapId = indoorMapId;\r\n    this._indoorMapFloorId = indoorMapFloorId;\r\n    this._outlinePolygons = [];\r\n    this._isLoaded = false;\r\n  }\r\n\r\n  getIndoorMapId(): MapId {\r\n    return this._indoorMapId;\r\n  }\r\n\r\n  getIndoorMapFloorId(): MapFloorId {\r\n    return this._indoorMapFloorId;\r\n  }\r\n\r\n  getIndoorMapFloorOutlinePolygons(): IndoorMapFloorOutlinePolygon[] {\r\n    return this._outlinePolygons;\r\n  }\r\n\r\n  getIsLoaded(): boolean {\r\n    return this._isLoaded;\r\n  }\r\n\r\n  getId(): string | null {\r\n    return this._nativeId;\r\n  }\r\n\r\n  addTo(map: Map): this {\r\n    if (this._map !== null) {\r\n      this.remove();\r\n    }\r\n    this._map = map;\r\n    this._map.indoorMapFloorOutlines._getImpl().addIndoorMapFloorOutlineInformation(this);\r\n    return this;\r\n  }\r\n\r\n  remove = (): this => {\r\n    if (this._map !== null) {\r\n      this._map.indoorMapFloorOutlines._getImpl().removeIndoorMapFloorOutlineInformation(this);\r\n      this._map = null;\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /** @internal */\r\n  _setNativeHandle = (nativeId: string): void => {\r\n    this._nativeId = nativeId;\r\n  };\r\n\r\n  /** @internal */\r\n  _setData = (data: IndoorMapFloorOutlinePolygon[]): void => {\r\n    this._outlinePolygons = data;\r\n    this._isLoaded = true;\r\n  };\r\n}\r\n\r\nexport const indoorMapFloorOutlineInformation = factoryFor(IndoorMapFloorOutlineInformation);\r\n","import * as Wrld from \"./wrld\";\r\n\r\n// @ts-ignore For compatibility with eeGeoWebGL we need L.Wrld present\r\nwindow.L.Wrld = Wrld;\r\n\r\n// The default image path is broken when using Browserify - it searches the script tags on the page\r\nWrld.Icon.Default.imagePath = \"https://unpkg.com/leaflet@1.0.1/dist/images/\";\r\n\r\nexport default Wrld;\r\n"],"names":["Array","prototype","findIndex","predicate","this","TypeError","list","Object","length","thisArg","arguments","i","call","find","value","_getOptionsPropertyOrNull","layer","propertyName","options","getIndoorMapId","indoorMapId","getIndoorMapFloorId","getIndoorMapFloorIndex","indoorMapFloorIndex","_copyOption","sourceOptions","destOptions","sourcePropertyName","destPropertyName","factoryFor","cla$$","args","Popup","L","extend","elevation","closeWhenMovedOffscreen","_onScreen","getElevation","setElevation","getCloseWhenMovedOffscreen","setCloseWhenMovedOffscreen","_updateContent","_content","node","_contentNode","content","_source","contentNeedsUpdate","outerHTML","innerHTML","hasChildNodes","removeChild","firstChild","appendChild","fire","update","_map","_container","style","visibility","_updateLayout","_updatePosition","_adjustPan","_checkOutOfBounds","_close","latLngs","latLngsForLayer","pos","latLngToLayerPoint","offset","point","anchor","_getAnchor","x","Math","round","y","_zoomAnimated","DomUtil","setPosition","add","bottom","_containerBottom","left","_containerLeft","_containerWidth","bottom_style","left_style","getStyle","rect","getBoundingClientRect","rectHeight","top","rectWidth","right","mapRect","popup","Vector3","constructor","z","vector","isArray","toPoint","Vector4","w","_altitudes","_lerp","a","b","c","_altitudeToZoom","altitude","comparisonFunc","zoom","zoomLevelDistance","zoomlevel","nearestZoomBelow","floor","nearestZoomAbove","ceil","distance","smallestAltitude","zoomAbove","d","max","_nearestZoomAbove","_nearestZoomBelow","undefinedPoint","undefinedLatLng","latLng","convertLatLngToVector","lat","PI","lng","cos","sin","Renderer","include","_updateTransform","Map","initialize","browserWindow","id","onRemoveCallback","cameraModule","precacheModule","themesModule","indoorsModule","polygonModule","polylineModule","layerPointMappingModule","routingModule","renderingModule","buildingsModule","propModule","indoorMapEntityInformationModule","indoorMapFloorOutlineInformationModule","blueSphereModule","mapRuntimeModule","versionModule","heatmapModule","frameRateModule","_browserWindow","_onRemoveCallback","_cameraModule","_precacheModule","_polygonModule","_polylineModule","_layerPointMappingModule","_frameRateModule","themes","indoors","routes","rendering","buildings","props","indoorMapEntities","indoorMapFloorOutlines","blueSphere","heatmaps","_mapRuntimeModule","_layersOnMap","_spacesApi","_ready","_viewInitialized","dragging","disable","touchZoom","doubleClickZoom","scrollWheelZoom","boxZoom","keyboard","attributionControl","setPrefix","addAttribution","_initEvents","remove","surface","DomEvent","_targets","stamp","onOff","_handleDOMEvent","trackResize","_onResize","Browser","any3d","transform3DLimit","_onMoveEnd","e","type","preventDefault","element","target","className","indexOf","stopPropagation","parentNode","addLayer","_createPointMapping","removeLayer","_removePointMapping","_removeAllLayers","keys","forEach","undefined","onInitialized","emscriptenApi","spacesApi","panes","getPanes","mapPane","zIndex","pointerEvents","overlayPane","onInitialStreamingCompleted","_this$_spacesApi","worldToScreen","layerPointToLatLng","_this$_spacesApi2","screenToWorldPoint","latLngToContainerPoint","containerPointToLatLng","containerPointToLayerPoint","layerPointToContainerPoint","createPointMapping","removePointMapping","_projectLatlngs","latlngs","result","projectedBounds","projectLatlngs","_updateZoom","_zoom","getZoom","setView","center","reset","_limitZoom","_limitCenter","maxBounds","pan","animate","allowInterruption","_options","location","zoomIn","delta","config","getCenter","getCurrentZoomLevel","durationSeconds","getMaxZoom","once","zoomOut","getMinZoom","setZoomAround","setViewVerticallyLocked","isVerticallyLocked","setVerticallyLocked","fitBounds","bounds","setViewToBounds","fitWorld","setZoom","panTo","panInsideBounds","panBy","pause","Pause","resume","Resume","getBounds","topLeft","Point","topRight","getContainer","clientWidth","bottomLeft","clientHeight","BottomRight","latLngBounds","locate","stopLocate","Remove","openPopup","_popup","setLatLng","setContent","_onUpdate","_onDraw","_updateLayerVisibility","eachLayer","redraw","getAltitudeAtLatLng","_this$_spacesApi3","getMortonKeyAtLatLng","_this$_spacesApi4","getMortonKeyCenter","mortonKey","_this$_spacesApi5","getMortonKeyCorners","insetMeters","_this$_spacesApi6","getCameraDistanceToInterest","getDistanceToInterest","getCameraPitchDegrees","getPitchDegrees","setCameraTiltDegrees","tilt","setTiltDegrees","getCameraTiltDegrees","getTiltDegrees","getCameraHeadingDegrees","getHeadingDegrees","setCameraHeadingDegrees","heading","setHeadingDegrees","getMaximumPrecacheRadius","precache","radius","completionCallback","precacheWithDetailedResult","precacheResult","succeeded","setMapCollapsed","isMapCollapsed","setDrawClearColor","clearColor","setClearColor","setTargetVSyncInterval","targetVSyncInterval","setThrottledTargetFrameInterval","throttledTargetFrameIntervalMilliseconds","setIdleSecondsBeforeThrottle","idleSecondsBeforeThrottle","setThrottleWhenIdleEnabled","throttleWhenIdleEnabled","cancelFrameRateThrottle","cancelThrottle","isHardwareAccelerationAvailable","canvas","document","createElement","hardwareAccelerationEnforcer","failIfMajorPerformanceCaveat","webglContext","getContext","WebGLRenderingContext","_getAngleFromCameraToHorizon","earthRadius","acos","_isLatLngBehindEarth","latlng","cameraVector","maxAngle","latlngVector","layerIds","getLatLng","isValid","getCenterOfLayer","FeatureGroup","latLngBehindEarth","hasLayer","indoorMapDisplayFilter","_isVisibleForCurrentMapState","currentMapStateIsOutdoors","isIndoors","layerIsOutdoors","hasIndoorMap","displayOption","activeIndoorMapId","activeIndoorMapFloorId","activeIndoorMapFloorIndex","getLayerDisplayOption","matchesCurrentFloor","matchesIndoorMap","getActiveIndoorMap","_this$indoors$getActi","getFloor","_this$indoors$getFloo","getFloorZOrder","_this$indoors$getFloo2","getFloorIndex","_rawPanBy","HTMLMapContainer","browserDocument","parentElement","canvasId","canvasWidth","canvasHeight","backgroundColor","containerId","mapId","_browserDocument","_createDOMElement","tagName","attributes","attributeName","setAttribute","styleProperty","mapContainer","class","position","width","height","padding","margin","overflow","cursor","css","head","onmousedown","button","onwheel","_createMapContainer","loadingSpinnerIcon","_createLoadingSpinner","overlay","background","_createLeafletOverlay","indoorMapWatermark","draggable","display","transition","_createIndoorMapWatermark","oncontextmenu","toString","_createCanvas","loadingSpinner","LoadingSpinner","startSpinning","stopSpinning","onError","message","messageText","color","textContent","_createErrorMessage","onRemove","domElement","_domElement","_spinning","spin","timestamp","requestAnimationFrame","setPositionSmooth","el","disable3D","TRANSFORM","ElevationModeType","isValidElevationMode","elevationMode","HEIGHT_ABOVE_GROUND","HEIGHT_ABOVE_SEA_LEVEL","getElevationModeInt","elevationModeString","elevationModeInt","toLowerCase","Marker","on","_onDragStart","_onDrag","_onDragEnd","_elevationBeforeDrag","_isDragging","_latOffsetForDrag","_lngOffsetForDrag","setElevationMode","mode","getElevationMode","setIndoorMapWithFloorId","indoorMapFloorId","setIndoorMapWithFloorIndex","setOutdoor","baseReturnValue","_icon","screenPos","_setPos","setPosFunc","gecko","_shadow","_zIndex","zIndexOffset","_resetZIndex","bindPopup","flatPos","getPosition","flatLatLng","realLatLng","LatLng","marker","IndoorEntranceMarkerUpdater","map","_indoorsModule","_entranceMarkers","_layerGroup","layerGroup","_entranceIcon","icon","iconUrl","iconRetinaUrl","iconSize","iconAnchor","_createEntranceMarker","entrance","_marker","title","getIndoorMapName","enter","_showEntranceMarkers","event","addTo","removeAllEntranceMarkers","clearLayers","_eventType","MapMoveEvents","leafletMap","_onEvent","setEventCallbacks","cameraApi","setEventCallback","eventKey","MapModule","onUpdate","_dt","onDraw","season","time","weather","ThemesModule","super","_emscriptenApi","_season","_time","_weather","_shouldChangeTheme","_shouldChangeState","_updateTheme","themesApi","setTheme","setState","_tryMatchBuiltIn","caseInsensitiveMatchWithCollection","key","values","keyUpper","toUpperCase","item","localeCompare","_onThemesStreamingCompleted","themeInfo","setSeason","getSeason","setTime","getTime","setWeather","getWeather","setEnvironmentThemesManifest","environmentThemesManifest","setThemeManifest","Season","Summer","Time","Day","Weather","Clear","registerStreamingCompletedCallback","IndoorMap","indoorMapName","indoorMapSourceVendor","floorCount","floors","searchTags","exitFunc","_indoorMapId","_indoorMapName","_indoorMapSourceVendor","_floorCount","_floors","_searchTags","exit","getIndoorMapSourceVendor","getFloorCount","getFloors","getSearchTags","IndoorMapEntrance","_latLng","IndoorMapFloor","floorId","floorIndex","floorName","floorShortName","_floorId","_floorIndex","_floorName","_floorShortName","getFloorId","_getFloorId","getFloorName","getFloorShortName","IndoorWatermarkController","showWrldWatermark","_indoorWatermarkElement","_elementId","_showWrldWatermark","_eegeoVenderKey","_buildUrlForVendor","vendorKey","vendorKeyLower","vendor","vendorImageUrl","Image","src","showWatermarkForVendor","imageUrl","getElementById","hideWatermark","IndoorsModule","mapController","indoorId","headingDegrees","_mapController","_activeIndoorMap","_entrances","_pendingEnterTransition","_transitioningToIndoorMap","_indoorWatermarkController","_startingIndoorId","_startingFloorIndex","_center","_headingDegrees","_backgroundColor","_createIndoorMapObject","indoorsApi","getActiveIndoorMapId","mapName","getActiveIndoorMapName","sourceVendor","getActiveIndoorMapSourceVendor","getActiveIndoorMapFloorCount","_createFloorsArray","_createSearchTagsArray","floorNumber","getFloorNumber","push","userData","JSON","parse","getActiveIndoorMapUserData","search_menu_items","items","name","search_tag","icon_key","_executeIndoorMapEnteredCallbacks","indoorMap","_executeIndoorMapEnterFailedCallbacks","_executeIndoorMapExitedCallbacks","_executeIndoorMapFloorChangedCallbacks","_executeIndoorMapEntranceAddedCallbacks","indoorMapLatLng","_executeIndoorMapEntranceRemovedCallbacks","_executeIndoorMapLoadedCallbacks","_executeIndoorMapUnloadedCallbacks","_executeEntityClickedCallbacks","ids","idArray","split","_onCollapseStart","_onCollapse","_onCollapseEnd","_onExpandStart","_onExpand","_onExpandEnd","_enterIndoorMap","enterIndoorMap","_transitionToIndoorMap","orientation","_setIndoorTransitionCompleteEventListener","setNotificationCallbacks","indoorEntityApi","registerIndoorEntityPickedCallback","expandFloorsApi","setCollapseStartCallback","setCollapseCallback","setCollapseEndCallback","setExpandStartCallback","setExpandCallback","setExpandEndCallback","setBackgroundColor","setFloor","Number","ready","exitIndoorMap","index","getSelectedFloorIndex","setSelectedFloorIndex","moveUp","numberOfFloors","thisFloor","moveDown","assign","getFloorInterpolation","getFloorParam","getFloorHeightAboveSeaLevel","tryGetReadableName","tryGetFloorReadableName","tryGetFloorShortName","setFloorInterpolation","floorParam","setFloorParam","setFloorFromInterpolation","interpolationParam","t","expand","expandIndoorMap","collapse","collapseIndoorMap","setEntityHighlights","highlightColor","highlightBorderThickness","_indoorMapIdOrDefault","_borderThicknessOrDefault","setHighlights","clearEntityHighlights","clearHighlights","borderThickness","hideLabelsForEntity","entityName","hideLabelsForEntities","entityNames","showLabelsForEntity","showLabelsForEntities","showAllLabels","IndoorsPrototype","Mixin","Events","IdToObjectMap","_objects","insertObject","object","removeObjectById","idForObject","getObjectById","forEachItem","func","PreCacheOperationResult","_succeeded","getSucceeded","PrecacheOperation","operation","_operation","cancel","InternalPrecacheOperation","centre","_centre","_radius","_completionCallback","_cancelled","_executeCompletionCallback","success","getCentre","getRadius","isCancelled","notifyComplete","notifyCancelled","PrecacheModule","_operations","_pendingOperations","_beginPrecacheOperation","operationId","precacheApi","beginPrecacheOperation","_onPrecacheOperationCompleted","_onPrecacheOperationCancelled","callbackFunction","parameterValidationError","Error","_validatePrecacheParameters","internalOperation","registerCallbacks","dt","cancelledOperations","cancelPrecacheOperation","CameraModule","startLatLng","initialZoom","viewVerticallyLocked","_pendingSetViewData","_pendingSetViewToBoundsData","_isVerticallyLocked","_setView","_setViewToBounds","_setVerticallyLocked","getZoomLevel","parseFloat","getInterestLatLong","pitch","tiltDegrees","_setTiltDegrees","_setHeadingDegrees","PolygonsModule","_polygonIdToPolygons","_pendingPolygons","_createAndAdd","polygon","polygonId","geofenceApi","createGeofence","getPoints","getHoles","_getConfig","addPolygon","removePolygon","removeGeofence","splice","_colorNeedsChanged","setGeofenceColor","getColor","_onColorChanged","PolylineModule","_polylineIdToPolyline","_pendingPolylines","polyline","polylineId","polylineApi","createPolyline","addPolyline","removePolyline","destroyPolyline","updateNativeState","RoutingModule","apiKey","_apiKey","_parseMetadataTag","metadata","tag","decoratedTag","occurrence","postTag","slice","nextBracketIndex","substring","_parseRouteSteps","routeSteps","parsedSteps","level","routeStep","latLongPoints","parseInt","stepGeometry","j","lonlat","points","_parseRoutes","routingJson","results","routeIndex","legs","legIndex","getRoute","viaPoints","onLoadHandler","onErrorHandler","transportMode","url","_urlRoot","pointIndex","join","request","XMLHttpRequest","open","onload","routeLoadHandler","routeLoadErrorHandler","routeJson","responseText","multiroute","_routeParseHandler","abort","_cancelRequest","send","RenderingModule","_isMapCollapsed","_clearColor","renderingApi","getCameraRelativePosition","getNorthFacingOrientationMatrix","getCameraProjectionMatrix","getCameraOrientationMatrix","getLightingData","BuildingsModuleImpl","_nativeIdToBuildingHighlights","_callbackInvokedBeforeAssignement","_pendingBuildingHighlights","_notifyBuildingInformationReceivedCallback","buildingHighlight","nativeId","buildingsApi","createBuildingHighlight","_setNativeHandle","_notifyBuildingInformationReceived","addBuildingHighlight","removeBuildingHighlight","getId","destroyBuildingHighlight","notifyBuildingHighlightChanged","setHighlightColor","findIntersectionWithBuilding","ray","findBuildingAtScreenPoint","screenPoint","screenPointToRay","findBuildingAtLatLng","latLongToVerticallyDownRay","registerBuildingInformationReceivedCallback","_executeBuildingInformationReceivedCallback","isReady","setBuildingInformationReceivedCallback","callback","buildingHighlightId","buildingInformation","tryGetBuildingInformation","_setBuildingInformation","BuildingsModule","_buildingsModuleImpl","_this","_buildingInformationReceivedHandler","_getImpl","BuildingsModulePrototype","PropModule","_pendingProps","_props","_hasPendingEnableDisable","_pendingEnableDisable","_pendingServiceUrl","_hasPendingServiceUrl","_createAndAddArray","propArray","indoorMapIds","indoorMapFloorIds","names","latitudes","longitudes","elevations","elevationModes","headings","geometryIds","propIndex","prop","getName","getLocation","getGeometryId","propIds","propsApi","createProps","_executeIndoorMapEntitySetPropsLoadedCallbacks","_executeIndoorMapPopulationRequestCompletedCallbacks","httpStatusCode","addProp","propId","createProp","addProps","concat","removeProp","destroyProp","removeProps","destroyProps","setAutomaticIndoorMapPopulationEnabled","setIndoorMapPopulationServiceUrl","setIndoorMapEntitySetPropsLoadedCallback","setIndoorMapPopulationRequestCompletedCallback","_locationNeedsChanged","setLocation","_onLocationChanged","_headingDegreesNeedsChanged","_onHeadingDegreesChanged","_elevationNeedsChanged","_onElevationChanged","_elevationModeNeedsChanged","_onElevationModeChanged","_geometryIdNeedsChanged","setGeometryId","_onGeometryIdChanged","enabled","isAutomaticIndoorMapPopulationEnabled","serviceUrl","getIndoorMapEntitySetProps","tryGetIndoorMapEntitySetProps","PropPrototype","IndoorMapEntityInformationModuleImpl","_nativeIdToIndoorMapEntityInformation","_pendingIndoorEntityInformation","_notifyIndoorMapEntityInformationChangedCallback","indoorMapEntityInformation","indoorMapEntityInformationApi","createIndoorMapEntityInformation","_notifyIndoorMapEntityInformationChanged","addIndoorMapEntityInformation","removeIndoorMapEntityInformation","getNativeId","destroyIndoorMapEntityInformation","registerIndoorMapEntityInformationChangedCallback","_executeIndoorMapEntityInformationChangedCallback","setIndoorMapEntityInformationChangedCallback","indoorMapEntityInformationId","data","tryGetIndoorMapEntityInformation","_setData","IndoorMapEntityInformationModule","_indoorMapEntityInformationModuleImpl","_IndoorMapEntityInformationChangedHandler","IndoorMapEntityInformationModulePrototype","IndoorMapFloorOutlineInformationModuleImpl","_nativeIdToIndoorMapFloorOutlineInformation","_pendingIndoorMapFloorOutlineInformation","_notifyIndoorMapFloorOutlineInformationLoadedCallback","indoorMapFloorOutlineInformation","indoorMapFloorOutlineInformationApi","createIndoorMapFloorOutlineInformation","_fetchIndoorMapFloorOutlineInformation","addIndoorMapFloorOutlineInformation","removeIndoorMapFloorOutlineInformation","destroyIndoorMapFloorOutlineInformation","registerIndoorMapFloorOutlineInformationLoadedCallback","_executeIndoorMapFloorOutlineInformationLoadedCallback","setIndoorMapFloorOutlineInformationLoadedCallback","indoorMapFloorOutlineInformationId","getIndoorMapFloorOutlineInformationLoaded","tryGetIndoorMapFloorOutlineInformation","IndoorMapFloorOutlineInformationModule","_indoorMapFloorOutlineInformationModuleImpl","_IndoorMapFloorOutlineInformationLoadedHandler","IndoorMapFloorOutlineInformationModulePrototype","BlueSphereModule","_location","_isEnabled","_indoorMapFloorId","_elevation","_stateChanged","_showOrientation","isEnabled","setEnabled","setIndoorMap","isOrientationVisible","showOrientation","isVisible","blueSphereApi","MapRuntimeModule","mapRuntimeApi","onPause","onResume","_undefinedPoint","LayerPointMappingModule","_layerToLatLngsMapping","_pendingMappings","_createPendingLayers","_flatten","arr","reduce","flat","toFlatten","_getLayerId","_useWrldSdkPointMappingForLayer","getLatLngs","sourceLatLngArray","latLngsFlatArray","api","layerPointMappingApi","createPointMappingWithFloorIndex","indoorOptionsValid","getLatLngsForLayer","layerId","_updateMappings","_getDefaultLatLngsFromLayer","associatedFlatLatlngArray","_projectLatlngsRecursive","_latLngToLayerPoint","originalLatlngs","currentFlatIndex","ring","len","VersionModule","getVersion","versionApi","getPlatformVersion","getVersionHash","getPlatformVersionHash","HeatmapModule","_heatmapIdToHeatmap","_pendingHeatmaps","heatmap","heatmapId","heatmapApi","createHeatmap","addHeatmap","removeHeatmap","destroyHeatmap","FrameRateModule","_targetVSyncInterval","_throttledTargetFrameIntervalMilliseconds","_idleSecondsBeforeThrottle","_throttleWhenIdleEnabled","frameRateApi","removeFileExtension","fileName","extensionToRemove","extensionPosition","lastIndexOf","EegeoMapController","module","onMapRemoveCallback","_defaultOptions","indoorsEnabled","displayEntranceMarkers","coverageTreeManifest","zoomControl","zoomAnimation","minZoom","maxZoom","zoomSnap","showIndoorWrldWatermark","trafficEnabled","trafficDisableWhenEnteringIndoorMaps","indoorLabelsAlwaysHidden","frameRateThrottleWhenIdleEnabled","idleSecondsBeforeFrameRateThrottle","drawClearColor","indoorMapBackgroundColor","indoorSelectionTimeoutDuration","_mapId","_themesModule","PolygonModule","_routingModule","_renderingModule","_buildingsModule","_propModule","_indoorMapEntityInformationModule","_indoorMapFloorOutlineInformationModule","_blueSphereModule","_versionModule","_heatmapModule","_onMapRemoveCallback","_canvasId","_canvasWidth","_canvasHeight","_containerId","_mapContainer","_canvas","_Module","indoorsEnabledArg","EegeoLeafletMap","_indoorEntranceMarkerUpdater","gl","ctx","K","getExtension","loseContext","_mapMoveEvents","_modules","_resizeCanvas","eegeoApiPointer","emscriptenApiPointer","cwrap","_onInitialStreamingCompleted","errorMessage","deltaSeconds","newWidth","newHeight","EmscriptenMemory","emscriptenModule","_emscriptenModule","readDoubles","pointer","count","getValue","passDoubles","double_array","_malloc","setValue","_free","passString","string","utf8Length","lengthBytesUTF8","stringToUTF8","passStrings","string_array","strs","str","passInt32s","int32_array","stringifyPointer","ptr","UTF8ToString","createInt8Buffer","bufferLen","element_count","element_type","element_size_bytes","createInt32Buffer","elementCount","createDoubleBuffer","createBufferFromArray","number_array","createXBufferFunc","buffer","consumeBufferToArray","freeBuffer","createUtf8BufferFromString","consumeUtf8BufferToString","vec4ToRgba32","v","colorToRgba32","hex","replace","repeat","rgb","hexToRgba32","r","g","String","isNaN","colorArrayToVector4","colorObjectToVector4","EmscriptenGeofenceApi","_eegeoApiPointer","_removeGeofence","_setGeofenceColor","_createGeofenceFromRawCoords","_getElevationIsAboveSeaLevelFromConfig","offsetFromSeaLevel","_getAltitudeOffsetFromConfig","altitudeOffset","outerPoints","holes","coords","ringVertexCounts","coordsPointer","ringVertexCountsPointer","k","elevationModeAboveSeaLevel","colorVec4","rgba","colorToVec4","EmscriptenIndoorsApi","emscriptenMemory","_emscriptenApiPointer","_emscriptenMemory","_indoorsApi_RegisterIndoorMapCallbacks","_indoorsApi_EnterIndoorMap","_indoorsApi_ExitIndoorMap","_indoorsApi_HasActiveIndoorMap","_indoorsApi_GetActiveIndoorMapId","_indoorsApi_GetActiveIndoorMapName","_indoorsApi_GetActiveIndoorMapSourceVendor","_indoorsApi_GetActiveIndoorMapFloorCount","_indoorsApi_GetActiveIndoorMapUserData","_indoorsApi_GetSelectedFloorIndex","_indoorsApi_SetSelectedFloorIndex","_indoorsApi_GetFloorName","_indoorsApi_GetFloorShortName","_indoorsApi_GetFloorNumber","_indoorsApi_GetFloorHeightAboveSeaLevel","_indoorsApi_TryGetReadableNameBufferSize","_indoorsApi_TryGetReadableName","_indoorsApi_TryGetFloorReadableNameBufferSize","_indoorsApi_TryGetFloorReadableName","_indoorsApi_TryGetFloorShortNameBufferSize","_indoorsApi_TryGetFloorShortName","_indoorsApi_SetBackgroundColor","_indoorsApi_HideLabelsForEntities","_indoorsApi_ShowLabelsForEntities","_indoorsApi_ShowAllLabels","_onIndoorMapEntered","_onIndoorMapEnterFailed","_onIndoorMapExited","_onIndoorMapFloorChanged","_onIndoorMapEntryMarkerAdded","_onIndoorMapEntryMarkerRemoved","_onIndoorMapLoaded","_onIndoorMapUnloaded","_indoorMapEnteredHandler","_indoorMapEntryFailedHandler","_indoorMapExitedHandler","_indoorMapFloorChangedHandler","_executeEntryMarkerCallback","indoorMapIdPtr","indoorMapNamePtr","indoorMapLatLngPtr","latLngArray","_indoorMapEntryMarkerAddedHandler","_indoorMapEntryMarkerRemovedHandler","_indoorMapLoadedHandler","_indoorMapUnloadedHandler","addFunction","indoorMapEnteredCallback","indoorMapEnterFailedCallback","indoorMapExitedCallback","indoorMapFloorChangedCallback","indoorMapEntryMarkerAddedCallback","indoorMapEntryMarkerRemovedCallback","indoorMapLoadedCallback","indoorMapUnloadedCallback","hasActiveIndoorMap","bufferSizeBuf","bufferSize","stringBuffer","_tryGetNativeIndoorMapFloorString","nativeGetBufferSizeFunc","nativeGetStringFunc","colorRGBA32","resultStrings","stringArraySize","EmscriptenPrecacheApi","_cancelPrecacheOperation","_setPrecacheCallbacks","_cancelCallback","_completeCallback","completeCallback","cancelCallback","removeFunction","latlong","EmscriptenSpacesApi","_worldToScreenWrap","_screenToTerrainPointWrap","_screenToIndoorPointWrap","_getAltitudeAtLatLngWrap","_getUpdatedAltitudeAtLatLngWrap","_getMortonKeyAtLatLngWrap","_getMortonKeyCenterWrap","_getMortonKeyCornersWrap","_spacesApi_ScreenPointToRay","_spacesApi_LatLongToVerticallyDownRay","_screenToLatLng","screenX","screenY","raycastFunc","latLngAltArray","foundWorldPoint","resultArray","arraySize","long","alt","_worldToScreen","screenToTerrainPoint","screenToIndoorPoint","getUpdatedAltitudeAtLatLng","previousHeight","previousLevel","altitudeUpdated","_getUpdatedAltitudeAtLatLng","resultRayBuffer","origin","direction","resultString","_getMortonKeyAtLatLng","latLngCenterArray","_getMortonKeyCenter","latLngCornersArray","_getMortonKeyCorners","EmscriptenThemesApi","_setTheme","_setState","_setThemeManifest","_setCallback","themeName","stateName","transitionTime","themeManifest","EmscriptenCameraApi","_cameraApi_setViewUsingZenithAngle","_cameraApi_setViewToBounds","_cameraApi_getDistanceToInterest","_cameraApi_getInterestLatLong","_cameraApi_getPitchDegrees","_cameraApi_getHeadingDegrees","_cameraApi_setEventCallback","_cameraApi_getDistanceFromZoomLevel","_cameraApi_getZoomLevel","_cameraApi_setVerticallyLocked","animated","getDistanceFromZoomLevel","modifyLocation","northEast","southWest","_northEast","_southWest","latLong","zoomLevel","EmscriptenExpandFloorsApi","_getFloorParam","_setFloorParam","_expandIndoorMap","_collapseIndoorMap","_setCollapseStartCallback","_setCollapseCallback","_setCollapseEndCallback","_setExpandStartCallback","_setExpandCallback","_setExpandEndCallback","EmscriptenIndoorEntityApi","_indoorEntityApi_SetIndoorEntityPickedCallback","_indoorEntityApi_SetHighlightsWithBorderThickness","_indoorEntityApi_ClearHighlights","_indoorEntityApi_ClearAllHighlights","_indoorEntityPickedCallback","_onIndoorEntityPicked","idsPtr","doubleArray","_setHighlights","_clearHighlights","BuildingHighlight","_id","_color","_buildingInformation","getOptions","setColor","getBuildingInformation","BuildingHighlightSelectionType","BuildingHighlightOptions","_selectionLocationLatLng","_selectionScreenPoint","_selectionMode","_informationOnly","highlightBuildingAtLocation","SELECT_AT_LOCATION","highlightBuildingAtScreenPoint","SELECT_AT_SCREEN_POINT","informationOnly","getSelectionMode","getSelectionLocation","getSelectionScreenPoint","getIsInformationOnly","buildingHighlightOptions","BuildingInformation","buildingId","buildingDimensions","buildingContours","_buildingId","_buildingDimensions","_buildingContours","getBuildingId","getBuildingDimensions","getBuildingContours","toJson","building_id","building_dimensions","building_contours","_x","BuildingDimensions","baseAltitude","topAltitude","centroid","_baseAltitude","_topAltitude","_centroid","getBaseAltitude","getTopAltitude","getCentroid","base_altitude","top_altitude","BuildingContour","bottomAltitude","_bottomAltitude","_points","getBottomAltitude","bottom_altitude","IndoorMapEntityInformationLoadStateType","EmscriptenBuildingsApi","_buildingsApi_SetBuildingHighlightChangedCallback","_buildingsApi_CreateHighlightAtLocation","_buildingsApi_CreateHighlightAtScreenPoint","_buildingsApi_DestroyHighlight","_buildingsApi_SetHighlightColor","_buildingsApi_TryGetBuildingInformationBufferSizes","_buildingsApi_TryGetBuildingInformation","_buildingsApi_TryFindIntersectionWithBuilding","shouldCreateView","buildingIdSizeBuf","contourPointsSizeBuf","buildingContoursSizeBuf","buildingIdSize","contourPointsSize","buildingContoursSize","buildingIdBuf","baseAltitudeBuf","topAltitudeBuf","centroidBuf","contourPointsLatLngDoublesBuf","contourPointCountsBuf","contourBottomAltitudeBuf","contourTopAltitudeBuf","contourPointsLatLngDoubles","contourPointCounts","contourBottomAltitudes","contourTopAltitudes","pointBufferIndex","contourIndex","pointCount","contour","rayBuffer","intersectionLatLngAltBuffer","didIntersect","found","EmscriptenRenderingApi","_renderingApi_SetMapCollapsed","_renderingApi_SetClearColor","_renderingApi_GetCameraRelativePosition","_renderingApi_GetCameraProjectionMatrix","_renderingApi_GetCameraOrientationMatrix","_renderingApi_GetLightingData","_renderingApi_GetNorthFacingOrientationMatrix","clearColorRGBA32","renderPosition","projection","lightingData","back","fill","ambient","EmscriptenLayerPointMappingApi","_createPointMappingWithFloorIndex","_getPointsOnMapForLayer","_createLatLngsNumberArray","latLngsNumberArray","destBaseIndex","latLngCount","resultLatLngAltDoubles","expectedArrayLength","resultLatLngAlts","resultIndex","IndoorMapEntitySetProp","geometryId","_name","_geometryId","_elevationMode","EmscriptenPropsApi","_propsApi_createProp","_propsApi_createProps","_propsApi_destroyProp","_propsApi_destroyProps","_propsApi_propExists","_propsApi_setLocation","_propsApi_setElevation","_propsApi_setElevationMode","_propsApi_setGeometryId","_propsApi_setHeadingDegrees","_propsApi_setAutomaticIndoorMapPopulationEnabled","_propsApi_isAutomaticIndoorMapPopulationEnabled","_propsApi_getIndoorMapPropCount","_propsApi_tryGetIndoorMapPropDataBufferSizes","_propsApi_tryGetIndoorMapPropData","_propsApi_setIndoorMapPopulationServiceUrl","_propsApi_setIndoorMapEntitySetPropsLoadedCallback","_propsApi_setIndoorMapPopulationRequestCompletedCallback","_indoorMapEntitySetPropsLoadedCallback","registerIndoorMapEntitySetPropsLoadedHandler","indoorMapEntitySetPropsLoadedHandler","latitude","longitude","indoorMapIdArray","floorIdArray","nameArray","latitudeArray","longitudeArray","elevationArray","elevationModeArray","headingDegreesArray","geometryIdArray","propCount","out_propIdsBuffer","elevationModeIntArray","floorIdBuffer","latitudeBuffer","longitudeBuffer","elevationBuffer","elevationModeBuffer","headingDegreesBuffer","indoorMapIdArrayPtr","indoorMapIdArraySize","nameArrayPtr","nameArraySize","geometryIdArrayPtr","geometryIdArraySize","propIdArray","propIdArrayPtr","propIdArraySize","propExists","latitudeDegrees","longitudeDegrees","indoorMapPerPropNameSizesBuf","indoorMapPerPropModelSizesBuf","indoorMapPropBufferSizesBuf","indoorMapPerPropNameSizes","indoorMapPerPropModelSizes","indoorMapPropBufferSizes","indoorMapPropModelTotalSize","indoorMapPropStringNamesBuf","indoorMapPropStringModelsBuf","indoorMapPropLatLngBuf","indoorMapPropHeightBuf","indoorMapPropOrientationBuf","indoorMapPropStringNames","indoorMapPropStringModels","indoorMapPropLatLngs","indoorMapPropHeights","indoorMapPropOrientation","indoorMapEntityPropList","nameBufferHead","modelBufferHead","nameBufferEnd","modelBufferEnd","model","IndoorMapEntityInformation","_nativeId","_indoorMapEntities","_loadState","getIndoorMapEntities","getLoadState","IndoorMapEntities","LoadState","NONE","PARTIAL","COMPLETE","IndoorMapEntity","indoorMapEntityId","outline","_indoorMapEntityId","_position","_outline","getIndoorMapEntityId","getOutline","HeatmapOcclusionMapFeature","EmscriptenIndoorMapEntityInformationApi","_indoorEntityInformationApi_IndoorMapEntityInformationChangedCallback","_indoorEntityInformationApi_CreateIndoorMapEntityInformation","_indoorEntityInformationApi_DestroyIndoorMapEntityInformation","_indoorEntityInformationApi_TryGetIndoorMapEntityCountBuffer","_indoorEntityInformationApi_TryGetIndoorMapEntityInformationLoadState","_indoorEntityInformationApi_TryGetIndoorMapEntityBuffersSize","_indoorEntityInformationApi_TryGetIndoorMapEntityModels","indoorEntityInformation","IndoorMapEntityInformationId","loadStateBuf","indoorMapEntityInformationLoadState","indoorMapEntitiesCountBuf","indoorMapEntityCount","indoorMapEntityBufferSizesBuf","indoorMapEntityIdsSizesBuf","indoorMapEntityBufferSize","indoorMapEntityStringIdSizes","indoorMapEntityIdsTotalSize","latLngsPerContourSize","latLngsSize","indoorMapEntityStringIdsBuf","indoorMapFloorIdBuf","positionLatLngBuf","contoursPerPolygonBuf","latLngsPerContourBuf","latLngsBuf","indoorMapEntityStringIds","indoorMapEntityFloorIds","positionLatLng","contoursPerPolygon","latLngsPerContour","latLngsDegrees","indoorMapEntitiesList","idBufferHead","latLngsPerContourHead","latLngsDegreesHead","idBufferEnd","indoorMapEntityFloorId","polygonPoints","latLngsPerContourEndIndex","latLngsPerContourIndex","contourPoints","latLngsDegreesEndIndex","entity","IndoorMapFloorOutlinePolygon","outerRing","innerRings","_outerRing","_innerRings","getOuterRing","getInnerRings","IndoorMapFloorOutlinePolygonRing","latLngPoints","_latLngPoints","getLatLngPoints","EmscriptenIndoorMapFloorOutlineInformationApi","_indoorMapFloorOutlineInformationApi_IndoorMapFloorOutlineInformationLoadedCallback","_indoorMapFloorOutlineInformationApi_CreateIndoorMapFloorOutlineInformation","_indoorMapFloorOutlineInformationApi_DestroyIndoorMapFloorOutlineInformation","_indoorMapFloorOutlineInformationApi_GetIndoorMapFloorOutlineInformationLoaded","_indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlineBufferSize","_indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygonBufferSizes","_indoorMapFloorOutlineInformationApi_TryGetIndoorMapFloorOutlinePolygon","indoorMapFloorOutlinesCountBuf","indoorMapFloorOutlinesCount","outlinePolygons","outerRingPointCountBuf","innerRingsCountBuf","innerRingsTotalPointCountBuf","outerRingPointCount","innerRingsCount","innerRingsTotalPointCount","outerRingPointsLatLngDoublesBuf","innerRingsPointCountBuf","innerRingPointsLatLngDoublesBuf","outerRingPointsLatLngDoubles","innerRingsPointCount","innerRingPointsLatLngDoubles","_getOutlinePolygonRing","innerRingBufferIndex","innerRing","outlinePolygon","doublesLatLngArray","startIndex","ringPoints","EmscriptenPolylineApi","_polylineApi_createPolyline","_polylineApi_destroyPolyline","_polylineApi_setIndoorMap","_polylineApi_setElevation","_polylineApi_setStyleAttributes","perPointElevations","anyAltitudes","altOrDefault","coordsBuf","perPointElevationsBuf","getWidth","miterLimit","getMiterLimit","_needsNativeUpdate","EmscriptenBlueSphereApi","_blueSphereApi_setEnabled","_blueSphereApi_setCoordinate","_blueSphereApi_setElevation","_blueSphereApi_setIndoorMap","_blueSphereApi_setHeadingDegrees","_blueSphereApi_showOrientation","EmscriptenMapRuntimeApi","_pauseWebgl","_resumeWebgl","_removeWebgl","EmscriptenVersionApi","_versionApi_GetPlatformVersionStringSize","_versionApi_TryGetPlatformVersionString","_versionApi_GetPlatformHashStringSize","_versionApi_TryGetPlatformHashString","_tryGetNativeVersionString","Heatmap","Layer","Class","dataCoordProperty","dataWeightProperty","weightMin","weightMax","resolutionPixels","textureBorderPercent","useApproximation","densityStops","stop","gain","densityBlend","interpolateDensityByZoom","zoomMin","zoomMax","colorGradient","opacity","intensityBias","intensityScale","occludedMapFeatures","BUILDINGS","TREES","occludedAlpha","occludedSaturation","occludedBrightness","_loadPointData","pointData","weightedCoords","pointDatum","weight","_pointDatum","_getArrayDepth","array","arrayDepth","testElement","_loadLatLngAlts","_loadPolygonRings","coordsArray","polygonRings","holeCoords","_loadDensityParams","densityParams","_loadDensityStops","densityStopsArray","densityStopsSet","_loadColorStop","colorStopParams","_loadColorGradient","gradientStopsArray","gradientStop","setOptions","_pointData","getData","setData","_changedFlags","getPolygonPoints","getWeightMin","getWeightMax","getResolutionPixels","getTextureBorderPercent","getUseApproximation","getDensityStops","getDensityBlend","getInterpolateDensityByZoom","getZoomMin","getZoomMax","getColorGradient","getOpacity","getIntensityBias","getIntensityScale","getOccludedMapFeatures","getOccludedAlpha","getOccludedSaturation","getOccludedBrightness","setDensityBlend","min","setInterpolateDensityByZoom","setZoomMin","setZoomMax","setIntensityBias","setIntensityScale","setOpacity","setColorGradient","setResolution","resolution","setDensityStops","setUseApproximation","setWeightMin","setWeightMax","setPolygonPoints","_update","beforeAdd","onAdd","occludedStyle","_anyChanged","some","Boolean","_getChangedFlags","_clearChangedFlags","EmscriptenHeatmapApi","_heatmapApi_createHeatmap","_heatmapApi_destroyHeatmap","_heatmapApi_setIndoorMap","_heatmapApi_setElevation","_heatmapApi_setDensityBlend","_heatmapApi_setInterpolateDensityByZoom","_heatmapApi_setIntensityBias","_heatmapApi_setIntensityScale","_heatmapApi_setOpacity","_heatmapApi_setColorGradient","_heatmapApi_setResolution","_heatmapApi_setHeatmapDensities","_heatmapApi_useApproximation","_heatmapApi_setData","_buildFlatData","dataFlat","polygonCoords","polygonRingVertexCounts","polygonVertexCoordsBuffer","polygonRingVertexCountsBuffer","pointDataBuf","heatmapDensityStops","heatmapRadii","heatmapGains","density","gradientStops","gradientColors","gradient","heatmapDensityStopsBuffer","heatmapRadiiBuffer","heatmapGainsBuffer","gradientStopsBuffer","gradientColorsBuffer","occludedMapFeaturesInt","occlusionFeature","GROUND","TRANSPORT","occludedMapFeaturesToInt","changedFlags","EmscriptenFrameRateApi","_frameRateApi_SetTargetVSyncInterval","_frameRateApi_SetThrottledTargetFrameInterval","_frameRateApi_SetIdleSecondsBeforeThrottle","_frameRateApi_SetThrottleWhenIdleEnabled","_frameRateApi_CancelThrottle","throttledTargetFrameIntervalMS","EmscriptenApi","onUpdateCallback","onDrawCallback","onInitialStreamingCompletedCallback","_setTopLevelCallbacks","_baseUrl","_mapObjects","_emscriptenStartedLoading","_emscriptenFinishedLoading","_mapsWaitingInitialization","onEmscriptenLoaded","window","createWrldModule","Circle","_project","degToRad","latR","_mRadius","lngR","forwardLatLng","rightLatLng","_point","distanceTo","_radiusY","_updateBounds","circle","Polygon","setLatLngs","_setLatLngs","_convertLatLngs","Polyline","addLatLng","Rectangle","rectangle","Prop","__geometryIdNeedsChanged","__locationNeedsChanged","__headingDegreesNeedsChanged","__elevationNeedsChanged","__elevationModeNeedsChanged","_holes","_config","__colorNeedsChanged","addHole","loadLatLngs","holeLatLng","coord","setStyle","IndoorMapFloorOutlineInformation","_outlinePolygons","_isLoaded","getIndoorMapFloorOutlinePolygons","getIsLoaded","wrldModule","script","body","Module","exitCode","createEmscriptenModule","elementOrId","HTMLElement","findMapContainerElement","mapApiObject","Wrld","Default","imagePath"],"mappings":"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"}