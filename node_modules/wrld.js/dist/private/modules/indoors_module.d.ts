export default IndoorsModule;
declare function IndoorsModule(emscriptenApi: any, mapController: any, mapId: any, indoorId: any, floorIndex: any, center: any, headingDegrees: any, zoom: any, showWrldWatermark: any, backgroundColor: any): void;
declare class IndoorsModule {
    constructor(emscriptenApi: any, mapController: any, mapId: any, indoorId: any, floorIndex: any, center: any, headingDegrees: any, zoom: any, showWrldWatermark: any, backgroundColor: any);
    onInitialized: () => void;
    onInitialStreamingCompleted: () => void;
    exit: () => IndoorsModule;
    isIndoors: () => boolean;
    getActiveIndoorMap: () => any;
    getFloor: () => any;
    setFloor: (floor: any) => any;
    moveUp: (numberOfFloors: any) => any;
    moveDown: (numberOfFloors: any) => any;
    enter: (indoorMap: any, config: any) => boolean;
    getFloorInterpolation: () => number;
    getFloorHeightAboveSeaLevel: (floorIndex: any) => any;
    tryGetReadableName: (indoorMapId: any) => any;
    tryGetFloorReadableName: (indoorMapId: any, indoorMapFloorId: any) => any;
    tryGetFloorShortName: (indoorMapId: any, indoorMapFloorId: any) => any;
    setFloorInterpolation: (value: any) => IndoorsModule;
    setFloorFromInterpolation: (interpolationParam: any) => any;
    expand: () => IndoorsModule;
    collapse: () => IndoorsModule;
    setEntityHighlights: (ids: any, highlightColor: any, indoorMapId: any, highlightBorderThickness: any) => void;
    clearEntityHighlights: (ids: any, indoorMapId: any) => void;
    setBackgroundColor: (color: any) => void;
    hideLabelsForEntity: (entityName: any) => IndoorsModule;
    hideLabelsForEntities: (entityNames: any) => IndoorsModule;
    showLabelsForEntity: (entityName: any) => IndoorsModule;
    showLabelsForEntities: (entityNames: any) => IndoorsModule;
    showAllLabels: () => IndoorsModule;
}
