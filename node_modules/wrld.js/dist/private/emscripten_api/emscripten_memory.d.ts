export function EmscriptenMemory(emscriptenModule: any): void;
export class EmscriptenMemory {
    constructor(emscriptenModule: any);
    readDoubles: (pointer: any, count: any) => any[];
    passDoubles: (double_array: any, func: any) => void;
    passString: (string: any, func: any) => void;
    passStrings: (string_array: any, func: any) => void;
    passInt32s: (int32_array: any, func: any) => void;
    stringifyPointer: (ptr: any) => any;
    createInt8Buffer: (bufferLen: any) => {
        ptr: any;
        element_count: any;
        element_type: string;
        element_size_bytes: number;
    };
    createInt32Buffer: (elementCount: any) => {
        ptr: any;
        element_count: any;
        element_type: string;
        element_size_bytes: number;
    };
    createDoubleBuffer: (elementCount: any) => {
        ptr: any;
        element_count: any;
        element_type: string;
        element_size_bytes: number;
    };
    createBufferFromArray: (number_array: any, createXBufferFunc: any) => any;
    consumeBufferToArray: (buffer: any) => any[];
    freeBuffer: (buffer: any) => void;
    createUtf8BufferFromString: (str: any) => {
        ptr: any;
        element_count: any;
        element_type: string;
        element_size_bytes: number;
    };
    consumeUtf8BufferToString: (buffer: any) => any;
}
export default EmscriptenMemory;
